{"ast":null,"code":"import { useDOMRef, useSlotProps, useStyleProps } from \"@react-spectrum/utils\";\nimport _react, { forwardRef } from \"react\";\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\n\nfunction $cd1d826835b2023780490c06384f98f$var$Text(props, ref) {\n  props = useSlotProps(props, 'text');\n\n  let {\n    children\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n  return /*#__PURE__*/_react.createElement(\"span\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps), styleProps, {\n    ref: domRef\n  }), children);\n}\n/**\n * Text represents text with no specific semantic meaning.\n */\n\n\nexport const Text = forwardRef($cd1d826835b2023780490c06384f98f$var$Text);\nconst $aa77dc2a68508e850218bafe906e5ce7$var$slotDOMProps = new Set(['aria-current']);\n\nfunction $aa77dc2a68508e850218bafe906e5ce7$var$Heading(props, ref) {\n  let slotProps = useSlotProps({}, 'heading');\n  props = mergeProps(slotProps, props);\n  let domProps = mergeProps(filterDOMProps(props), filterDOMProps(slotProps, {\n    propNames: $aa77dc2a68508e850218bafe906e5ce7$var$slotDOMProps\n  }));\n\n  let {\n    children,\n    level = 3\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"level\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n  let HeadingTag = \"h\" + level;\n  return /*#__PURE__*/_react.createElement(HeadingTag, _babelRuntimeHelpersEsmExtends({}, domProps, styleProps, {\n    ref: domRef\n  }), children);\n}\n/**\n * Heading is used to create various levels of typographic hierarchies.\n */\n\n\nexport const Heading = forwardRef($aa77dc2a68508e850218bafe906e5ce7$var$Heading);\n\nfunction $a9fec89ba8c4f7df5ed750bd9c0c7e3$var$Keyboard(props, ref) {\n  props = useSlotProps(props, 'keyboard');\n\n  let {\n    children\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n  return /*#__PURE__*/_react.createElement(\"kbd\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps), styleProps, {\n    dir: \"ltr\",\n    ref: domRef\n  }), children);\n}\n/**\n * Keyboard represents text that specifies a keyboard command.\n */\n\n\nexport const Keyboard = forwardRef($a9fec89ba8c4f7df5ed750bd9c0c7e3$var$Keyboard);","map":{"version":3,"sources":["packages/@react-spectrum/text/src/Text.tsx","packages/@react-spectrum/text/src/Heading.tsx","packages/@react-spectrum/text/src/Keyboard.tsx"],"names":["props","useSlotProps","children","otherProps","styleProps","useStyleProps","domRef","useDOMRef","filterDOMProps","_Text","forwardRef","slotDOMProps","slotProps","mergeProps","domProps","propNames","level","HeadingTag","_Heading","_Keyboard"],"mappings":";;;;;;AAkBA,SAAA,yCAAA,CAAA,KAAA,EAAA,GAAA,EAA6C;AAC3CA,EAAAA,KAAK,GAAGC,YAAY,CAAA,KAAA,EAApBD,MAAoB,CAApBA;;AACA,MAAI;AACFE,IAAAA;AADE,MAAJ,KAAA;AAAA,MAEKC,UAFL,GAAA,mDAAA,CAAA,KAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAIA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;AACA,MAAIC,MAAM,GAAGC,SAAS,CAAtB,GAAsB,CAAtB;AAEA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,MAAA,EAAA,8BAAA,CAAA,EAAA,EAAUC,cAAc,CAAxB,UAAwB,CAAxB,EAAA,UAAA,EAAA;AAAsD,IAAA,GAAG,EAAEF;AAA3D,GAAA,CAAA,EADF,QACE,CADF;AAKD;AAED;;;;;OAGA,MAAMG,IAAK,GAAGC,UAAU,CAAxB,yCAAwB,CAAxB;ACnBA,MAAMC,kDAAY,GAAG,IAAA,GAAA,CAAQ,CAA7B,cAA6B,CAAR,CAArB;;AAEA,SAAA,6CAAA,CAAA,KAAA,EAAA,GAAA,EAAuE;AACrE,MAAIC,SAAS,GAAGX,YAAY,CAAA,EAAA,EAA5B,SAA4B,CAA5B;AACAD,EAAAA,KAAK,GAAGa,UAAU,CAAA,SAAA,EAAlBb,KAAkB,CAAlBA;AAEA,MAAIc,QAAQ,GAAGD,UAAU,CACvBL,cAAc,CADS,KACT,CADS,EAEvBA,cAAc,CAAA,SAAA,EAAY;AAACO,IAAAA,SAAS,EAAEJ;AAAZ,GAAZ,CAFS,CAAzB;;AAKA,MAAI;AAAA,IAAA,QAAA;AAEFK,IAAAA,KAAK,GAAG;AAFN,MAAJ,KAAA;AAAA,MAGKb,UAHL,GAAA,mDAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AAKA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;AACA,MAAIC,MAAM,GAAGC,SAAS,CAAtB,GAAsB,CAAtB;AACA,MAAIU,UAAU,GAAA,MAAd,KAAA;AAEA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,UAAA,EAAA,8BAAA,CAAA,EAAA,EAAA,QAAA,EAAA,UAAA,EAAA;AAA0C,IAAA,GAAG,EAAEX;AAA/C,GAAA,CAAA,EADF,QACE,CADF;AAKD;AAED;;;;;OAGA,MAAMY,OAAQ,GAAGR,UAAU,CAA3B,6CAA2B,CAA3B;;AC9BA,SAAA,6CAAA,CAAA,KAAA,EAAA,GAAA,EAAqD;AACnDV,EAAAA,KAAK,GAAGC,YAAY,CAAA,KAAA,EAApBD,UAAoB,CAApBA;;AACA,MAAI;AACFE,IAAAA;AADE,MAAJ,KAAA;AAAA,MAEKC,UAFL,GAAA,mDAAA,CAAA,KAAA,EAAA,CAAA,UAAA,CAAA,CAAA;;AAIA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;AACA,MAAIC,MAAM,GAAGC,SAAS,CAAtB,GAAsB,CAAtB;AAEA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,KAAA,EAAA,8BAAA,CAAA,EAAA,EAASC,cAAc,CAAvB,UAAuB,CAAvB,EAAA,UAAA,EAAA;AAAqD,IAAA,GAAG,EAAxD,KAAA;AAA+D,IAAA,GAAG,EAAEF;AAApE,GAAA,CAAA,EADF,QACE,CADF;AAKD;AAED;;;;;OAGA,MAAMa,QAAS,GAAGT,UAAU,CAA5B,6CAA4B,CAA5B","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {forwardRef} from 'react';\nimport {TextProps} from '@react-types/text';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nfunction Text(props: TextProps, ref: DOMRef) {\n  props = useSlotProps(props, 'text');\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  return (\n    <span {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </span>\n  );\n}\n\n/**\n * Text represents text with no specific semantic meaning.\n */\nconst _Text = forwardRef(Text);\nexport {_Text as Text};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps, mergeProps} from '@react-aria/utils';\nimport {HeadingProps} from '@react-types/text';\nimport React, {ElementType, forwardRef} from 'react';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nconst slotDOMProps = new Set(['aria-current']);\n\nfunction Heading(props: HeadingProps, ref: DOMRef<HTMLHeadingElement>) {\n  let slotProps = useSlotProps({}, 'heading');\n  props = mergeProps(slotProps, props);\n\n  let domProps = mergeProps(\n    filterDOMProps(props),\n    filterDOMProps(slotProps, {propNames: slotDOMProps})\n  );\n\n  let {\n    children,\n    level = 3,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n  let HeadingTag = `h${level}` as ElementType;\n\n  return (\n    <HeadingTag {...domProps} {...styleProps} ref={domRef}>\n      {children}\n    </HeadingTag>\n  );\n}\n\n/**\n * Heading is used to create various levels of typographic hierarchies.\n */\nconst _Heading = forwardRef(Heading);\nexport {_Heading as Heading};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {KeyboardProps} from '@react-types/text';\nimport React, {forwardRef} from 'react';\nimport {useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\n\nfunction Keyboard(props: KeyboardProps, ref: DOMRef) {\n  props = useSlotProps(props, 'keyboard');\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  return (\n    <kbd {...filterDOMProps(otherProps)} {...styleProps} dir=\"ltr\" ref={domRef}>\n      {children}\n    </kbd>\n  );\n}\n\n/**\n * Keyboard represents text that specifies a keyboard command.\n */\nconst _Keyboard = forwardRef(Keyboard);\nexport {_Keyboard as Keyboard};\n"]},"metadata":{},"sourceType":"module"}