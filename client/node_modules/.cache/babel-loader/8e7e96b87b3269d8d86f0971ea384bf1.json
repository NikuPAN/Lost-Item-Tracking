{"ast":null,"code":"import { useLocale } from \"@react-aria/i18n\";\nimport { flushSync } from \"react-dom\";\nimport _react, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useVirtualizerState, Rect, Size } from \"@react-stately/virtualizer\";\nimport { focusWithoutScrolling, mergeProps, useLayoutEffect, useResizeObserver } from \"@react-aria/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nlet $ab2f7b53fd9a90341bfb23007aad6b31$var$cachedRTLResult = null; // Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/bvaughn/react-window/blob/master/src/createGridComponent.js\n// According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nexport function getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n\n  if ($ab2f7b53fd9a90341bfb23007aad6b31$var$cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      $ab2f7b53fd9a90341bfb23007aad6b31$var$cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n\n      if (outerDiv.scrollLeft === 0) {\n        $ab2f7b53fd9a90341bfb23007aad6b31$var$cachedRTLResult = 'negative';\n      } else {\n        $ab2f7b53fd9a90341bfb23007aad6b31$var$cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n    return $ab2f7b53fd9a90341bfb23007aad6b31$var$cachedRTLResult;\n  }\n\n  return $ab2f7b53fd9a90341bfb23007aad6b31$var$cachedRTLResult;\n}\nexport function getScrollLeft(node, direction) {\n  let {\n    scrollLeft\n  } = node; // scrollLeft in rtl locales differs across browsers, so normalize.\n  // See comment by getRTLOffsetType below for details.\n\n  if (direction === 'rtl') {\n    let {\n      scrollWidth,\n      clientWidth\n    } = node;\n\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n\n      case 'positive-descending':\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n    }\n  }\n\n  return scrollLeft;\n}\nexport function setScrollLeft(node, direction, scrollLeft) {\n  if (direction === 'rtl') {\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n\n      case 'positive-ascending':\n        break;\n\n      default:\n        {\n          const {\n            clientWidth,\n            scrollWidth\n          } = node;\n          scrollLeft = scrollWidth - clientWidth - scrollLeft;\n          break;\n        }\n    }\n  }\n\n  node.scrollLeft = scrollLeft;\n}\n\nfunction $db588eb9c9dbc1dd892f18503cee21$var$ScrollView(props, ref) {\n  let {\n    contentSize,\n    onVisibleRectChange,\n    children,\n    innerStyle,\n    sizeToFit,\n    onScrollStart,\n    onScrollEnd,\n    scrollDirection = 'both'\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"contentSize\", \"onVisibleRectChange\", \"children\", \"innerStyle\", \"sizeToFit\", \"onScrollStart\", \"onScrollEnd\", \"scrollDirection\"]);\n\n  let defaultRef = useRef();\n  ref = ref || defaultRef;\n  let state = useRef({\n    scrollTop: 0,\n    scrollLeft: 0,\n    scrollEndTime: 0,\n    scrollTimeout: null,\n    width: 0,\n    height: 0,\n    isScrolling: false\n  }).current;\n  let {\n    direction\n  } = useLocale();\n  let [isScrolling, setScrolling] = useState(false);\n  let onScroll = useCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (props.onScroll) {\n      props.onScroll(e);\n    }\n\n    flushSync(() => {\n      let scrollTop = e.currentTarget.scrollTop;\n      let scrollLeft = getScrollLeft(e.currentTarget, direction); // Prevent rubber band scrolling from shaking when scrolling out of bounds\n\n      state.scrollTop = Math.max(0, Math.min(scrollTop, contentSize.height - state.height));\n      state.scrollLeft = Math.max(0, Math.min(scrollLeft, contentSize.width - state.width));\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, state.width, state.height));\n\n      if (!state.isScrolling) {\n        state.isScrolling = true;\n        setScrolling(true);\n\n        if (onScrollStart) {\n          onScrollStart();\n        }\n      } // So we don't constantly call clearTimeout and setTimeout,\n      // keep track of the current timeout time and only reschedule\n      // the timer when it is getting close.\n\n\n      let now = Date.now();\n\n      if (state.scrollEndTime <= now + 50) {\n        state.scrollEndTime = now + 300;\n        clearTimeout(state.scrollTimeout);\n        state.scrollTimeout = setTimeout(() => {\n          state.isScrolling = false;\n          setScrolling(false);\n          state.scrollTimeout = null;\n\n          if (onScrollEnd) {\n            onScrollEnd();\n          }\n        }, 300);\n      }\n    });\n  }, [props, direction, state, contentSize, onVisibleRectChange, onScrollStart, onScrollEnd]); // eslint-disable-next-line arrow-body-style\n\n  useEffect(() => {\n    return () => {\n      clearTimeout(state.scrollTimeout);\n    };\n  }, []);\n  let updateSize = useCallback(() => {\n    let dom = ref.current;\n\n    if (!dom) {\n      return;\n    }\n\n    let w = dom.clientWidth;\n    let h = dom.clientHeight;\n\n    if (sizeToFit && contentSize.width > 0 && contentSize.height > 0) {\n      if (sizeToFit === 'width') {\n        w = Math.min(w, contentSize.width);\n      } else if (sizeToFit === 'height') {\n        h = Math.min(h, contentSize.height);\n      }\n    }\n\n    if (state.width !== w || state.height !== h) {\n      state.width = w;\n      state.height = h;\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, w, h));\n    }\n  }, [onVisibleRectChange, ref, state, sizeToFit, contentSize]);\n  useLayoutEffect(() => {\n    updateSize();\n  }, [updateSize]);\n  useResizeObserver({\n    ref,\n    onResize: updateSize\n  });\n\n  let style = _babelRuntimeHelpersEsmExtends({\n    // Reset padding so that relative positioning works correctly. Padding will be done in JS layout.\n    padding: 0\n  }, otherProps.style);\n\n  if (scrollDirection === 'horizontal') {\n    style.overflowX = 'auto';\n    style.overflowY = 'hidden';\n  } else if (scrollDirection === 'vertical') {\n    style.overflowY = 'auto';\n    style.overflowX = 'hidden';\n  } else {\n    style.overflow = 'auto';\n  }\n\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, otherProps, {\n    style: style,\n    ref: ref,\n    onScroll: onScroll\n  }), /*#__PURE__*/_react.createElement(\"div\", {\n    role: \"presentation\",\n    style: _babelRuntimeHelpersEsmExtends({\n      width: contentSize.width,\n      height: contentSize.height,\n      pointerEvents: isScrolling ? 'none' : 'auto',\n      position: 'relative'\n    }, innerStyle)\n  }, children));\n}\n\nexport const ScrollView = _react.forwardRef($db588eb9c9dbc1dd892f18503cee21$var$ScrollView);\nexport function useVirtualizerItem(options) {\n  let {\n    reusableView: {\n      layoutInfo,\n      virtualizer\n    },\n    ref\n  } = options;\n  let updateSize = useCallback(() => {\n    let size = $e57f55a74c4282479f23b22163a$var$getSize(ref.current);\n    virtualizer.updateItemSize(layoutInfo.key, size);\n  }, [virtualizer, layoutInfo.key, ref]);\n  useLayoutEffect(() => {\n    if (layoutInfo.estimatedSize) {\n      updateSize();\n    }\n  });\n  return {\n    updateSize\n  };\n}\n\nfunction $e57f55a74c4282479f23b22163a$var$getSize(node) {\n  return new Size(node.scrollWidth, node.scrollHeight);\n}\n\nexport function VirtualizerItem(props) {\n  let {\n    className,\n    reusableView,\n    parent\n  } = props;\n  let {\n    direction\n  } = useLocale();\n  let ref = useRef();\n  useVirtualizerItem({\n    reusableView,\n    ref\n  });\n  return /*#__PURE__*/_react.createElement(\"div\", {\n    role: \"presentation\",\n    ref: ref,\n    className: className,\n    style: layoutInfoToStyle(reusableView.layoutInfo, direction, parent && parent.layoutInfo)\n  }, reusableView.rendered);\n}\nlet $e09852aaf18d180234f78ea6d834637e$var$cache = new WeakMap();\nexport function layoutInfoToStyle(layoutInfo, dir, parent) {\n  let xProperty = dir === 'rtl' ? 'right' : 'left';\n  let cached = $e09852aaf18d180234f78ea6d834637e$var$cache.get(layoutInfo);\n\n  if (cached && cached[xProperty] != null) {\n    if (!parent) {\n      return cached;\n    } // Invalidate if the parent position changed.\n\n\n    let top = layoutInfo.rect.y - parent.rect.y;\n    let x = layoutInfo.rect.x - parent.rect.x;\n\n    if (cached.top === top && cached[xProperty] === x) {\n      return cached;\n    }\n  }\n\n  let style = {\n    position: layoutInfo.isSticky ? 'sticky' : 'absolute',\n    overflow: 'hidden',\n    top: layoutInfo.rect.y - (parent ? parent.rect.y : 0),\n    [xProperty]: layoutInfo.rect.x - (parent ? parent.rect.x : 0),\n    transition: 'all',\n    WebkitTransition: 'all',\n    WebkitTransitionDuration: 'inherit',\n    transitionDuration: 'inherit',\n    width: layoutInfo.rect.width,\n    height: layoutInfo.rect.height,\n    opacity: layoutInfo.opacity,\n    zIndex: layoutInfo.zIndex,\n    transform: layoutInfo.transform,\n    contain: 'size layout style paint'\n  };\n  $e09852aaf18d180234f78ea6d834637e$var$cache.set(layoutInfo, style);\n  return style;\n}\n\nfunction $d62d682f3da39408e5c59b860cad8094$var$Virtualizer(props, ref) {\n  let {\n    children: renderView,\n    renderWrapper,\n    layout,\n    collection,\n    sizeToFit,\n    scrollDirection,\n    transitionDuration,\n    isLoading,\n    onLoadMore\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"renderWrapper\", \"layout\", \"collection\", \"sizeToFit\", \"scrollDirection\", \"transitionDuration\", \"isLoading\", \"onLoadMore\", \"focusedKey\", \"shouldUseVirtualFocus\"]);\n\n  let fallbackRef = useRef();\n  ref = ref || fallbackRef;\n  let state = useVirtualizerState({\n    transitionDuration,\n    layout,\n    collection,\n    renderView,\n    renderWrapper: renderWrapper || $d62d682f3da39408e5c59b860cad8094$var$defaultRenderWrapper,\n\n    onVisibleRectChange(rect) {\n      ref.current.scrollLeft = rect.x;\n      ref.current.scrollTop = rect.y;\n    }\n\n  });\n  let {\n    virtualizerProps\n  } = useVirtualizer(props, state, ref); // Handle scrolling, and call onLoadMore when nearing the bottom.\n\n  let onVisibleRectChange = useCallback(rect => {\n    state.setVisibleRect(rect);\n\n    if (!isLoading && onLoadMore) {\n      let scrollOffset = state.virtualizer.contentSize.height - rect.height * 2;\n\n      if (rect.y > scrollOffset) {\n        onLoadMore();\n      }\n    }\n  }, [isLoading, onLoadMore, state]);\n  return /*#__PURE__*/_react.createElement(ScrollView, _babelRuntimeHelpersEsmExtends({}, mergeProps(otherProps, virtualizerProps), {\n    ref: ref,\n    innerStyle: state.isAnimating ? {\n      transition: \"none \" + state.virtualizer.transitionDuration + \"ms\"\n    } : undefined,\n    contentSize: state.contentSize,\n    onVisibleRectChange: onVisibleRectChange,\n    onScrollStart: state.startScrolling,\n    onScrollEnd: state.endScrolling,\n    sizeToFit: sizeToFit,\n    scrollDirection: scrollDirection\n  }), state.visibleViews);\n}\n\nexport function useVirtualizer(props, state, ref) {\n  let {\n    focusedKey,\n    scrollToItem,\n    shouldUseVirtualFocus\n  } = props;\n  let {\n    virtualizer\n  } = state; // Scroll to the focusedKey when it changes. Actually focusing the focusedKey\n  // is up to the implementation using Virtualizer since we don't have refs\n  // to all of the item DOM nodes.\n\n  let lastFocusedKey = useRef(null);\n  useEffect(() => {\n    if (virtualizer.visibleRect.height === 0) {\n      return;\n    }\n\n    if (focusedKey !== lastFocusedKey.current) {\n      if (scrollToItem) {\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {\n          duration: 0\n        });\n      }\n    }\n\n    lastFocusedKey.current = focusedKey;\n  }, [focusedKey, virtualizer.visibleRect.height, virtualizer, lastFocusedKey, scrollToItem]);\n  let isFocusWithin = useRef(false);\n  let onFocus = useCallback(e => {\n    // If the focused item is scrolled out of view and is not in the DOM, the collection\n    // will have tabIndex={0}. When tabbing in from outside, scroll the focused item into view.\n    // We only want to do this if the collection itself is receiving focus, not a child\n    // element, and we aren't moving focus to the collection from within (see below).\n    if (e.target === ref.current && !isFocusWithin.current) {\n      virtualizer.scrollToItem(focusedKey, {\n        duration: 0\n      });\n    }\n\n    isFocusWithin.current = e.target !== ref.current;\n  }, [ref, virtualizer, focusedKey]);\n  let onBlur = useCallback(e => {\n    isFocusWithin.current = ref.current.contains(e.relatedTarget);\n  }, [ref]); // When the focused item is scrolled out of view and is removed from the DOM,\n  // move focus to the collection view as a whole if focus was within before.\n\n  let focusedView = virtualizer.getView(focusedKey);\n  useEffect(() => {\n    if (focusedKey && !focusedView && isFocusWithin.current && document.activeElement !== ref.current) {\n      focusWithoutScrolling(ref.current);\n    }\n  }); // Set tabIndex to -1 if the focused view is in the DOM, otherwise 0 so that the collection\n  // itself is tabbable. When the collection receives focus, we scroll the focused item back into\n  // view, which will allow it to be properly focused. If using virtual focus, don't set a\n  // tabIndex at all so that VoiceOver on iOS 14 doesn't try to move real DOM focus to the element anyway.\n\n  let tabIndex;\n\n  if (!shouldUseVirtualFocus) {\n    tabIndex = focusedView ? -1 : 0;\n  }\n\n  return {\n    virtualizerProps: {\n      tabIndex,\n      onFocus,\n      onBlur\n    }\n  };\n} // forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\n\nexport const Virtualizer = _react.forwardRef($d62d682f3da39408e5c59b860cad8094$var$Virtualizer);\n\nfunction $d62d682f3da39408e5c59b860cad8094$var$defaultRenderWrapper(parent, reusableView) {\n  return /*#__PURE__*/_react.createElement(VirtualizerItem, {\n    key: reusableView.key,\n    reusableView: reusableView,\n    parent: parent\n  });\n}","map":{"version":3,"sources":["packages/@react-aria/virtualizer/src/utils.ts","packages/@react-aria/virtualizer/src/ScrollView.tsx","packages/@react-aria/virtualizer/src/useVirtualizerItem.ts","packages/@react-aria/virtualizer/src/VirtualizerItem.tsx","packages/@react-aria/virtualizer/src/Virtualizer.tsx"],"names":["cachedRTLResult","recalculate","outerDiv","document","outerStyle","innerDiv","innerStyle","scrollLeft","direction","clientWidth","getRTLOffsetType","scrollWidth","node","scrollDirection","otherProps","defaultRef","useRef","ref","state","scrollTop","scrollEndTime","scrollTimeout","width","height","isScrolling","useLocale","useState","onScroll","useCallback","e","props","flushSync","Math","contentSize","onVisibleRectChange","setScrolling","onScrollStart","now","Date","clearTimeout","setTimeout","onScrollEnd","useEffect","updateSize","dom","w","h","sizeToFit","useLayoutEffect","useResizeObserver","onResize","style","padding","pointerEvents","position","ScrollViewForwardRef","React","reusableView","virtualizer","size","getSize","layoutInfo","parent","layoutInfoToStyle","cache","xProperty","dir","cached","top","x","overflow","transition","WebkitTransition","WebkitTransitionDuration","transitionDuration","opacity","zIndex","transform","contain","children","onLoadMore","fallbackRef","useVirtualizerState","renderWrapper","rect","virtualizerProps","useVirtualizer","scrollOffset","mergeProps","shouldUseVirtualFocus","lastFocusedKey","focusedKey","scrollToItem","duration","isFocusWithin","onFocus","onBlur","focusedView","focusWithoutScrolling","tabIndex","_Virtualizer"],"mappings":"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","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n\n// Original licensing for the following methods can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/bvaughn/react-window/blob/master/src/createGridComponent.js\n\n// According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    document.body.appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    document.body.removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n\nexport function getScrollLeft(node: HTMLElement, direction: Direction): number {\n  let {scrollLeft} = node;\n\n  // scrollLeft in rtl locales differs across browsers, so normalize.\n  // See comment by getRTLOffsetType below for details.\n  if (direction === 'rtl') {\n    let {scrollWidth, clientWidth} = node;\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-descending':\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n    }\n  }\n\n  return scrollLeft;\n}\n\nexport function setScrollLeft(node: HTMLElement, direction: Direction, scrollLeft: number) {\n  if (direction === 'rtl') {\n    switch (getRTLOffsetType()) {\n      case 'negative':\n        scrollLeft = -scrollLeft;\n        break;\n      case 'positive-ascending':\n        break;\n      default: {\n        const {clientWidth, scrollWidth} = node;\n        scrollLeft = scrollWidth - clientWidth - scrollLeft;\n        break;\n      }\n    }\n  }\n\n  node.scrollLeft = scrollLeft;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// @ts-ignore\nimport {flushSync} from 'react-dom';\nimport {getScrollLeft} from './utils';\nimport React, {\n  CSSProperties,\n  HTMLAttributes,\n  ReactNode,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n  useState\n} from 'react';\nimport {Rect, Size} from '@react-stately/virtualizer';\nimport {useLayoutEffect} from '@react-aria/utils';\nimport {useLocale} from '@react-aria/i18n';\nimport {useResizeObserver} from '@react-aria/utils';\n\ninterface ScrollViewProps extends HTMLAttributes<HTMLElement> {\n  contentSize: Size,\n  onVisibleRectChange: (rect: Rect) => void,\n  children: ReactNode,\n  innerStyle?: CSSProperties,\n  sizeToFit?: 'width' | 'height',\n  onScrollStart?: () => void,\n  onScrollEnd?: () => void,\n  scrollDirection?: 'horizontal' | 'vertical' | 'both'\n}\n\nfunction ScrollView(props: ScrollViewProps, ref: RefObject<HTMLDivElement>) {\n  let {\n    contentSize,\n    onVisibleRectChange,\n    children,\n    innerStyle,\n    sizeToFit,\n    onScrollStart,\n    onScrollEnd,\n    scrollDirection = 'both',\n    ...otherProps\n  } = props;\n\n  let defaultRef = useRef();\n  ref = ref || defaultRef;\n  let state = useRef({\n    scrollTop: 0,\n    scrollLeft: 0,\n    scrollEndTime: 0,\n    scrollTimeout: null,\n    width: 0,\n    height: 0,\n    isScrolling: false\n  }).current;\n  let {direction} = useLocale();\n\n  let [isScrolling, setScrolling] = useState(false);\n  let onScroll = useCallback((e) => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    if (props.onScroll) {\n      props.onScroll(e);\n    }\n\n    flushSync(() => {\n      let scrollTop = e.currentTarget.scrollTop;\n      let scrollLeft = getScrollLeft(e.currentTarget, direction);\n\n      // Prevent rubber band scrolling from shaking when scrolling out of bounds\n      state.scrollTop = Math.max(0, Math.min(scrollTop, contentSize.height - state.height));\n      state.scrollLeft = Math.max(0, Math.min(scrollLeft, contentSize.width - state.width));\n\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, state.width, state.height));\n\n      if (!state.isScrolling) {\n        state.isScrolling = true;\n        setScrolling(true);\n\n        if (onScrollStart) {\n          onScrollStart();\n        }\n      }\n\n      // So we don't constantly call clearTimeout and setTimeout,\n      // keep track of the current timeout time and only reschedule\n      // the timer when it is getting close.\n      let now = Date.now();\n      if (state.scrollEndTime <= now + 50) {\n        state.scrollEndTime = now + 300;\n\n        clearTimeout(state.scrollTimeout);\n        state.scrollTimeout = setTimeout(() => {\n          state.isScrolling = false;\n          setScrolling(false);\n          state.scrollTimeout = null;\n\n          if (onScrollEnd) {\n            onScrollEnd();\n          }\n        }, 300);\n      }\n    });\n  }, [props, direction, state, contentSize, onVisibleRectChange, onScrollStart, onScrollEnd]);\n\n  // eslint-disable-next-line arrow-body-style\n  useEffect(() => {\n    return () => {\n      clearTimeout(state.scrollTimeout);\n    };\n  }, []);\n\n  let updateSize = useCallback(() => {\n    let dom = ref.current;\n    if (!dom) {\n      return;\n    }\n\n    let w = dom.clientWidth;\n    let h = dom.clientHeight;\n    if (sizeToFit && contentSize.width > 0 && contentSize.height > 0) {\n      if (sizeToFit === 'width') {\n        w = Math.min(w, contentSize.width);\n      } else if (sizeToFit === 'height') {\n        h = Math.min(h, contentSize.height);\n      }\n    }\n\n    if (state.width !== w || state.height !== h) {\n      state.width = w;\n      state.height = h;\n      onVisibleRectChange(new Rect(state.scrollLeft, state.scrollTop, w, h));\n    }\n  }, [onVisibleRectChange, ref, state, sizeToFit, contentSize]);\n\n  useLayoutEffect(() => {\n    updateSize();\n  }, [updateSize]);\n  useResizeObserver({ref, onResize: updateSize});\n\n  let style: React.CSSProperties = {\n    // Reset padding so that relative positioning works correctly. Padding will be done in JS layout.\n    padding: 0,\n    ...otherProps.style\n  };\n\n  if (scrollDirection === 'horizontal') {\n    style.overflowX = 'auto';\n    style.overflowY = 'hidden';\n  } else if (scrollDirection === 'vertical') {\n    style.overflowY = 'auto';\n    style.overflowX = 'hidden';\n  } else {\n    style.overflow = 'auto';\n  }\n\n  return (\n    <div {...otherProps} style={style} ref={ref} onScroll={onScroll}>\n      <div role=\"presentation\" style={{width: contentSize.width, height: contentSize.height, pointerEvents: isScrolling ? 'none' : 'auto', position: 'relative', ...innerStyle}}>\n        {children}\n      </div>\n    </div>\n  );\n}\n\nconst ScrollViewForwardRef = React.forwardRef(ScrollView);\nexport {ScrollViewForwardRef as ScrollView};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {RefObject, useCallback} from 'react';\nimport {ReusableView, Size} from '@react-stately/virtualizer';\nimport {useLayoutEffect} from '@react-aria/utils';\n\ninterface VirtualizerItemOptions<T extends object, V> {\n  reusableView: ReusableView<T, V>,\n  ref: RefObject<HTMLElement>\n}\n\nexport function useVirtualizerItem<T extends object, V>(options: VirtualizerItemOptions<T, V>) {\n  let {reusableView: {layoutInfo, virtualizer}, ref} = options;\n\n  let updateSize = useCallback(() => {\n    let size = getSize(ref.current);\n    virtualizer.updateItemSize(layoutInfo.key, size);\n  }, [virtualizer, layoutInfo.key, ref]);\n\n  useLayoutEffect(() => {\n    if (layoutInfo.estimatedSize) {\n      updateSize();\n    }\n  });\n\n  return {updateSize};\n}\n\nfunction getSize(node: HTMLElement) {\n  return new Size(node.scrollWidth, node.scrollHeight);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Direction} from '@react-types/shared';\nimport {LayoutInfo, ReusableView} from '@react-stately/virtualizer';\nimport React, {CSSProperties, useRef} from 'react';\nimport {useLocale} from '@react-aria/i18n';\nimport {useVirtualizerItem} from './useVirtualizerItem';\n\ninterface VirtualizerItemProps<T extends object, V> {\n  reusableView: ReusableView<T, V>,\n  parent?: ReusableView<T, V>,\n  className?: string\n}\n\nexport function VirtualizerItem<T extends object, V>(props: VirtualizerItemProps<T, V>) {\n  let {className, reusableView, parent} = props;\n  let {direction} = useLocale();\n  let ref = useRef();\n  useVirtualizerItem({\n    reusableView,\n    ref\n  });\n\n  return (\n    <div role=\"presentation\" ref={ref} className={className} style={layoutInfoToStyle(reusableView.layoutInfo, direction, parent && parent.layoutInfo)}>\n      {reusableView.rendered}\n    </div>\n  );\n}\n\nlet cache = new WeakMap();\nexport function layoutInfoToStyle(layoutInfo: LayoutInfo, dir: Direction, parent?: LayoutInfo | null): CSSProperties {\n  let xProperty = dir === 'rtl' ? 'right' : 'left';\n  let cached = cache.get(layoutInfo);\n  if (cached && cached[xProperty] != null) {\n    if (!parent) {\n      return cached;\n    }\n\n    // Invalidate if the parent position changed.\n    let top = layoutInfo.rect.y - parent.rect.y;\n    let x = layoutInfo.rect.x - parent.rect.x;\n    if (cached.top === top && cached[xProperty] === x) {\n      return cached;\n    }\n  }\n\n  let style: CSSProperties = {\n    position: layoutInfo.isSticky ? 'sticky' : 'absolute',\n    overflow: 'hidden',\n    top: layoutInfo.rect.y - (parent ? parent.rect.y : 0),\n    [xProperty]: layoutInfo.rect.x - (parent ? parent.rect.x : 0),\n    transition: 'all',\n    WebkitTransition: 'all',\n    WebkitTransitionDuration: 'inherit',\n    transitionDuration: 'inherit',\n    width: layoutInfo.rect.width,\n    height: layoutInfo.rect.height,\n    opacity: layoutInfo.opacity,\n    zIndex: layoutInfo.zIndex,\n    transform: layoutInfo.transform,\n    contain: 'size layout style paint'\n  };\n\n  cache.set(layoutInfo, style);\n  return style;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection} from '@react-types/shared';\nimport {focusWithoutScrolling, mergeProps} from '@react-aria/utils';\nimport {Layout, Rect, ReusableView, useVirtualizerState, VirtualizerState} from '@react-stately/virtualizer';\nimport React, {FocusEvent, HTMLAttributes, Key, ReactElement, RefObject, useCallback, useEffect, useRef} from 'react';\nimport {ScrollView} from './ScrollView';\nimport {VirtualizerItem} from './VirtualizerItem';\n\ninterface VirtualizerProps<T extends object, V> extends HTMLAttributes<HTMLElement> {\n  children: (type: string, content: T) => V,\n  renderWrapper?: (\n    parent: ReusableView<T, V> | null,\n    reusableView: ReusableView<T, V>,\n    children: ReusableView<T, V>[],\n    renderChildren: (views: ReusableView<T, V>[]) => ReactElement[]\n  ) => ReactElement,\n  layout: Layout<T>,\n  collection: Collection<T>,\n  focusedKey?: Key,\n  sizeToFit?: 'width' | 'height',\n  scrollDirection?: 'horizontal' | 'vertical' | 'both',\n  transitionDuration?: number,\n  isLoading?: boolean,\n  onLoadMore?: () => void,\n  shouldUseVirtualFocus?: boolean\n}\n\nfunction Virtualizer<T extends object, V>(props: VirtualizerProps<T, V>, ref: RefObject<HTMLDivElement>) {\n  let {\n    children: renderView,\n    renderWrapper,\n    layout,\n    collection,\n    sizeToFit,\n    scrollDirection,\n    transitionDuration,\n    isLoading,\n    onLoadMore,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    focusedKey,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    shouldUseVirtualFocus,\n    ...otherProps\n  } = props;\n\n  let fallbackRef = useRef<HTMLDivElement>();\n  ref = ref || fallbackRef;\n\n  let state = useVirtualizerState({\n    transitionDuration,\n    layout,\n    collection,\n    renderView,\n    renderWrapper: renderWrapper || defaultRenderWrapper,\n    onVisibleRectChange(rect) {\n      ref.current.scrollLeft = rect.x;\n      ref.current.scrollTop = rect.y;\n    }\n  });\n\n  let {virtualizerProps} = useVirtualizer(props, state, ref);\n\n  // Handle scrolling, and call onLoadMore when nearing the bottom.\n  let onVisibleRectChange = useCallback((rect: Rect) => {\n    state.setVisibleRect(rect);\n\n    if (!isLoading && onLoadMore) {\n      let scrollOffset = state.virtualizer.contentSize.height - rect.height * 2;\n      if (rect.y > scrollOffset) {\n        onLoadMore();\n      }\n    }\n  }, [isLoading, onLoadMore, state]);\n\n  return (\n    <ScrollView\n      {...mergeProps(otherProps, virtualizerProps)}\n      ref={ref}\n      innerStyle={state.isAnimating ? {transition: `none ${state.virtualizer.transitionDuration}ms`} : undefined}\n      contentSize={state.contentSize}\n      onVisibleRectChange={onVisibleRectChange}\n      onScrollStart={state.startScrolling}\n      onScrollEnd={state.endScrolling}\n      sizeToFit={sizeToFit}\n      scrollDirection={scrollDirection}>\n      {state.visibleViews}\n    </ScrollView>\n  );\n}\n\ninterface VirtualizerOptions {\n  focusedKey?: Key,\n  scrollToItem?: (key: Key) => void,\n  shouldUseVirtualFocus?: boolean\n}\n\nexport function useVirtualizer<T extends object, V, W>(props: VirtualizerOptions, state: VirtualizerState<T, V, W>, ref: RefObject<HTMLElement>) {\n  let {focusedKey, scrollToItem, shouldUseVirtualFocus} = props;\n  let {virtualizer} = state;\n\n  // Scroll to the focusedKey when it changes. Actually focusing the focusedKey\n  // is up to the implementation using Virtualizer since we don't have refs\n  // to all of the item DOM nodes.\n  let lastFocusedKey = useRef(null);\n  useEffect(() => {\n    if (virtualizer.visibleRect.height === 0) {\n      return;\n    }\n\n    if (focusedKey !== lastFocusedKey.current) {\n      if (scrollToItem) {\n        scrollToItem(focusedKey);\n      } else {\n        virtualizer.scrollToItem(focusedKey, {duration: 0});\n      }\n    }\n\n    lastFocusedKey.current = focusedKey;\n  }, [focusedKey, virtualizer.visibleRect.height, virtualizer, lastFocusedKey, scrollToItem]);\n\n  let isFocusWithin = useRef(false);\n  let onFocus = useCallback((e: FocusEvent) => {\n    // If the focused item is scrolled out of view and is not in the DOM, the collection\n    // will have tabIndex={0}. When tabbing in from outside, scroll the focused item into view.\n    // We only want to do this if the collection itself is receiving focus, not a child\n    // element, and we aren't moving focus to the collection from within (see below).\n    if (e.target === ref.current && !isFocusWithin.current) {\n      virtualizer.scrollToItem(focusedKey, {duration: 0});\n    }\n\n    isFocusWithin.current = e.target !== ref.current;\n  }, [ref, virtualizer, focusedKey]);\n\n  let onBlur = useCallback((e: FocusEvent) => {\n    isFocusWithin.current = ref.current.contains(e.relatedTarget as Element);\n  }, [ref]);\n\n  // When the focused item is scrolled out of view and is removed from the DOM,\n  // move focus to the collection view as a whole if focus was within before.\n  let focusedView = virtualizer.getView(focusedKey);\n  useEffect(() => {\n    if (focusedKey && !focusedView && isFocusWithin.current && document.activeElement !== ref.current) {\n      focusWithoutScrolling(ref.current);\n    }\n  });\n\n  // Set tabIndex to -1 if the focused view is in the DOM, otherwise 0 so that the collection\n  // itself is tabbable. When the collection receives focus, we scroll the focused item back into\n  // view, which will allow it to be properly focused. If using virtual focus, don't set a\n  // tabIndex at all so that VoiceOver on iOS 14 doesn't try to move real DOM focus to the element anyway.\n  let tabIndex: number;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = focusedView ? -1 : 0;\n  }\n\n  return {\n    virtualizerProps: {\n      tabIndex,\n      onFocus,\n      onBlur\n    }\n  };\n}\n\n// forwardRef doesn't support generic parameters, so cast the result to the correct type\n// https://stackoverflow.com/questions/58469229/react-with-typescript-generics-while-using-react-forwardref\nconst _Virtualizer = React.forwardRef(Virtualizer) as <T extends object, V>(props: VirtualizerProps<T, V> & {ref?: RefObject<HTMLDivElement>}) => ReactElement;\nexport {_Virtualizer as Virtualizer};\n\nfunction defaultRenderWrapper<T extends object, V>(\n  parent: ReusableView<T, V> | null,\n  reusableView: ReusableView<T, V>\n) {\n  return (\n    <VirtualizerItem\n      key={reusableView.key}\n      reusableView={reusableView}\n      parent={parent} />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}