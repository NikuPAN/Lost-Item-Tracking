{"ast":null,"code":"import _react, { useContext } from \"react\";\nimport { Provider, useProviderProps } from \"@react-spectrum/provider\";\nimport { filterDOMProps } from \"@react-aria/utils\";\nimport { classNames, useDOMRef, useStyleProps } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n} // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/fieldlabel/vars.css\n\n\nvar $c9fb1f4220ea2c59cb2e10f0e9828c6e$exports = {};\n$c9fb1f4220ea2c59cb2e10f0e9828c6e$exports = {\n  \"spectrum-FieldLabel\": \"_spectrum-FieldLabel_36b9b\",\n  \"spectrum-FieldLabel--positionSide\": \"_spectrum-FieldLabel--positionSide_36b9b\",\n  \"spectrum-FieldLabel-requiredIcon\": \"_spectrum-FieldLabel-requiredIcon_36b9b\",\n  \"spectrum-FieldLabel--alignEnd\": \"_spectrum-FieldLabel--alignEnd_36b9b\",\n  \"spectrum-Field\": \"_spectrum-Field_36b9b\",\n  \"spectrum-Field--positionTop\": \"_spectrum-Field--positionTop_36b9b\",\n  \"spectrum-Field-field\": \"_spectrum-Field-field_36b9b\",\n  \"spectrum-Field--positionSide\": \"_spectrum-Field--positionSide_36b9b\",\n  \"spectrum-Form\": \"_spectrum-Form_36b9b\",\n  \"spectrum-Form--positionSide\": \"_spectrum-Form--positionSide_36b9b\",\n  \"spectrum-Form--positionTop\": \"_spectrum-Form--positionTop_36b9b\",\n  \"spectrum-Form-itemLabel\": \"_spectrum-Form-itemLabel_36b9b\",\n  \"is-disabled\": \"_is-disabled_36b9b\"\n};\n\nlet $d618213cd07bac427c632ce5c90d7$var$FormContext = _react.createContext({});\n\nexport function useFormProps(props) {\n  let ctx = useContext($d618213cd07bac427c632ce5c90d7$var$FormContext);\n  return _babelRuntimeHelpersEsmExtends({}, ctx, props);\n}\nconst $d618213cd07bac427c632ce5c90d7$var$formPropNames = new Set(['action', 'autoComplete', 'encType', 'method', 'target', 'onSubmit']);\nvar $c9fb1f4220ea2c59cb2e10f0e9828c6e$$interop$default = $parcel$interopDefault($c9fb1f4220ea2c59cb2e10f0e9828c6e$exports);\n\nfunction $d618213cd07bac427c632ce5c90d7$var$Form(props, ref) {\n  props = useProviderProps(props);\n\n  let {\n    children,\n    labelPosition = 'top',\n    labelAlign = 'start',\n    isRequired,\n    necessityIndicator,\n    isQuiet,\n    isEmphasized,\n    isDisabled,\n    isReadOnly,\n    validationState\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"labelPosition\", \"labelAlign\", \"isRequired\", \"necessityIndicator\", \"isQuiet\", \"isEmphasized\", \"isDisabled\", \"isReadOnly\", \"validationState\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n  let ctx = {\n    labelPosition,\n    labelAlign,\n    necessityIndicator\n  };\n  return /*#__PURE__*/_react.createElement(\"form\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps, {\n    labelable: true,\n    propNames: $d618213cd07bac427c632ce5c90d7$var$formPropNames\n  }), styleProps, {\n    ref: domRef,\n    className: classNames($c9fb1f4220ea2c59cb2e10f0e9828c6e$$interop$default, 'spectrum-Form', {\n      'spectrum-Form--positionSide': labelPosition === 'side',\n      'spectrum-Form--positionTop': labelPosition === 'top'\n    }, styleProps.className)\n  }), /*#__PURE__*/_react.createElement($d618213cd07bac427c632ce5c90d7$var$FormContext.Provider, {\n    value: ctx\n  }, /*#__PURE__*/_react.createElement(Provider, {\n    isQuiet: isQuiet,\n    isEmphasized: isEmphasized,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired,\n    validationState: validationState\n  }, children)));\n}\n/**\n * Forms allow users to enter data that can be submitted while providing alignment and styling for form fields.\n */\n\n\nexport const Form = _react.forwardRef($d618213cd07bac427c632ce5c90d7$var$Form);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/@adobe/spectrum-css-temp/components/fieldlabel/vars.css","packages/@react-spectrum/form/src/Form.tsx"],"names":["a","FormContext","React","ctx","useContext","formPropNames","props","useProviderProps","labelPosition","labelAlign","validationState","otherProps","styleProps","useStyleProps","domRef","useDOMRef","necessityIndicator","filterDOMProps","labelable","propNames","classNames","_Form"],"mappings":";;;;;;;;AAAA,SAAA,sBAAA,CAAA,CAAA,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAANA,UAAAA,GAAoBA,CAAC,CAArBA,OAAAA,GAAP,CAAA;AACD,C;;;;ACFD,yCAAA,GAAiB;AACf,yBADe,4BAAA;AAEf,uCAFe,0CAAA;AAGf,sCAHe,yCAAA;AAIf,mCAJe,sCAAA;AAKf,oBALe,uBAAA;AAMf,iCANe,oCAAA;AAOf,0BAPe,6BAAA;AAQf,kCARe,qCAAA;AASf,mBATe,sBAAA;AAUf,iCAVe,oCAAA;AAWf,gCAXe,mCAAA;AAYf,6BAZe,gCAAA;AAaf,iBAAe;AAbA,CAAjB;;ACoBA,IAAIC,8CAAW,GAAGC,MAAK,CAALA,aAAAA,CAAlB,EAAkBA,CAAlB;;OACO,SAAA,YAAA,CAAA,KAAA,EAAqE;AAC1E,MAAIC,GAAG,GAAGC,UAAU,CAApB,8CAAoB,CAApB;AACA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA,KAAA,CAAA;AACD;AAED,MAAMC,gDAAa,GAAG,IAAA,GAAA,CAAQ,CAAA,QAAA,EAAA,cAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAA9B,UAA8B,CAAR,CAAtB;;;AASA,SAAA,uCAAA,CAAA,KAAA,EAAA,GAAA,EAAsE;AACpEC,EAAAA,KAAK,GAAGC,gBAAgB,CAAxBD,KAAwB,CAAxBA;;AACA,MAAI;AAAA,IAAA,QAAA;AAEFE,IAAAA,aAAa,GAFX,KAAA;AAGFC,IAAAA,UAAU,GAHR,OAAA;AAAA,IAAA,UAAA;AAAA,IAAA,kBAAA;AAAA,IAAA,OAAA;AAAA,IAAA,YAAA;AAAA,IAAA,UAAA;AAAA,IAAA,UAAA;AAUFC,IAAAA;AAVE,MAAJ,KAAA;AAAA,MAWKC,UAXL,GAAA,mDAAA,CAAA,KAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,SAAA,EAAA,cAAA,EAAA,YAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,CAAA;;AAcA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;AACA,MAAIC,MAAM,GAAGC,SAAS,CAAtB,GAAsB,CAAtB;AAEA,MAAIZ,GAAG,GAAG;AAAA,IAAA,aAAA;AAAA,IAAA,UAAA;AAGRa,IAAAA;AAHQ,GAAV;AAMA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,MAAA,EAAA,8BAAA,CAAA,EAAA,EACMC,cAAc,CAAA,UAAA,EAAa;AAACC,IAAAA,SAAS,EAAV,IAAA;AAAkBC,IAAAA,SAAS,EAAEd;AAA7B,GAAb,CADpB,EAAA,UAAA,EAAA;AAGE,IAAA,GAAG,EAHL,MAAA;AAIE,IAAA,SAAS,EACPe,UAAU,CAAA,kDAAA,EAAA,eAAA,EAGR;AACE,qCAA+BZ,aAAa,KAD9C,MAAA;AAEE,oCAA8BA,aAAa,KAAK;AAFlD,KAHQ,EAORI,UAAU,CAPF,SAAA;AALd,GAAA,CAAA,EAAA,aAeE,MAAA,CAAA,aAAA,CAAC,8CAAD,CAAA,QAAA,EAAA;AAAsB,IAAA,KAAK,EAAET;AAA7B,GAAA,EAAA,aACE,MAAA,CAAA,aAAA,CAAA,QAAA,EAAA;AACE,IAAA,OAAO,EADT,OAAA;AAEE,IAAA,YAAY,EAFd,YAAA;AAGE,IAAA,UAAU,EAHZ,UAAA;AAIE,IAAA,UAAU,EAJZ,UAAA;AAKE,IAAA,UAAU,EALZ,UAAA;AAME,IAAA,eAAe,EAAEO;AANnB,GAAA,EAjBN,QAiBM,CADF,CAfF,CADF;AA6BD;AAED;;;;;OAGA,MAAMW,IAAK,GAAGnB,MAAK,CAALA,UAAAA,CAAd,uCAAcA,CAAd","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Alignment, DOMRef, LabelPosition, SpectrumLabelableProps} from '@react-types/shared';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {Provider, useProviderProps} from '@react-spectrum/provider';\nimport React, {useContext} from 'react';\nimport {SpectrumFormProps} from '@react-types/form';\nimport styles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\n\nlet FormContext = React.createContext<SpectrumLabelableProps>({});\nexport function useFormProps<T extends SpectrumLabelableProps>(props: T): T {\n  let ctx = useContext(FormContext);\n  return {...ctx, ...props};\n}\n\nconst formPropNames = new Set([\n  'action',\n  'autoComplete',\n  'encType',\n  'method',\n  'target',\n  'onSubmit'\n]);\n\nfunction Form(props: SpectrumFormProps, ref: DOMRef<HTMLFormElement>) {\n  props = useProviderProps(props);\n  let {\n    children,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign = 'start' as Alignment,\n    isRequired,\n    necessityIndicator,\n    isQuiet,\n    isEmphasized,\n    isDisabled,\n    isReadOnly,\n    validationState,\n    ...otherProps\n  } = props;\n\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  let ctx = {\n    labelPosition,\n    labelAlign,\n    necessityIndicator\n  };\n\n  return (\n    <form\n      {...filterDOMProps(otherProps, {labelable: true, propNames: formPropNames})}\n      {...styleProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Form',\n          {\n            'spectrum-Form--positionSide': labelPosition === 'side',\n            'spectrum-Form--positionTop': labelPosition === 'top'\n          },\n          styleProps.className\n        )\n      }>\n      <FormContext.Provider value={ctx}>\n        <Provider\n          isQuiet={isQuiet}\n          isEmphasized={isEmphasized}\n          isDisabled={isDisabled}\n          isReadOnly={isReadOnly}\n          isRequired={isRequired}\n          validationState={validationState}>\n          {children}\n        </Provider>\n      </FormContext.Provider>\n    </form>\n  );\n}\n\n/**\n * Forms allow users to enter data that can be submitted while providing alignment and styling for form fields.\n */\nconst _Form = React.forwardRef(Form);\nexport {_Form as Form};\n"]},"metadata":{},"sourceType":"module"}