{"ast":null,"code":"import { useProviderProps } from \"@react-spectrum/provider\";\nimport _react, { forwardRef } from \"react\";\nimport { filterDOMProps } from \"@react-aria/utils\";\nimport { classNames, useDOMRef, useStyleProps } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n} // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/statuslight/vars.css\n\n\nvar $dd4b8a3e2f1fd49bf33fcb2d525d0bc5$exports = {};\n$dd4b8a3e2f1fd49bf33fcb2d525d0bc5$exports = {\n  \"spectrum-StatusLight\": \"_spectrum-StatusLight_71d0f\",\n  \"spectrum-StatusLight--neutral\": \"_spectrum-StatusLight--neutral_71d0f\",\n  \"is-disabled\": \"_is-disabled_71d0f\",\n  \"spectrum-StatusLight--negative\": \"_spectrum-StatusLight--negative_71d0f\",\n  \"spectrum-StatusLight--notice\": \"_spectrum-StatusLight--notice_71d0f\",\n  \"spectrum-StatusLight--positive\": \"_spectrum-StatusLight--positive_71d0f\",\n  \"spectrum-StatusLight--info\": \"_spectrum-StatusLight--info_71d0f\",\n  \"spectrum-StatusLight--active\": \"_spectrum-StatusLight--active_71d0f\",\n  \"spectrum-StatusLight--celery\": \"_spectrum-StatusLight--celery_71d0f\",\n  \"spectrum-StatusLight--yellow\": \"_spectrum-StatusLight--yellow_71d0f\",\n  \"spectrum-StatusLight--fuchsia\": \"_spectrum-StatusLight--fuchsia_71d0f\",\n  \"spectrum-StatusLight--indigo\": \"_spectrum-StatusLight--indigo_71d0f\",\n  \"spectrum-StatusLight--seafoam\": \"_spectrum-StatusLight--seafoam_71d0f\",\n  \"spectrum-StatusLight--chartreuse\": \"_spectrum-StatusLight--chartreuse_71d0f\",\n  \"spectrum-StatusLight--magenta\": \"_spectrum-StatusLight--magenta_71d0f\",\n  \"spectrum-StatusLight--purple\": \"_spectrum-StatusLight--purple_71d0f\"\n};\nvar $dd4b8a3e2f1fd49bf33fcb2d525d0bc5$$interop$default = $parcel$interopDefault($dd4b8a3e2f1fd49bf33fcb2d525d0bc5$exports);\n\nfunction $dc530db4434f30bfa8656c892b766522$var$StatusLight(props, ref) {\n  let _useProviderProps = useProviderProps(props),\n      {\n    variant,\n    children,\n    isDisabled,\n    role\n  } = _useProviderProps,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(_useProviderProps, [\"variant\", \"children\", \"isDisabled\", \"role\"]);\n\n  let domRef = useDOMRef(ref);\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n\n  if (!children && !props['aria-label']) {\n    console.warn('If no children are provided, an aria-label must be specified');\n  }\n\n  if (!role && (props['aria-label'] || props['aria-labelledby'])) {\n    console.warn('A labelled StatusLight must have a role.');\n  }\n\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps, {\n    labelable: !!role\n  }), styleProps, {\n    role: role,\n    className: classNames($dd4b8a3e2f1fd49bf33fcb2d525d0bc5$$interop$default, 'spectrum-StatusLight', \"spectrum-StatusLight--\" + variant, {\n      'is-disabled': isDisabled\n    }, styleProps.className),\n    ref: domRef\n  }), children);\n}\n/**\n * Status lights are used to color code categories and labels commonly found in data visualization.\n * When status lights have a semantic meaning, they should use semantic variant colors.\n */\n\n\nexport let StatusLight = forwardRef($dc530db4434f30bfa8656c892b766522$var$StatusLight);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/@adobe/spectrum-css-temp/components/statuslight/vars.css","packages/@react-spectrum/statuslight/src/StatusLight.tsx"],"names":["a","role","otherProps","useProviderProps","domRef","useDOMRef","styleProps","useStyleProps","props","console","filterDOMProps","labelable","classNames","isDisabled","_StatusLight","forwardRef"],"mappings":";;;;;;;;AAAA,SAAA,sBAAA,CAAA,CAAA,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAANA,UAAAA,GAAoBA,CAAC,CAArBA,OAAAA,GAAP,CAAA;AACD,C;;;;ACFD,yCAAA,GAAiB;AACf,0BADe,6BAAA;AAEf,mCAFe,sCAAA;AAGf,iBAHe,oBAAA;AAIf,oCAJe,uCAAA;AAKf,kCALe,qCAAA;AAMf,oCANe,uCAAA;AAOf,gCAPe,mCAAA;AAQf,kCARe,qCAAA;AASf,kCATe,qCAAA;AAUf,kCAVe,qCAAA;AAWf,mCAXe,sCAAA;AAYf,kCAZe,qCAAA;AAaf,mCAbe,sCAAA;AAcf,sCAde,yCAAA;AAef,mCAfe,sCAAA;AAgBf,kCAAgC;AAhBjB,CAAjB;;;ACoBA,SAAA,iDAAA,CAAA,KAAA,EAAA,GAAA,EAAmF;AACjF,MAAA,iBAAA,GAMIG,gBAAgB,CANpB,KAMoB,CANpB;AAAA,MAAI;AAAA,IAAA,OAAA;AAAA,IAAA,QAAA;AAAA,IAAA,UAAA;AAIFF,IAAAA;AAJE,MAAJ,iBAAA;AAAA,MAKKC,UALL,GAAA,mDAAA,CAAA,iBAAA,EAAA,CAAA,SAAA,EAAA,UAAA,EAAA,YAAA,EAAA,MAAA,CAAA,CAAA;;AAOA,MAAIE,MAAM,GAAGC,SAAS,CAAtB,GAAsB,CAAtB;AACA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;;AAEA,MAAI,CAAA,QAAA,IAAa,CAACC,KAAK,CAAvB,YAAuB,CAAvB,EAAuC;AACrCC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,8DAAAA;AACD;;AAED,MAAI,CAAA,IAAA,KAAUD,KAAK,CAALA,YAAK,CAALA,IAAuBA,KAAK,CAA1C,iBAA0C,CAAtC,CAAJ,EAAgE;AAC9DC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,0CAAAA;AACD;;AAED,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,KAAA,EAAA,8BAAA,CAAA,EAAA,EACMC,cAAc,CAAA,UAAA,EAAa;AAACC,IAAAA,SAAS,EAAE,CAAC,CAACV;AAAd,GAAb,CADpB,EAAA,UAAA,EAAA;AAGE,IAAA,IAAI,EAHN,IAAA;AAIE,IAAA,SAAS,EAAEW,UAAU,CAAA,kDAAA,EAAA,sBAAA,EAAA,2BAAA,OAAA,EAInB;AACE,qBAAeC;AADjB,KAJmB,EAOnBP,UAAU,CAXd,SAIuB,CAJvB;AAaE,IAAA,GAAG,EAAEF;AAbP,GAAA,CAAA,EADF,QACE,CADF;AAkBD;AAED;;;;;;OAIA,IAAIU,WAAY,GAAGC,UAAU,CAA7B,iDAA6B,CAA7B","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React, {forwardRef} from 'react';\nimport {SpectrumStatusLightProps} from '@react-types/statuslight';\nimport styles from '@adobe/spectrum-css-temp/components/statuslight/vars.css';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction StatusLight(props: SpectrumStatusLightProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    variant,\n    children,\n    isDisabled,\n    role,\n    ...otherProps\n  } = useProviderProps(props);\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n\n  if (!children && !props['aria-label']) {\n    console.warn('If no children are provided, an aria-label must be specified');\n  }\n\n  if (!role && (props['aria-label'] || props['aria-labelledby'])) {\n    console.warn('A labelled StatusLight must have a role.');\n  }\n\n  return (\n    <div\n      {...filterDOMProps(otherProps, {labelable: !!role})}\n      {...styleProps}\n      role={role}\n      className={classNames(\n        styles,\n        'spectrum-StatusLight',\n        `spectrum-StatusLight--${variant}`,\n        {\n          'is-disabled': isDisabled\n        },\n        styleProps.className\n      )}\n      ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Status lights are used to color code categories and labels commonly found in data visualization.\n * When status lights have a semantic meaning, they should use semantic variant colors.\n */\nlet _StatusLight = forwardRef(StatusLight);\nexport {_StatusLight as StatusLight};\n"]},"metadata":{},"sourceType":"module"}