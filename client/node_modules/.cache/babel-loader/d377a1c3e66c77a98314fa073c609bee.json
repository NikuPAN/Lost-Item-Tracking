{"ast":null,"code":"import { useProviderProps } from \"@react-spectrum/provider\";\nimport _react from \"react\";\nimport { filterDOMProps } from \"@react-aria/utils\";\nimport { classNames, useDOMRef, useSlotProps, useStyleProps } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\"; // incomplete component for show right now\n\nfunction $a10f4145261977a79a7655ffe33849cc$var$Image(props, ref) {\n  props = useSlotProps(props, 'image');\n\n  let _useProviderProps = useProviderProps(props),\n      {\n    objectFit,\n    src,\n    alt\n  } = _useProviderProps,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(_useProviderProps, [\"objectFit\", \"src\", \"alt\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  if (alt == null) {\n    console.warn('The `alt` prop was not provided to an image. ' + 'Add `alt` text for screen readers, or set `alt=\"\"` prop to indicate that the image ' + 'is decorative or redundant with displayed text and should not be annouced by screen readers.');\n  }\n\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(props), styleProps, {\n    className: classNames({}, styleProps.className),\n    style: _babelRuntimeHelpersEsmExtends({}, styleProps.style, {\n      overflow: 'hidden'\n    }),\n    ref: domRef\n  }), /*#__PURE__*/_react.createElement(\"img\", {\n    src: src,\n    alt: alt,\n    style: {\n      objectFit,\n      height: '100%',\n      width: '100%'\n    }\n  }));\n}\n/**\n * Image is used to insert and display an image within a component.\n */\n\n\nexport const Image = _react.forwardRef($a10f4145261977a79a7655ffe33849cc$var$Image);","map":{"version":3,"sources":["packages/@react-spectrum/image/src/Image.tsx"],"names":["props","useSlotProps","alt","otherProps","useProviderProps","styleProps","useStyleProps","domRef","useDOMRef","console","filterDOMProps","classNames","overflow","height","width","_Image","React"],"mappings":";;;;;iFAmBA;;AAEA,SAAA,2CAAA,CAAA,KAAA,EAAA,GAAA,EAAuE;AACrEA,EAAAA,KAAK,GAAGC,YAAY,CAAA,KAAA,EAApBD,OAAoB,CAApBA;;AACA,MAAA,iBAAA,GAKII,gBAAgB,CALpB,KAKoB,CALpB;AAAA,MAAI;AAAA,IAAA,SAAA;AAAA,IAAA,GAAA;AAGFF,IAAAA;AAHE,MAAJ,iBAAA;AAAA,MAIKC,UAJL,GAAA,mDAAA,CAAA,iBAAA,EAAA,CAAA,WAAA,EAAA,KAAA,EAAA,KAAA,CAAA,CAAA;;AAMA,MAAI;AAACE,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;AACA,MAAIC,MAAM,GAAGC,SAAS,CAAtB,GAAsB,CAAtB;;AAEA,MAAIN,GAAG,IAAP,IAAA,EAAiB;AACfO,IAAAA,OAAO,CAAPA,IAAAA,CACE,kDAAA,qFAAA,GADFA,8FAAAA;AAKD;;AAED,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,KAAA,EAAA,8BAAA,CAAA,EAAA,EACMC,cAAc,CADpB,KACoB,CADpB,EAAA,UAAA,EAAA;AAGE,IAAA,SAAS,EAAEC,UAAU,CAAA,EAAA,EAAKN,UAAU,CAHtC,SAGuB,CAHvB;AAIE,IAAA,KAAK,EAAA,8BAAA,CAAA,EAAA,EACAA,UAAU,CADV,KAAA,EAAA;AAEHO,MAAAA,QAAQ,EAAE;AAFP,KAAA,CAJP;AAQE,IAAA,GAAG,EAAEL;AARP,GAAA,CAAA,EAAA,aASE,MAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,GAAG,EADL,GAAA;AAEE,IAAA,GAAG,EAFL,GAAA;AAGE,IAAA,KAAK,EAAE;AAAA,MAAA,SAAA;AAAYM,MAAAA,MAAM,EAAlB,MAAA;AAA4BC,MAAAA,KAAK,EAAE;AAAnC;AAHT,GAAA,CATF,CADF;AAgBD;AAED;;;;;OAGA,MAAMC,KAAM,GAAGC,MAAK,CAALA,UAAAA,CAAf,2CAAeA,CAAf","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport React from 'react';\nimport {SpectrumImageProps} from '@react-types/image';\nimport {useProviderProps} from '@react-spectrum/provider';\n\n// incomplete component for show right now\n\nfunction Image(props: SpectrumImageProps, ref: DOMRef<HTMLDivElement>) {\n  props = useSlotProps(props, 'image');\n  let {\n    objectFit,\n    src,\n    alt,\n    ...otherProps\n  } = useProviderProps(props);\n  let {styleProps} = useStyleProps(otherProps);\n  let domRef = useDOMRef(ref);\n\n  if (alt == null) {\n    console.warn(\n      'The `alt` prop was not provided to an image. ' +\n      'Add `alt` text for screen readers, or set `alt=\"\"` prop to indicate that the image ' +\n      'is decorative or redundant with displayed text and should not be annouced by screen readers.'\n    );\n  }\n\n  return (\n    <div\n      {...filterDOMProps(props)}\n      {...styleProps}\n      className={classNames({}, styleProps.className)}\n      style={{\n        ...styleProps.style,\n        overflow: 'hidden'\n      }}\n      ref={domRef}>\n      <img\n        src={src}\n        alt={alt}\n        style={{objectFit, height: '100%', width: '100%'}} />\n    </div>\n  );\n}\n\n/**\n * Image is used to insert and display an image within a component.\n */\nconst _Image = React.forwardRef(Image);\nexport {_Image as Image};\n"]},"metadata":{},"sourceType":"module"}