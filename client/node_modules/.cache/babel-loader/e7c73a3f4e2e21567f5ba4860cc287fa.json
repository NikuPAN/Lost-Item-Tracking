{"ast":null,"code":"import { useIsSSR } from \"@react-aria/ssr\";\nimport _react, { forwardRef } from \"react\";\nimport { filterDOMProps } from \"@react-aria/utils\";\nimport { baseStyleProps, dimensionValue, passthroughStyle, useDOMRef, useStyleProps, classNames } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nconst $b23dc17afddee903803cb9d0132e8399$var$gridStyleProps = _babelRuntimeHelpersEsmExtends({}, baseStyleProps, {\n  autoFlow: ['gridAutoFlow', passthroughStyle],\n  autoColumns: ['gridAutoColumns', $b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue],\n  autoRows: ['gridAutoRows', $b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue],\n  areas: ['gridTemplateAreas', $b23dc17afddee903803cb9d0132e8399$var$gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', $b23dc17afddee903803cb9d0132e8399$var$gridTemplateValue],\n  rows: ['gridTemplateRows', $b23dc17afddee903803cb9d0132e8399$var$gridTemplateValue],\n  gap: ['gap', dimensionValue],\n  rowGap: ['rowGap', dimensionValue],\n  columnGap: ['columnGap', dimensionValue],\n  justifyItems: ['justifyItems', passthroughStyle],\n  justifyContent: ['justifyContent', passthroughStyle],\n  alignItems: ['alignItems', passthroughStyle],\n  alignContent: ['alignContent', passthroughStyle]\n});\n\nfunction $b23dc17afddee903803cb9d0132e8399$var$Grid(props, ref) {\n  let {\n    children\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps, $b23dc17afddee903803cb9d0132e8399$var$gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n\n  let domRef = useDOMRef(ref);\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps), styleProps, {\n    ref: domRef\n  }), children);\n}\n/**\n * Can be used to make a repeating fragment of the columns or rows list.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat).\n * @param count - The number of times to repeat the fragment.\n * @param repeat - The fragment to repeat.\n */\n\n\nexport function repeat(count, repeat) {\n  return \"repeat(\" + count + \", \" + $b23dc17afddee903803cb9d0132e8399$var$gridTemplateValue(repeat) + \")\";\n}\n/**\n * Defines a size range greater than or equal to min and less than or equal to max.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/minmax).\n * @param min - The minimum size.\n * @param max - The maximum size.\n */\n\nexport function minmax(min, max) {\n  return \"minmax(\" + $b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue(min) + \", \" + $b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue(max) + \")\";\n}\n/**\n * Clamps a given size to an available size.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/fit-content).\n * @param dimension - The size to clamp.\n */\n\nexport function fitContent(dimension) {\n  return \"fit-content(\" + $b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue(dimension) + \")\";\n}\n\nfunction $b23dc17afddee903803cb9d0132e8399$var$gridTemplateAreasValue(value) {\n  return value.map(v => \"\\\"\" + v + \"\\\"\").join('\\n');\n}\n\nfunction $b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) {\n    return value;\n  }\n\n  return dimensionValue(value);\n}\n\nfunction $b23dc17afddee903803cb9d0132e8399$var$gridTemplateValue(value) {\n  if (Array.isArray(value)) {\n    return value.map($b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue).join(' ');\n  }\n\n  return $b23dc17afddee903803cb9d0132e8399$var$gridDimensionValue(value);\n}\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\n\n\nexport const Grid = forwardRef($b23dc17afddee903803cb9d0132e8399$var$Grid); // ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-spectrum/layout/src/flex-gap.css\n\nvar $ab667a8f1fb16c30562d2deb99f756$exports = {};\n$ab667a8f1fb16c30562d2deb99f756$exports = {\n  \"flex-container\": \"_flex-container_ffbb7\",\n  \"-ms-flex\": \"_flex_ffbb7\",\n  \"flex\": \"_flex_ffbb7\",\n  \"flex-gap\": \"_flex-gap_ffbb7\"\n};\nconst $f9fee2c1db386bde8f28b36a814d1eb2$var$flexStyleProps = {\n  direction: ['flexDirection', passthroughStyle],\n  wrap: ['flexWrap', $f9fee2c1db386bde8f28b36a814d1eb2$var$flexWrapValue],\n  justifyContent: ['justifyContent', $f9fee2c1db386bde8f28b36a814d1eb2$var$flexAlignValue],\n  alignItems: ['alignItems', $f9fee2c1db386bde8f28b36a814d1eb2$var$flexAlignValue],\n  alignContent: ['alignContent', $f9fee2c1db386bde8f28b36a814d1eb2$var$flexAlignValue]\n};\nvar $ab667a8f1fb16c30562d2deb99f756$$interop$default = $parcel$interopDefault($ab667a8f1fb16c30562d2deb99f756$exports);\n\nfunction $f9fee2c1db386bde8f28b36a814d1eb2$var$Flex(props, ref) {\n  let {\n    children\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let {\n    styleProps: flexStyle\n  } = useStyleProps(otherProps, $f9fee2c1db386bde8f28b36a814d1eb2$var$flexStyleProps);\n  let domRef = useDOMRef(ref);\n  let isSSR = useIsSSR(); // If a gap property is specified, and there is no native support or we're in SSR, use a shim.\n  // Two divs are required for this: the outer one contains most style properties, and the inner\n  // one is the flex container. Each item inside the flex container gets a margin around it based\n  // on the gap, and the flex container has a negative margin to counteract this. The outer container\n  // is necessary to allow nesting of flex containers with gaps, so that the inner CSS variable doesn't\n  // override the outer one.\n\n  if ((props.gap || props.rowGap || props.columnGap) && (isSSR || !$f9fee2c1db386bde8f28b36a814d1eb2$var$isFlexGapSupported())) {\n    let style = _babelRuntimeHelpersEsmExtends({}, flexStyle.style, {\n      '--column-gap': props.columnGap != null ? dimensionValue(props.columnGap) : undefined,\n      '--row-gap': props.rowGap != null ? dimensionValue(props.rowGap) : undefined,\n      '--gap': props.gap != null ? dimensionValue(props.gap) : undefined\n    });\n\n    return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps), styleProps, {\n      className: classNames($ab667a8f1fb16c30562d2deb99f756$$interop$default, 'flex-container', styleProps.className),\n      ref: domRef\n    }), /*#__PURE__*/_react.createElement(\"div\", {\n      className: classNames($ab667a8f1fb16c30562d2deb99f756$$interop$default, 'flex', 'flex-gap'),\n      style: style\n    }, children));\n  } // If no gaps, or native support exists, then we only need to render a single div.\n\n\n  let style = _babelRuntimeHelpersEsmExtends({}, styleProps.style, flexStyle.style);\n\n  if (props.gap != null) {\n    style.gap = dimensionValue(props.gap);\n  }\n\n  if (props.columnGap != null) {\n    style.columnGap = dimensionValue(props.columnGap);\n  }\n\n  if (props.rowGap != null) {\n    style.rowGap = dimensionValue(props.rowGap);\n  }\n\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, filterDOMProps(otherProps), {\n    className: classNames($ab667a8f1fb16c30562d2deb99f756$$interop$default, 'flex', styleProps.className),\n    style: style,\n    ref: domRef\n  }), children);\n}\n/**\n * Normalize 'start' and 'end' alignment values to 'flex-start' and 'flex-end'\n * in flex containers for browser compatibility.\n */\n\n\nfunction $f9fee2c1db386bde8f28b36a814d1eb2$var$flexAlignValue(value) {\n  if (value === 'start') {\n    return 'flex-start';\n  }\n\n  if (value === 'end') {\n    return 'flex-end';\n  }\n\n  return value;\n}\n/**\n * Takes a boolean and translates it to flex wrap or nowrap.\n */\n\n\nfunction $f9fee2c1db386bde8f28b36a814d1eb2$var$flexWrapValue(value) {\n  if (typeof value === 'boolean') {\n    return value ? 'wrap' : 'nowrap';\n  }\n\n  return value;\n} // Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/Modernizr/Modernizr/blob/7efb9d0edd66815fb115fdce95fabaf019ce8db5/feature-detects/css/flexgap.js\n\n\nlet $f9fee2c1db386bde8f28b36a814d1eb2$var$_isFlexGapSupported = null;\n\nfunction $f9fee2c1db386bde8f28b36a814d1eb2$var$isFlexGapSupported() {\n  if ($f9fee2c1db386bde8f28b36a814d1eb2$var$_isFlexGapSupported != null) {\n    return $f9fee2c1db386bde8f28b36a814d1eb2$var$_isFlexGapSupported;\n  }\n\n  if (typeof document === 'undefined') {\n    return false;\n  } // create flex container with row-gap set\n\n\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px'; // create two, elements inside it\n\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div')); // append to the DOM (needed to obtain scrollHeight)\n\n  document.body.appendChild(flex);\n  $f9fee2c1db386bde8f28b36a814d1eb2$var$_isFlexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n\n  flex.parentNode.removeChild(flex);\n  return $f9fee2c1db386bde8f28b36a814d1eb2$var$_isFlexGapSupported;\n}\n/**\n * A layout container using flexbox. Provides Spectrum dimension values, and supports the gap\n * property to define consistent spacing between items.\n */\n\n\nexport const Flex = forwardRef($f9fee2c1db386bde8f28b36a814d1eb2$var$Flex);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","packages/@react-spectrum/layout/src/Grid.tsx","packages/@react-spectrum/layout/src/flex-gap.css","packages/@react-spectrum/layout/src/Flex.tsx"],"names":["a","gridStyleProps","autoFlow","autoColumns","autoRows","areas","columns","rows","gap","rowGap","columnGap","justifyItems","justifyContent","alignItems","alignContent","children","otherProps","styleProps","useStyleProps","domRef","useDOMRef","filterDOMProps","gridTemplateValue","gridDimensionValue","value","v","dimensionValue","Array","_Grid","forwardRef","flexStyleProps","direction","wrap","flexStyle","isSSR","useIsSSR","props","isFlexGapSupported","style","undefined","classNames","_isFlexGapSupported","flex","document","_Flex"],"mappings":"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","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  baseStyleProps,\n  dimensionValue,\n  passthroughStyle,\n  StyleHandlers,\n  useDOMRef,\n  useStyleProps\n} from '@react-spectrum/utils';\nimport {DimensionValue, DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {GridProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\n\nconst gridStyleProps: StyleHandlers = {\n  ...baseStyleProps,\n  autoFlow: ['gridAutoFlow', passthroughStyle],\n  autoColumns: ['gridAutoColumns', gridDimensionValue],\n  autoRows: ['gridAutoRows', gridDimensionValue],\n  areas: ['gridTemplateAreas', gridTemplateAreasValue],\n  columns: ['gridTemplateColumns', gridTemplateValue],\n  rows: ['gridTemplateRows', gridTemplateValue],\n  gap: ['gap', dimensionValue],\n  rowGap: ['rowGap', dimensionValue],\n  columnGap: ['columnGap', dimensionValue],\n  justifyItems: ['justifyItems', passthroughStyle],\n  justifyContent: ['justifyContent', passthroughStyle],\n  alignItems: ['alignItems', passthroughStyle],\n  alignContent: ['alignContent', passthroughStyle]\n};\n\nfunction Grid(props: GridProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps, gridStyleProps);\n  styleProps.style.display = 'grid'; // inline-grid?\n  let domRef = useDOMRef(ref);\n\n  return (\n    <div {...filterDOMProps(otherProps)} {...styleProps} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Can be used to make a repeating fragment of the columns or rows list.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/repeat).\n * @param count - The number of times to repeat the fragment.\n * @param repeat - The fragment to repeat.\n */\nexport function repeat(count: number | 'auto-fill' | 'auto-fit', repeat: DimensionValue | DimensionValue[]): string {\n  return `repeat(${count}, ${gridTemplateValue(repeat)})`;\n}\n\n/**\n * Defines a size range greater than or equal to min and less than or equal to max.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/minmax).\n * @param min - The minimum size.\n * @param max - The maximum size.\n */\nexport function minmax(min: DimensionValue, max: DimensionValue): string {\n  return `minmax(${gridDimensionValue(min)}, ${gridDimensionValue(max)})`;\n}\n\n/**\n * Clamps a given size to an available size.\n * See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/fit-content).\n * @param dimension - The size to clamp.\n */\nexport function fitContent(dimension: DimensionValue): string {\n  return `fit-content(${gridDimensionValue(dimension)})`;\n}\n\nfunction gridTemplateAreasValue(value) {\n  return value.map(v => `\"${v}\"`).join('\\n');\n}\n\nfunction gridDimensionValue(value) {\n  if (/^max-content|min-content|minmax|auto|fit-content|repeat|subgrid/.test(value)) {\n    return value;\n  }\n\n  return dimensionValue(value);\n}\n\nfunction gridTemplateValue(value) {\n  if (Array.isArray(value)) {\n    return value.map(gridDimensionValue).join(' ');\n  }\n\n  return gridDimensionValue(value);\n}\n\n/**\n * A layout container using CSS grid. Supports Spectrum dimensions as values to\n * ensure consistent and adaptive sizing and spacing.\n */\nconst _Grid = forwardRef(Grid);\nexport {_Grid as Grid};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.flex-container {\n  /* this is necessary so that the inner margins don't affect anything outside */\n  display: flex;\n}\n\n.flex {\n  display: flex;\n}\n\n.flex-gap {\n  --gap: 0px;\n  --column-gap: var(--gap);\n  --row-gap: var(--gap);\n\n  /* apply a negative margin to counteract the margin on each item at the edges */\n  margin: calc(var(--row-gap) / -2) calc(var(--column-gap) / -2);\n\n  /* increase the width and height to account for this margin */\n  /* Add 1px to fix rounding error in Safari (╯°□°)╯︵ ┻━┻ */\n  width: calc(100% + calc(var(--column-gap) + 1px));\n  height: calc(100% + var(--row-gap));\n}\n\n/* If the selector was .flex-gap > *, it wouldn't override when components have a margin 0 specified by a single\n * class selector, specificity is equal. Both are one class. Neither > nor * contribute to specificity.\n * We need to make it more specific, so we raise it by 1 class.\n */\n.flex-container .flex-gap > * {\n  /* apply half of the gap to each side of every item */\n  margin: calc(var(--row-gap) / 2) calc(var(--column-gap) / 2);\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, dimensionValue, passthroughStyle, StyleHandlers, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {filterDOMProps} from '@react-aria/utils';\nimport {FlexProps} from '@react-types/layout';\nimport React, {forwardRef} from 'react';\nimport styles from './flex-gap.css';\nimport {useIsSSR} from '@react-aria/ssr';\n\nconst flexStyleProps: StyleHandlers = {\n  direction: ['flexDirection', passthroughStyle],\n  wrap: ['flexWrap', flexWrapValue],\n  justifyContent: ['justifyContent', flexAlignValue],\n  alignItems: ['alignItems', flexAlignValue],\n  alignContent: ['alignContent', flexAlignValue]\n};\n\nfunction Flex(props: FlexProps, ref: DOMRef<HTMLDivElement>) {\n  let {\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {styleProps: flexStyle} = useStyleProps(otherProps, flexStyleProps);\n  let domRef = useDOMRef(ref);\n  let isSSR = useIsSSR();\n\n  // If a gap property is specified, and there is no native support or we're in SSR, use a shim.\n  // Two divs are required for this: the outer one contains most style properties, and the inner\n  // one is the flex container. Each item inside the flex container gets a margin around it based\n  // on the gap, and the flex container has a negative margin to counteract this. The outer container\n  // is necessary to allow nesting of flex containers with gaps, so that the inner CSS variable doesn't\n  // override the outer one.\n  if ((props.gap || props.rowGap || props.columnGap) && (isSSR || !isFlexGapSupported())) {\n    let style = {\n      ...flexStyle.style,\n      '--column-gap': props.columnGap != null ? dimensionValue(props.columnGap) : undefined,\n      '--row-gap': props.rowGap != null ? dimensionValue(props.rowGap) : undefined,\n      '--gap': props.gap != null ? dimensionValue(props.gap) : undefined\n    };\n\n    return (\n      <div {...filterDOMProps(otherProps)} {...styleProps} className={classNames(styles, 'flex-container', styleProps.className)} ref={domRef}>\n        <div className={classNames(styles, 'flex', 'flex-gap')} style={style}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n\n  // If no gaps, or native support exists, then we only need to render a single div.\n  let style = {\n    ...styleProps.style,\n    ...flexStyle.style\n  };\n\n  if (props.gap != null) {\n    style.gap = dimensionValue(props.gap);\n  }\n\n  if (props.columnGap != null) {\n    style.columnGap = dimensionValue(props.columnGap);\n  }\n\n  if (props.rowGap != null) {\n    style.rowGap = dimensionValue(props.rowGap);\n  }\n\n  return (\n    <div {...filterDOMProps(otherProps)} className={classNames(styles, 'flex', styleProps.className)} style={style} ref={domRef}>\n      {children}\n    </div>\n  );\n}\n\n/**\n * Normalize 'start' and 'end' alignment values to 'flex-start' and 'flex-end'\n * in flex containers for browser compatibility.\n */\nfunction flexAlignValue(value) {\n  if (value === 'start') {\n    return 'flex-start';\n  }\n\n  if (value === 'end') {\n    return 'flex-end';\n  }\n\n  return value;\n}\n\n/**\n * Takes a boolean and translates it to flex wrap or nowrap.\n */\nfunction flexWrapValue(value) {\n  if (typeof value === 'boolean') {\n    return value ? 'wrap' : 'nowrap';\n  }\n\n  return value;\n}\n\n\n// Original licensing for the following method can be found in the\n// NOTICE file in the root directory of this source tree.\n// See https://github.com/Modernizr/Modernizr/blob/7efb9d0edd66815fb115fdce95fabaf019ce8db5/feature-detects/css/flexgap.js\n\nlet _isFlexGapSupported = null;\nfunction isFlexGapSupported() {\n  if (_isFlexGapSupported != null) {\n    return _isFlexGapSupported;\n  }\n\n  if (typeof document === 'undefined') {\n    return false;\n  }\n\n  // create flex container with row-gap set\n  var flex = document.createElement('div');\n  flex.style.display = 'flex';\n  flex.style.flexDirection = 'column';\n  flex.style.rowGap = '1px';\n\n  // create two, elements inside it\n  flex.appendChild(document.createElement('div'));\n  flex.appendChild(document.createElement('div'));\n\n  // append to the DOM (needed to obtain scrollHeight)\n  document.body.appendChild(flex);\n  _isFlexGapSupported = flex.scrollHeight === 1; // flex container should be 1px high from the row-gap\n  flex.parentNode.removeChild(flex);\n\n  return _isFlexGapSupported;\n}\n\n/**\n * A layout container using flexbox. Provides Spectrum dimension values, and supports the gap\n * property to define consistent spacing between items.\n */\nconst _Flex = forwardRef(Flex);\nexport {_Flex as Flex};\n"]},"metadata":{},"sourceType":"module"}