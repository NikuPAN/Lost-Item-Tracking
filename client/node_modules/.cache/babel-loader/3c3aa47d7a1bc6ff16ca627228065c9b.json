{"ast":null,"code":"import { useSearchFieldState } from \"@react-stately/searchfield\";\nimport { useSearchField } from \"@react-aria/searchfield\";\nimport { useProviderProps } from \"@react-spectrum/provider\";\nimport { TextFieldBase } from \"@react-spectrum/textfield\";\nimport _react, { forwardRef, useRef } from \"react\";\nimport _spectrumIconsUiMagnifier from \"@spectrum-icons/ui/Magnifier\";\nimport { ClearButton } from \"@react-spectrum/button\";\nimport { classNames } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n} // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/search/vars.css\n\n\nvar $f7ba17202ccc7135cfe7128957b$exports = {};\n$f7ba17202ccc7135cfe7128957b$exports = {\n  \"spectrum-Search\": \"_spectrum-Search_973c6\",\n  \"spectrum-ClearButton\": \"_spectrum-ClearButton_973c6\",\n  \"is-quiet\": \"_is-quiet_973c6\",\n  \"spectrum-Search-input\": \"_spectrum-Search-input_973c6\",\n  \"is-invalid\": \"_is-invalid_973c6\",\n  \"is-valid\": \"_is-valid_973c6\",\n  \"spectrum-Textfield\": \"_spectrum-Textfield_973c6\",\n  \"spectrum-Search-icon\": \"_spectrum-Search-icon_973c6\",\n  \"is-hovered\": \"_is-hovered_973c6\",\n  \"focus-ring\": \"_focus-ring_973c6\"\n};\nvar $f7ba17202ccc7135cfe7128957b$$interop$default = $parcel$interopDefault($f7ba17202ccc7135cfe7128957b$exports);\n\nfunction $e97dfb3c8186c575d74a940bc4c22$var$SearchField(props, ref) {\n  props = useProviderProps(props);\n\n  let defaultIcon = /*#__PURE__*/_react.createElement(_spectrumIconsUiMagnifier, {\n    UNSAFE_className: classNames($f7ba17202ccc7135cfe7128957b$$interop$default, 'spectrum-Search-icon')\n  });\n\n  let {\n    icon = defaultIcon,\n    isDisabled,\n    UNSAFE_className\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"icon\", \"isDisabled\", \"UNSAFE_className\"]);\n\n  let state = useSearchFieldState(props);\n  let inputRef = useRef();\n  let {\n    labelProps,\n    inputProps,\n    clearButtonProps\n  } = useSearchField(props, state, inputRef);\n\n  let clearButton = /*#__PURE__*/_react.createElement(ClearButton, _babelRuntimeHelpersEsmExtends({}, clearButtonProps, {\n    preventFocus: true,\n    UNSAFE_className: classNames($f7ba17202ccc7135cfe7128957b$$interop$default, 'spectrum-ClearButton'),\n    isDisabled: isDisabled\n  }));\n\n  return /*#__PURE__*/_react.createElement(TextFieldBase, _babelRuntimeHelpersEsmExtends({}, otherProps, {\n    labelProps: labelProps,\n    inputProps: inputProps,\n    UNSAFE_className: classNames($f7ba17202ccc7135cfe7128957b$$interop$default, 'spectrum-Search', 'spectrum-Textfield', {\n      'is-disabled': isDisabled,\n      'is-quiet': props.isQuiet,\n      'is-invalid': props.validationState === 'invalid',\n      'is-valid': props.validationState === 'valid'\n    }, UNSAFE_className),\n    inputClassName: classNames($f7ba17202ccc7135cfe7128957b$$interop$default, 'spectrum-Search-input'),\n    ref: ref,\n    inputRef: inputRef,\n    isDisabled: isDisabled,\n    icon: icon,\n    wrapperChildren: state.value !== '' && !props.isReadOnly && clearButton\n  }));\n}\n/**\n * A SearchField is a text field designed for searches.\n */\n\n\nexport let SearchField = forwardRef($e97dfb3c8186c575d74a940bc4c22$var$SearchField);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/@adobe/spectrum-css-temp/components/search/vars.css","packages/@react-spectrum/searchfield/src/SearchField.tsx"],"names":["a","props","useProviderProps","defaultIcon","classNames","icon","UNSAFE_className","otherProps","state","useSearchFieldState","inputRef","useRef","clearButtonProps","useSearchField","clearButton","isDisabled","_SearchField","forwardRef"],"mappings":";;;;;;;;;;;;AAAA,SAAA,sBAAA,CAAA,CAAA,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAANA,UAAAA,GAAoBA,CAAC,CAArBA,OAAAA,GAAP,CAAA;AACD,C;;;;ACFD,oCAAA,GAAiB;AACf,qBADe,wBAAA;AAEf,0BAFe,6BAAA;AAGf,cAHe,iBAAA;AAIf,2BAJe,8BAAA;AAKf,gBALe,mBAAA;AAMf,cANe,iBAAA;AAOf,wBAPe,2BAAA;AAQf,0BARe,6BAAA;AASf,gBATe,mBAAA;AAUf,gBAAc;AAVC,CAAjB;;;ACwBA,SAAA,8CAAA,CAAA,KAAA,EAAA,GAAA,EAAoF;AAClFC,EAAAA,KAAK,GAAGC,gBAAgB,CAAxBD,KAAwB,CAAxBA;;AACA,MAAIE,WAAW,GAAA,aACb,MAAA,CAAA,aAAA,CAAA,yBAAA,EAAA;AAEE,IAAA,gBAAgB,EACdC,UAAU,CAAA,6CAAA,EAAA,sBAAA;AAHd,GAAA,CADF;;AAWA,MAAI;AACFC,IAAAA,IAAI,GADF,WAAA;AAAA,IAAA,UAAA;AAGFC,IAAAA;AAHE,MAAJ,KAAA;AAAA,MAIKC,UAJL,GAAA,mDAAA,CAAA,KAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,kBAAA,CAAA,CAAA;;AAOA,MAAIC,KAAK,GAAGC,mBAAmB,CAA/B,KAA+B,CAA/B;AACA,MAAIC,QAAQ,GAAGC,MAAf,EAAA;AACA,MAAI;AAAA,IAAA,UAAA;AAAA,IAAA,UAAA;AAAyBC,IAAAA;AAAzB,MAA6CC,cAAc,CAAA,KAAA,EAAA,KAAA,EAA/D,QAA+D,CAA/D;;AAEA,MAAIC,WAAW,GAAA,aACb,MAAA,CAAA,aAAA,CAAA,WAAA,EAAA,8BAAA,CAAA,EAAA,EAAA,gBAAA,EAAA;AAEE,IAAA,YAAY,EAFd,IAAA;AAGE,IAAA,gBAAgB,EACdV,UAAU,CAAA,6CAAA,EAJd,sBAIc,CAJd;AASE,IAAA,UAAU,EAAEW;AATd,GAAA,CAAA,CADF;;AAaA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,aAAA,EAAA,8BAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAEE,IAAA,UAAU,EAFZ,UAAA;AAGE,IAAA,UAAU,EAHZ,UAAA;AAIE,IAAA,gBAAgB,EACdX,UAAU,CAAA,6CAAA,EAAA,iBAAA,EAAA,oBAAA,EAIR;AACE,qBADF,UAAA;AAEE,kBAAYH,KAAK,CAFnB,OAAA;AAGE,oBAAcA,KAAK,CAALA,eAAAA,KAHhB,SAAA;AAIE,kBAAYA,KAAK,CAALA,eAAAA,KAA0B;AAJxC,KAJQ,EALd,gBAKc,CALd;AAkBE,IAAA,cAAc,EAAEG,UAAU,CAAA,6CAAA,EAlB5B,uBAkB4B,CAlB5B;AAmBE,IAAA,GAAG,EAnBL,GAAA;AAoBE,IAAA,QAAQ,EApBV,QAAA;AAqBE,IAAA,UAAU,EArBZ,UAAA;AAsBE,IAAA,IAAI,EAtBN,IAAA;AAuBE,IAAA,eAAe,EAAGI,KAAK,CAALA,KAAAA,KAAAA,EAAAA,IAAsB,CAACP,KAAK,CAA7B,UAACO,IAA4CM;AAvBhE,GAAA,CAAA,CADF;AA0BD;AAED;;;;;OAGA,IAAIE,WAAY,GAAGC,UAAU,CAA7B,8CAA6B,CAA7B","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport {ClearButton} from '@react-spectrum/button';\nimport Magnifier from '@spectrum-icons/ui/Magnifier';\nimport React, {forwardRef, RefObject, useRef} from 'react';\nimport {SpectrumSearchFieldProps} from '@react-types/searchfield';\nimport styles from '@adobe/spectrum-css-temp/components/search/vars.css';\nimport {TextFieldBase} from '@react-spectrum/textfield';\nimport {TextFieldRef} from '@react-types/textfield';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useSearchField} from '@react-aria/searchfield';\nimport {useSearchFieldState} from '@react-stately/searchfield';\n\nfunction SearchField(props: SpectrumSearchFieldProps, ref: RefObject<TextFieldRef>) {\n  props = useProviderProps(props);\n  let defaultIcon = (\n    <Magnifier\n      data-testid=\"searchicon\"\n      UNSAFE_className={\n        classNames(\n          styles,\n          'spectrum-Search-icon'\n        )\n      } />\n  );\n\n  let {\n    icon = defaultIcon,\n    isDisabled,\n    UNSAFE_className,\n    ...otherProps\n  } = props;\n\n  let state = useSearchFieldState(props);\n  let inputRef = useRef<HTMLInputElement | HTMLTextAreaElement>();\n  let {labelProps, inputProps, clearButtonProps} = useSearchField(props, state, inputRef);\n\n  let clearButton = (\n    <ClearButton\n      {...clearButtonProps}\n      preventFocus\n      UNSAFE_className={\n        classNames(\n          styles,\n          'spectrum-ClearButton'\n        )\n      }\n      isDisabled={isDisabled} />\n  );\n\n  return (\n    <TextFieldBase\n      {...otherProps}\n      labelProps={labelProps}\n      inputProps={inputProps}\n      UNSAFE_className={\n        classNames(\n          styles,\n          'spectrum-Search',\n          'spectrum-Textfield',\n          {\n            'is-disabled': isDisabled,\n            'is-quiet': props.isQuiet,\n            'is-invalid': props.validationState === 'invalid',\n            'is-valid': props.validationState === 'valid'\n          },\n          UNSAFE_className\n        )\n      }\n      inputClassName={classNames(styles, 'spectrum-Search-input')}\n      ref={ref}\n      inputRef={inputRef}\n      isDisabled={isDisabled}\n      icon={icon}\n      wrapperChildren={(state.value !== '' && !props.isReadOnly) && clearButton} />\n  );\n}\n\n/**\n * A SearchField is a text field designed for searches.\n */\nlet _SearchField = forwardRef(SearchField);\nexport {_SearchField as SearchField};\n"]},"metadata":{},"sourceType":"module"}