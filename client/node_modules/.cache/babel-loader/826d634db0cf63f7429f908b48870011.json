{"ast":null,"code":"import { useFormProps } from \"@react-spectrum/form\";\nimport { useCheckboxGroupState } from \"@react-stately/checkbox\";\nimport { Label } from \"@react-spectrum/label\";\nimport { useToggleState } from \"@react-stately/toggle\";\nimport { useProviderProps, Provider } from \"@react-spectrum/provider\";\nimport { useHover } from \"@react-aria/interactions\";\nimport { useCheckbox, useCheckboxGroupItem, useCheckboxGroup } from \"@react-aria/checkbox\";\nimport { FocusRing } from \"@react-aria/focus\";\nimport _spectrumIconsUiDashSmall from \"@spectrum-icons/ui/DashSmall\";\nimport { classNames, useFocusableRef, useStyleProps, useDOMRef } from \"@react-spectrum/utils\";\nimport _spectrumIconsUiCheckmarkSmall from \"@spectrum-icons/ui/CheckmarkSmall\";\nimport _react, { forwardRef, useContext, useRef } from \"react\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nconst $bde9b0e0d548308768028eb5bb392fd8$export$CheckboxGroupContext = _react.createContext(null); // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/checkbox/vars.css\n\n\nvar $f30999564e5c72d738e3a371addc872$exports = {};\n$f30999564e5c72d738e3a371addc872$exports = {\n  \"spectrum-Checkbox\": \"_spectrum-Checkbox_0ffa4\",\n  \"spectrum-Checkbox-input\": \"_spectrum-Checkbox-input_0ffa4\",\n  \"focus-ring\": \"_focus-ring_0ffa4\",\n  \"spectrum-Checkbox-box\": \"_spectrum-Checkbox-box_0ffa4\",\n  \"is-indeterminate\": \"_is-indeterminate_0ffa4\",\n  \"spectrum-Checkbox-checkmark\": \"_spectrum-Checkbox-checkmark_0ffa4\",\n  \"spectrum-Checkbox-partialCheckmark\": \"_spectrum-Checkbox-partialCheckmark_0ffa4\",\n  \"is-checked\": \"_is-checked_0ffa4\",\n  \"spectrum-Checkbox-label\": \"_spectrum-Checkbox-label_0ffa4\",\n  \"is-hovered\": \"_is-hovered_0ffa4\",\n  \"spectrum-Checkbox--quiet\": \"_spectrum-Checkbox--quiet_0ffa4\",\n  \"is-invalid\": \"_is-invalid_0ffa4\"\n};\nvar $f30999564e5c72d738e3a371addc872$$interop$default = $parcel$interopDefault($f30999564e5c72d738e3a371addc872$exports);\n\nfunction $e1b4ba32ec7b6456ce724babf7eb8$var$Checkbox(props, ref) {\n  let originalProps = props;\n  props = useProviderProps(props);\n\n  let {\n    isIndeterminate = false,\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children,\n    validationState\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"isIndeterminate\", \"isEmphasized\", \"isDisabled\", \"autoFocus\", \"children\", \"validationState\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let {\n    hoverProps,\n    isHovered\n  } = useHover({\n    isDisabled\n  });\n  let inputRef = useRef(null);\n  let domRef = useFocusableRef(ref, inputRef); // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n\n  let groupState = useContext($bde9b0e0d548308768028eb5bb392fd8$export$CheckboxGroupContext);\n  let {\n    inputProps\n  } = groupState // eslint-disable-next-line react-hooks/rules-of-hooks\n  ? useCheckboxGroupItem(_babelRuntimeHelpersEsmExtends({}, props, {\n    // Only pass isRequired and validationState to react-aria if they came from\n    // the props for this individual checkbox, and not from the group via context.\n    isRequired: originalProps.isRequired,\n    validationState: originalProps.validationState\n  }), groupState, inputRef) // eslint-disable-next-line react-hooks/rules-of-hooks\n  : useCheckbox(props, useToggleState(props), inputRef);\n  let markIcon = isIndeterminate ? /*#__PURE__*/_react.createElement(_spectrumIconsUiDashSmall, {\n    UNSAFE_className: classNames($f30999564e5c72d738e3a371addc872$$interop$default, 'spectrum-Checkbox-partialCheckmark')\n  }) : /*#__PURE__*/_react.createElement(_spectrumIconsUiCheckmarkSmall, {\n    UNSAFE_className: classNames($f30999564e5c72d738e3a371addc872$$interop$default, 'spectrum-Checkbox-checkmark')\n  });\n\n  if (groupState) {\n    for (let key of ['isSelected', 'defaultSelected', 'isEmphasized']) {\n      if (originalProps[key] != null) {\n        console.warn(key + \" is unsupported on individual <Checkbox> elements within a <CheckboxGroup>. Please apply these props to the group instead.\");\n      }\n    }\n  }\n\n  return /*#__PURE__*/_react.createElement(\"label\", _babelRuntimeHelpersEsmExtends({}, styleProps, hoverProps, {\n    ref: domRef,\n    className: classNames($f30999564e5c72d738e3a371addc872$$interop$default, 'spectrum-Checkbox', {\n      'is-checked': inputProps.checked,\n      'is-indeterminate': isIndeterminate,\n      'spectrum-Checkbox--quiet': !isEmphasized,\n      'is-invalid': validationState === 'invalid',\n      'is-disabled': isDisabled,\n      'is-hovered': isHovered\n    }, styleProps.className)\n  }), /*#__PURE__*/_react.createElement(FocusRing, {\n    focusRingClass: classNames($f30999564e5c72d738e3a371addc872$$interop$default, 'focus-ring'),\n    autoFocus: autoFocus\n  }, /*#__PURE__*/_react.createElement(\"input\", _babelRuntimeHelpersEsmExtends({}, inputProps, {\n    ref: inputRef,\n    className: classNames($f30999564e5c72d738e3a371addc872$$interop$default, 'spectrum-Checkbox-input')\n  }))), /*#__PURE__*/_react.createElement(\"span\", {\n    className: classNames($f30999564e5c72d738e3a371addc872$$interop$default, 'spectrum-Checkbox-box')\n  }, markIcon), children && /*#__PURE__*/_react.createElement(\"span\", {\n    className: classNames($f30999564e5c72d738e3a371addc872$$interop$default, 'spectrum-Checkbox-label')\n  }, children));\n}\n/**\n * Checkboxes allow users to select multiple items from a list of individual items,\n * or to mark one individual item as selected.\n */\n\n\nexport let Checkbox = forwardRef($e1b4ba32ec7b6456ce724babf7eb8$var$Checkbox); // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/fieldlabel/vars.css\n\nvar $c9fb1f4220ea2c59cb2e10f0e9828c6e$exports = {};\n$c9fb1f4220ea2c59cb2e10f0e9828c6e$exports = {\n  \"spectrum-FieldLabel\": \"_spectrum-FieldLabel_36b9b\",\n  \"spectrum-FieldLabel--positionSide\": \"_spectrum-FieldLabel--positionSide_36b9b\",\n  \"spectrum-FieldLabel-requiredIcon\": \"_spectrum-FieldLabel-requiredIcon_36b9b\",\n  \"spectrum-FieldLabel--alignEnd\": \"_spectrum-FieldLabel--alignEnd_36b9b\",\n  \"spectrum-Field\": \"_spectrum-Field_36b9b\",\n  \"spectrum-Field--positionTop\": \"_spectrum-Field--positionTop_36b9b\",\n  \"spectrum-Field-field\": \"_spectrum-Field-field_36b9b\",\n  \"spectrum-Field--positionSide\": \"_spectrum-Field--positionSide_36b9b\",\n  \"spectrum-Form\": \"_spectrum-Form_36b9b\",\n  \"spectrum-Form--positionSide\": \"_spectrum-Form--positionSide_36b9b\",\n  \"spectrum-Form--positionTop\": \"_spectrum-Form--positionTop_36b9b\",\n  \"spectrum-Form-itemLabel\": \"_spectrum-Form-itemLabel_36b9b\",\n  \"is-disabled\": \"_is-disabled_36b9b\"\n}; // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/fieldgroup/vars.css\n\nvar $d9233c793c189283ec9d2429b27b9$exports = {};\n$d9233c793c189283ec9d2429b27b9$exports = {\n  \"spectrum-FieldGroup\": \"_spectrum-FieldGroup_8cb9b\",\n  \"spectrum-FieldGroup--positionSide\": \"_spectrum-FieldGroup--positionSide_8cb9b\",\n  \"spectrum-FieldGroup-group\": \"_spectrum-FieldGroup-group_8cb9b\",\n  \"spectrum-FieldGroup-group--horizontal\": \"_spectrum-FieldGroup-group--horizontal_8cb9b\"\n};\nvar $d9233c793c189283ec9d2429b27b9$$interop$default = $parcel$interopDefault($d9233c793c189283ec9d2429b27b9$exports);\nvar $c9fb1f4220ea2c59cb2e10f0e9828c6e$$interop$default = $parcel$interopDefault($c9fb1f4220ea2c59cb2e10f0e9828c6e$exports);\n\nfunction $e22ad9c258293c82626b875dc3985$var$CheckboxGroup(props, ref) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n\n  let {\n    isEmphasized,\n    isRequired,\n    necessityIndicator,\n    label,\n    labelPosition = 'top',\n    labelAlign,\n    children,\n    orientation = 'vertical',\n    validationState\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"isEmphasized\", \"isRequired\", \"necessityIndicator\", \"label\", \"labelPosition\", \"labelAlign\", \"children\", \"orientation\", \"validationState\"]);\n\n  let domRef = useDOMRef(ref);\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let state = useCheckboxGroupState(props);\n  let {\n    labelProps,\n    groupProps\n  } = useCheckboxGroup(props, state);\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, styleProps, groupProps, {\n    className: classNames($d9233c793c189283ec9d2429b27b9$$interop$default, 'spectrum-FieldGroup', {\n      'spectrum-FieldGroup--positionSide': labelPosition === 'side'\n    }, // This is so checkbox group works inside a <Form>\n    classNames($c9fb1f4220ea2c59cb2e10f0e9828c6e$$interop$default, 'spectrum-Field'), styleProps.className),\n    ref: domRef\n  }), label && /*#__PURE__*/_react.createElement(Label, _babelRuntimeHelpersEsmExtends({}, labelProps, {\n    elementType: \"span\",\n    labelPosition: labelPosition,\n    labelAlign: labelAlign,\n    isRequired: isRequired,\n    necessityIndicator: necessityIndicator,\n    includeNecessityIndicatorInAccessibilityName: true\n  }), label), /*#__PURE__*/_react.createElement(\"div\", {\n    role: \"presentation\",\n    className: classNames($d9233c793c189283ec9d2429b27b9$$interop$default, 'spectrum-FieldGroup-group', {\n      'spectrum-FieldGroup-group--horizontal': orientation === 'horizontal'\n    })\n  }, /*#__PURE__*/_react.createElement(Provider, {\n    isEmphasized: isEmphasized,\n    validationState: validationState\n  }, /*#__PURE__*/_react.createElement($bde9b0e0d548308768028eb5bb392fd8$export$CheckboxGroupContext.Provider, {\n    value: state\n  }, children))));\n}\n/**\n * A CheckboxGroup allows users to select one or more items from a list of choices.\n */\n\n\nexport const CheckboxGroup = _react.forwardRef($e22ad9c258293c82626b875dc3985$var$CheckboxGroup);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","packages/@react-spectrum/checkbox/src/context.ts","node_modules/@adobe/spectrum-css-temp/components/checkbox/vars.css","packages/@react-spectrum/checkbox/src/Checkbox.tsx","node_modules/@adobe/spectrum-css-temp/components/fieldlabel/vars.css","node_modules/@adobe/spectrum-css-temp/components/fieldgroup/vars.css","packages/@react-spectrum/checkbox/src/CheckboxGroup.tsx"],"names":["a","CheckboxGroupContext","React","originalProps","props","useProviderProps","isIndeterminate","isEmphasized","isDisabled","validationState","otherProps","styleProps","useStyleProps","isHovered","useHover","inputRef","useRef","domRef","useFocusableRef","groupState","useContext","inputProps","useCheckboxGroupItem","isRequired","useCheckbox","useToggleState","markIcon","classNames","console","key","autoFocus","children","_Checkbox","forwardRef","useFormProps","labelPosition","orientation","useDOMRef","state","useCheckboxGroupState","groupProps","useCheckboxGroup","label","_CheckboxGroup"],"mappings":"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","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupState} from '@react-stately/checkbox';\nimport React from 'react';\n\nexport const CheckboxGroupContext = React.createContext<CheckboxGroupState>(null);\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupContext} from './context';\nimport CheckmarkSmall from '@spectrum-icons/ui/CheckmarkSmall';\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport DashSmall from '@spectrum-icons/ui/DashSmall';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport React, {forwardRef, useContext, useRef} from 'react';\nimport {SpectrumCheckboxProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/checkbox/vars.css';\nimport {useCheckbox, useCheckboxGroupItem} from '@react-aria/checkbox';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useToggleState} from '@react-stately/toggle';\n\nfunction Checkbox(props: SpectrumCheckboxProps, ref: FocusableRef<HTMLLabelElement>) {\n  let originalProps = props;\n  props = useProviderProps(props);\n  let {\n    isIndeterminate = false,\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children,\n    validationState,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let domRef = useFocusableRef(ref, inputRef);\n\n  // Swap hooks depending on whether this checkbox is inside a CheckboxGroup.\n  // This is a bit unorthodox. Typically, hooks cannot be called in a conditional,\n  // but since the checkbox won't move in and out of a group, it should be safe.\n  let groupState = useContext(CheckboxGroupContext);\n  let {inputProps} = groupState\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    ? useCheckboxGroupItem({\n      ...props,\n      // Only pass isRequired and validationState to react-aria if they came from\n      // the props for this individual checkbox, and not from the group via context.\n      isRequired: originalProps.isRequired,\n      validationState: originalProps.validationState\n    }, groupState, inputRef)\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    : useCheckbox(props, useToggleState(props), inputRef);\n\n  let markIcon = isIndeterminate\n    ? <DashSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-partialCheckmark')} />\n    : <CheckmarkSmall UNSAFE_className={classNames(styles, 'spectrum-Checkbox-checkmark')} />;\n\n  if (groupState) {\n    for (let key of ['isSelected', 'defaultSelected', 'isEmphasized']) {\n      if (originalProps[key] != null) {\n        console.warn(`${key} is unsupported on individual <Checkbox> elements within a <CheckboxGroup>. Please apply these props to the group instead.`);\n      }\n    }\n  }\n\n  return (\n    <label\n      {...styleProps}\n      {...hoverProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-Checkbox',\n          {\n            'is-checked': inputProps.checked,\n            'is-indeterminate': isIndeterminate,\n            'spectrum-Checkbox--quiet': !isEmphasized,\n            'is-invalid': validationState === 'invalid',\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n        <input\n          {...inputProps}\n          ref={inputRef}\n          className={classNames(styles, 'spectrum-Checkbox-input')} />\n      </FocusRing>\n      <span className={classNames(styles, 'spectrum-Checkbox-box')}>{markIcon}</span>\n      {children && (\n        <span className={classNames(styles, 'spectrum-Checkbox-label')}>\n          {children}\n        </span>\n      )}\n    </label>\n  );\n}\n/**\n * Checkboxes allow users to select multiple items from a list of individual items,\n * or to mark one individual item as selected.\n */\nlet _Checkbox = forwardRef(Checkbox);\nexport {_Checkbox as Checkbox};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {CheckboxGroupContext} from './context';\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef, LabelPosition} from '@react-types/shared';\nimport {Label} from '@react-spectrum/label';\nimport labelStyles from '@adobe/spectrum-css-temp/components/fieldlabel/vars.css';\nimport {Provider, useProviderProps} from '@react-spectrum/provider';\nimport React from 'react';\nimport {SpectrumCheckboxGroupProps} from '@react-types/checkbox';\nimport styles from '@adobe/spectrum-css-temp/components/fieldgroup/vars.css';\nimport {useCheckboxGroup} from '@react-aria/checkbox';\nimport {useCheckboxGroupState} from '@react-stately/checkbox';\nimport {useFormProps} from '@react-spectrum/form';\n\nfunction CheckboxGroup(props: SpectrumCheckboxGroupProps, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n  props = useFormProps(props);\n  let {\n    isEmphasized,\n    isRequired,\n    necessityIndicator,\n    label,\n    labelPosition = 'top' as LabelPosition,\n    labelAlign,\n    children,\n    orientation = 'vertical',\n    validationState,\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n  let state = useCheckboxGroupState(props);\n  let {labelProps, groupProps} = useCheckboxGroup(props, state);\n\n  return (\n    <div\n      {...styleProps}\n      {...groupProps}\n      className={\n        classNames(\n          styles,\n          'spectrum-FieldGroup',\n          {\n            'spectrum-FieldGroup--positionSide': labelPosition === 'side'\n          },\n          // This is so checkbox group works inside a <Form>\n          classNames(\n            labelStyles,\n            'spectrum-Field'\n          ),\n          styleProps.className\n        )\n      }\n      ref={domRef}>\n      {label &&\n        <Label\n          {...labelProps}\n          elementType=\"span\"\n          labelPosition={labelPosition}\n          labelAlign={labelAlign}\n          isRequired={isRequired}\n          necessityIndicator={necessityIndicator}\n          includeNecessityIndicatorInAccessibilityName>\n          {label}\n        </Label>\n      }\n      <div\n        role=\"presentation\"\n        className={\n          classNames(\n            styles,\n            'spectrum-FieldGroup-group',\n            {\n              'spectrum-FieldGroup-group--horizontal': orientation === 'horizontal'\n            }\n          )\n        }>\n        <Provider isEmphasized={isEmphasized} validationState={validationState}>\n          <CheckboxGroupContext.Provider value={state}>\n            {children}\n          </CheckboxGroupContext.Provider>\n        </Provider>\n      </div>\n    </div>\n  );\n}\n\n/**\n * A CheckboxGroup allows users to select one or more items from a list of choices.\n */\nconst _CheckboxGroup = React.forwardRef(CheckboxGroup);\nexport {_CheckboxGroup as CheckboxGroup};\n"]},"metadata":{},"sourceType":"module"}