{"ast":null,"code":"import { useControlledState } from \"@react-stately/utils\";\n/**\n * Provides state management for a search field.\n */\n\nexport function useSearchFieldState(props) {\n  let [value, setValue] = useControlledState($a9d4cb04630987986dd69a33031$var$toString(props.value), $a9d4cb04630987986dd69a33031$var$toString(props.defaultValue) || '', props.onChange);\n  return {\n    value,\n    setValue\n  };\n}\n\nfunction $a9d4cb04630987986dd69a33031$var$toString(val) {\n  if (val == null) {\n    return;\n  }\n\n  return val.toString();\n}","map":{"version":3,"sources":["packages/@react-stately/searchfield/src/useSearchFieldState.ts"],"names":["useControlledState","toString","props","setValue","val"],"mappings":";AAuBA;;;;OAGO,SAAA,mBAAA,CAAA,KAAA,EAAwE;AAC7E,MAAI,CAAA,KAAA,EAAA,QAAA,IAAoBA,kBAAkB,CAACC,yCAAQ,CAACC,KAAK,CAAf,KAAS,CAAT,EAAwBD,yCAAQ,CAACC,KAAK,CAAdD,YAAQ,CAARA,IAAxB,EAAA,EAA4DC,KAAK,CAA3G,QAA0C,CAA1C;AAEA,SAAO;AAAA,IAAA,KAAA;AAELC,IAAAA;AAFK,GAAP;AAID;;AAED,SAAA,yCAAA,CAAA,GAAA,EAAuB;AACrB,MAAIC,GAAG,IAAP,IAAA,EAAiB;AACf;AACD;;AAED,SAAOA,GAAG,CAAV,QAAOA,EAAP;AACD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {SearchFieldProps} from '@react-types/searchfield';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface SearchFieldState {\n  /** The current value of the search field. */\n  readonly value: string,\n\n  /** Sets the value of the search field. */\n  setValue(value: string): void\n}\n\n/**\n * Provides state management for a search field.\n */\nexport function useSearchFieldState(props: SearchFieldProps): SearchFieldState {\n  let [value, setValue] = useControlledState(toString(props.value), toString(props.defaultValue) || '', props.onChange);\n\n  return {\n    value,\n    setValue\n  };\n}\n\nfunction toString(val) {\n  if (val == null) {\n    return;\n  }\n\n  return val.toString();\n}\n"]},"metadata":{},"sourceType":"module"}