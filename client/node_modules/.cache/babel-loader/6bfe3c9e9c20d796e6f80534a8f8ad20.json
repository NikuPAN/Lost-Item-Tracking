{"ast":null,"code":"import { useProviderProps } from \"@react-spectrum/provider\";\nimport { useLink } from \"@react-aria/link\";\nimport { useHover } from \"@react-aria/interactions\";\nimport _react, { useRef } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { FocusRing } from \"@react-aria/focus\";\nimport { classNames, getWrappedElement, useStyleProps } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n} // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/link/vars.css\n\n\nvar $b893bfef2c79e230cc467d335eb860$exports = {};\n$b893bfef2c79e230cc467d335eb860$exports = {\n  \"spectrum-Link\": \"_spectrum-Link_f1e6e\",\n  \"is-hovered\": \"_is-hovered_f1e6e\",\n  \"focus-ring\": \"_focus-ring_f1e6e\",\n  \"is-disabled\": \"_is-disabled_f1e6e\",\n  \"spectrum-Link--secondary\": \"_spectrum-Link--secondary_f1e6e\",\n  \"spectrum-Link--overBackground\": \"_spectrum-Link--overBackground_f1e6e\",\n  \"spectrum-Link--quiet\": \"_spectrum-Link--quiet_f1e6e\"\n};\nvar $b893bfef2c79e230cc467d335eb860$$interop$default = $parcel$interopDefault($b893bfef2c79e230cc467d335eb860$exports);\n/**\n * Links allow users to navigate to a different location.\n * They can be presented inline inside a paragraph or as standalone text.\n */\n\nexport function Link(props) {\n  props = useProviderProps(props);\n  let {\n    variant = 'primary',\n    isQuiet,\n    children,\n    // @ts-ignore\n    href\n  } = props;\n  let {\n    styleProps\n  } = useStyleProps(props);\n  let {\n    hoverProps,\n    isHovered\n  } = useHover({});\n\n  if (href) {\n    console.warn('href is deprecated, please use an anchor element as children');\n  }\n\n  let ref = useRef();\n  let {\n    linkProps\n  } = useLink(_babelRuntimeHelpersEsmExtends({}, props, {\n    elementType: typeof children === 'string' ? 'span' : 'a'\n  }), ref);\n  return /*#__PURE__*/_react.createElement(FocusRing, {\n    focusRingClass: classNames($b893bfef2c79e230cc467d335eb860$$interop$default, 'focus-ring')\n  }, _react.cloneElement(getWrappedElement(children), _babelRuntimeHelpersEsmExtends({}, styleProps, mergeProps(linkProps, hoverProps), {\n    ref,\n    className: classNames($b893bfef2c79e230cc467d335eb860$$interop$default, 'spectrum-Link', {\n      'spectrum-Link--quiet': isQuiet,\n      [\"spectrum-Link--\" + variant]: variant,\n      'is-hovered': isHovered\n    }, styleProps.className)\n  })));\n}","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/@adobe/spectrum-css-temp/components/link/vars.css","packages/@react-spectrum/link/src/Link.tsx"],"names":["a","props","useProviderProps","variant","href","styleProps","useStyleProps","isHovered","useHover","console","ref","useRef","linkProps","useLink","elementType","classNames","getWrappedElement","mergeProps","className"],"mappings":";;;;;;;;;;AAAA,SAAA,sBAAA,CAAA,CAAA,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAANA,UAAAA,GAAoBA,CAAC,CAArBA,OAAAA,GAAP,CAAA;AACD,C;;;;ACFD,uCAAA,GAAiB;AACf,mBADe,sBAAA;AAEf,gBAFe,mBAAA;AAGf,gBAHe,mBAAA;AAIf,iBAJe,oBAAA;AAKf,8BALe,iCAAA;AAMf,mCANe,sCAAA;AAOf,0BAAwB;AAPT,CAAjB;;ACsBA;;;;;OAIO,SAAA,IAAA,CAAA,KAAA,EAAwC;AAC7CC,EAAAA,KAAK,GAAGC,gBAAgB,CAAxBD,KAAwB,CAAxBA;AACA,MAAI;AACFE,IAAAA,OAAO,GADL,SAAA;AAAA,IAAA,OAAA;AAAA,IAAA,QAAA;AAIF;AACAC,IAAAA;AALE,MAAJ,KAAA;AAOA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,KAAgC,CAAhC;AACA,MAAI;AAAA,IAAA,UAAA;AAAaC,IAAAA;AAAb,MAA0BC,QAAQ,CAAtC,EAAsC,CAAtC;;AAEA,MAAA,IAAA,EAAU;AACRC,IAAAA,OAAO,CAAPA,IAAAA,CAAAA,8DAAAA;AACD;;AAED,MAAIC,GAAG,GAAGC,MAAV,EAAA;AACA,MAAI;AAACC,IAAAA;AAAD,MAAcC,OAAO,CAAA,8BAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEvBC,IAAAA,WAAW,EAAE,OAAA,QAAA,KAAA,QAAA,GAAA,MAAA,GAAwC;AAF9B,GAAA,CAAA,EAAzB,GAAyB,CAAzB;AAKA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,IAAA,cAAc,EAAEC,UAAU,CAAA,gDAAA,EAAA,YAAA;AAArC,GAAA,EACG,MAAK,CAAL,YAAA,CACCC,iBAAiB,CADlB,QACkB,CADlB,EAAA,8BAAA,CAAA,EAAA,EAAA,UAAA,EAIMC,UAAU,CAAA,SAAA,EAJhB,UAIgB,CAJhB,EAAA;AAAA,IAAA,GAAA;AAMGC,IAAAA,SAAS,EAAEH,UAAU,CAAA,gDAAA,EAAA,eAAA,EAGnB;AACE,8BADF,OAAA;AAEE,OAAA,oBAAA,OAAA,GAFF,OAAA;AAGE,oBAAcR;AAHhB,KAHmB,EAQnBF,UAAU,CARS,SAAA;AANxB,GAAA,CAAA,CADH,CADF;AAsBD","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, getWrappedElement, useStyleProps} from '@react-spectrum/utils';\nimport {FocusRing} from '@react-aria/focus';\nimport {mergeProps} from '@react-aria/utils';\nimport React, {useRef} from 'react';\nimport {SpectrumLinkProps} from '@react-types/link';\nimport styles from '@adobe/spectrum-css-temp/components/link/vars.css';\nimport {useHover} from '@react-aria/interactions';\nimport {useLink} from '@react-aria/link';\nimport {useProviderProps} from '@react-spectrum/provider';\n\n/**\n * Links allow users to navigate to a different location.\n * They can be presented inline inside a paragraph or as standalone text.\n */\nexport function Link(props: SpectrumLinkProps) {\n  props = useProviderProps(props);\n  let {\n    variant = 'primary',\n    isQuiet,\n    children,\n    // @ts-ignore\n    href\n  } = props;\n  let {styleProps} = useStyleProps(props);\n  let {hoverProps, isHovered} = useHover({});\n\n  if (href) {\n    console.warn('href is deprecated, please use an anchor element as children');\n  }\n\n  let ref = useRef();\n  let {linkProps} = useLink({\n    ...props,\n    elementType: typeof children === 'string' ? 'span' : 'a'\n  }, ref);\n\n  return (\n    <FocusRing focusRingClass={classNames(styles, 'focus-ring')}>\n      {React.cloneElement(\n        getWrappedElement(children),\n        {\n          ...styleProps,\n          ...mergeProps(linkProps, hoverProps),\n          ref,\n          className: classNames(\n            styles,\n            'spectrum-Link',\n            {\n              'spectrum-Link--quiet': isQuiet,\n              [`spectrum-Link--${variant}`]: variant,\n              'is-hovered': isHovered\n            },\n            styleProps.className\n          )\n        }\n      )}\n    </FocusRing>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}