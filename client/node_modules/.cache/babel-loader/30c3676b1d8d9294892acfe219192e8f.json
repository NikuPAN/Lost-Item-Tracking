{"ast":null,"code":"import { useSeparator } from \"@react-aria/separator\";\nimport _react from \"react\";\nimport { classNames, useDOMRef, useSlotProps, useStyleProps } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n} // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/rule/vars.css\n\n\nvar $c73a71f7d88c6b33532476ecc5c$exports = {};\n$c73a71f7d88c6b33532476ecc5c$exports = {\n  \"spectrum-Rule\": \"_spectrum-Rule_3c70b\",\n  \"spectrum-Rule--large\": \"_spectrum-Rule--large_3c70b\",\n  \"spectrum-Rule--medium\": \"_spectrum-Rule--medium_3c70b\",\n  \"spectrum-Rule--small\": \"_spectrum-Rule--small_3c70b\",\n  \"spectrum-Rule--horizontal\": \"_spectrum-Rule--horizontal_3c70b\",\n  \"spectrum-Rule--vertical\": \"_spectrum-Rule--vertical_3c70b\"\n};\nlet $ea27f9ba945db758ff2bd45520b5b1$var$sizeMap = {\n  S: 'small',\n  M: 'medium',\n  L: 'large'\n};\nvar $c73a71f7d88c6b33532476ecc5c$$interop$default = $parcel$interopDefault($c73a71f7d88c6b33532476ecc5c$exports);\n\nfunction $ea27f9ba945db758ff2bd45520b5b1$var$Divider(props, ref) {\n  props = useSlotProps(props, 'divider');\n\n  let {\n    size = 'L',\n    orientation = 'horizontal'\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"size\", \"orientation\"]);\n\n  let domRef = useDOMRef(ref);\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let weight = $ea27f9ba945db758ff2bd45520b5b1$var$sizeMap[size];\n  let Element = 'hr';\n\n  if (orientation === 'vertical') {\n    Element = 'div';\n  }\n\n  let {\n    separatorProps\n  } = useSeparator(_babelRuntimeHelpersEsmExtends({}, props, {\n    elementType: Element\n  }));\n  return /*#__PURE__*/_react.createElement(Element, _babelRuntimeHelpersEsmExtends({}, styleProps, {\n    className: classNames($c73a71f7d88c6b33532476ecc5c$$interop$default, 'spectrum-Rule', \"spectrum-Rule--\" + weight, {\n      'spectrum-Rule--vertical': orientation === 'vertical',\n      'spectrum-Rule--horizontal': orientation === 'horizontal'\n    }, styleProps.className) // @ts-ignore https://github.com/Microsoft/TypeScript/issues/28892\n    ,\n    ref: domRef\n  }, separatorProps));\n}\n/**\n * Dividers bring clarity to a layout by grouping and dividing content in close proximity.\n * They can also be used to establish rhythm and hierarchy.\n */\n\n\nexport let Divider = _react.forwardRef($ea27f9ba945db758ff2bd45520b5b1$var$Divider);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/@adobe/spectrum-css-temp/components/rule/vars.css","packages/@react-spectrum/divider/src/Divider.tsx"],"names":["a","sizeMap","S","M","L","props","useSlotProps","size","orientation","otherProps","domRef","useDOMRef","styleProps","useStyleProps","weight","Element","separatorProps","useSeparator","elementType","classNames","_Divider","React"],"mappings":";;;;;;;AAAA,SAAA,sBAAA,CAAA,CAAA,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAANA,UAAAA,GAAoBA,CAAC,CAArBA,OAAAA,GAAP,CAAA;AACD,C;;;;ACFD,oCAAA,GAAiB;AACf,mBADe,sBAAA;AAEf,0BAFe,6BAAA;AAGf,2BAHe,8BAAA;AAIf,0BAJe,6BAAA;AAKf,+BALe,kCAAA;AAMf,6BAA2B;AANZ,CAAjB;ACmBA,IAAIC,2CAAO,GAAG;AACZC,EAAAA,CAAC,EADW,OAAA;AAEZC,EAAAA,CAAC,EAFW,QAAA;AAGZC,EAAAA,CAAC,EAAE;AAHS,CAAd;;;AAMA,SAAA,2CAAA,CAAA,KAAA,EAAA,GAAA,EAA2D;AACzDC,EAAAA,KAAK,GAAGC,YAAY,CAAA,KAAA,EAApBD,SAAoB,CAApBA;;AACA,MAAI;AACFE,IAAAA,IAAI,GADF,GAAA;AAEFC,IAAAA,WAAW,GAAG;AAFZ,MAAJ,KAAA;AAAA,MAGKC,UAHL,GAAA,mDAAA,CAAA,KAAA,EAAA,CAAA,MAAA,EAAA,aAAA,CAAA,CAAA;;AAKA,MAAIC,MAAM,GAAGC,SAAS,CAAtB,GAAsB,CAAtB;AACA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;AACA,MAAIC,MAAM,GAAGb,2CAAO,CAApB,IAAoB,CAApB;AAEA,MAAIc,OAAO,GAAX,IAAA;;AACA,MAAIP,WAAW,KAAf,UAAA,EAAgC;AAC9BO,IAAAA,OAAO,GAAPA,KAAAA;AACD;;AAED,MAAI;AAACC,IAAAA;AAAD,MAAmBC,YAAY,CAAA,8BAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAEjCC,IAAAA,WAAW,EAAEH;AAFoB,GAAA,CAAA,CAAnC;AAKA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,OAAA,EAAA,8BAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAEE,IAAA,SAAS,EACPI,UAAU,CAAA,6CAAA,EAAA,eAAA,EAAA,oBAAA,MAAA,EAIR;AACE,iCAA2BX,WAAW,KADxC,UAAA;AAEE,mCAA6BA,WAAW,KAAK;AAF/C,KAJQ,EAQRI,UAAU,CAXhB,SAGc,CAHd,CAcE;AAdF;AAeE,IAAA,GAAG,EAAEF;AAfP,GAAA,EADF,cACE,CAAA,CADF;AAmBD;AAED;;;;;;OAIA,IAAIU,OAAQ,GAAGC,MAAK,CAALA,UAAAA,CAAf,2CAAeA,CAAf","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useSlotProps, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport React from 'react';\nimport {SpectrumDividerProps} from '@react-types/divider';\nimport styles from '@adobe/spectrum-css-temp/components/rule/vars.css';\nimport {useSeparator} from '@react-aria/separator';\n\nlet sizeMap = {\n  S: 'small',\n  M: 'medium',\n  L: 'large'\n};\n\nfunction Divider(props: SpectrumDividerProps, ref: DOMRef) {\n  props = useSlotProps(props, 'divider');\n  let {\n    size = 'L',\n    orientation = 'horizontal',\n    ...otherProps\n  } = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(otherProps);\n  let weight = sizeMap[size];\n\n  let Element = 'hr';\n  if (orientation === 'vertical') {\n    Element = 'div';\n  }\n\n  let {separatorProps} = useSeparator({\n    ...props,\n    elementType: Element\n  });\n\n  return (\n    <Element\n      {...styleProps}\n      className={\n        classNames(\n          styles,\n          'spectrum-Rule',\n          `spectrum-Rule--${weight}`,\n          {\n            'spectrum-Rule--vertical': orientation === 'vertical',\n            'spectrum-Rule--horizontal': orientation === 'horizontal'\n          },\n          styleProps.className\n        )\n      }\n      // @ts-ignore https://github.com/Microsoft/TypeScript/issues/28892\n      ref={domRef}\n      {...separatorProps} />\n  );\n}\n\n/**\n * Dividers bring clarity to a layout by grouping and dividing content in close proximity.\n * They can also be used to establish rhythm and hierarchy.\n */\nlet _Divider = React.forwardRef(Divider);\nexport {_Divider as Divider};\n"]},"metadata":{},"sourceType":"module"}