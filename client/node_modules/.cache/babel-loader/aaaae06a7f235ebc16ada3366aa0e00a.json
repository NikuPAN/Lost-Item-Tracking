{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\YAMATO\\\\Desktop\\\\LostItemTracking\\\\client\\\\src\\\\components\\\\ExistedReport.js\",\n    _s = $RefreshSig$();\n\nimport { red } from '@material-ui/core/colors';\nimport React, { useState, useEffect } from 'react';\n\nconst ExistedReport = () => {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [reports, setReports] = useState([]);\n\n  const getAllReportFromDB = async () => {\n    let response = await fetch('/findAllReport', {\n      method: 'post',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    });\n    let data = await response.json();\n\n    if (data && data.success === true) {\n      // console.log(\"From Existed Report.js...\");\n      console.log(data.data);\n      return data.data;\n    }\n\n    return null;\n  };\n\n  const updateAllReport = () => {\n    getAllReportFromDB().then(res => res.map(report => {\n      return {\n        id: report.id,\n        option: report.option,\n        timestamp: report.timestamp,\n        description: report.description,\n        contact: report.contact\n      };\n    })).then(infos => setReports(infos));\n  };\n\n  useEffect(() => {\n    updateAllReport();\n  }, []);\n\n  const timestampToSTDTime = timestamp => {\n    let date = new Date(timestamp);\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate(); // Hours part from the timestamp\n\n    let hours = date.getHours(); // Minutes part from the timestamp\n\n    let minutes = \"0\" + date.getMinutes(); // Seconds part from the timestamp\n\n    let seconds = \"0\" + date.getSeconds();\n    let STDTime = year + '-' + month + '-' + day + ' ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\n    return STDTime;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: reports.map(img => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"imgBox\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./dinner2.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"details\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            \"data-status\": img.option,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: img.option === 0 ? \"失\" : \"報\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 44\n            }, this), \" \", timestampToSTDTime(img.timestamp)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I Lost my lunchbox LOL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ExistedReport, \"gOkICu38Dvc0tkUB1FdYLprKUak=\");\n\n_c = ExistedReport;\nexport default ExistedReport;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExistedReport\");","map":{"version":3,"sources":["C:/Users/YAMATO/Desktop/LostItemTracking/client/src/components/ExistedReport.js"],"names":["red","React","useState","useEffect","ExistedReport","images","setImages","reports","setReports","getAllReportFromDB","response","fetch","method","headers","data","json","success","console","log","updateAllReport","then","res","map","report","id","option","timestamp","description","contact","infos","timestampToSTDTime","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","STDTime","substr","img"],"mappings":";;;;;AAAA,SAASA,GAAT,QAAoB,0BAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMO,kBAAkB,GAAG,YAAW;AACpC,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,EAAmB;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,OAAO,EAAE;AACP,kBAAS,kBADF;AAEP,wBAAe;AAFR;AAFkC,KAAnB,CAA1B;AAQA,QAAIC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAjB;;AACA,QAAGD,IAAI,IAAIA,IAAI,CAACE,OAAL,KAAiB,IAA5B,EAAkC;AAChC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACA,IAAjB;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD;;AACD,WAAO,IAAP;AACD,GAhBD;;AAkBA,QAAMK,eAAe,GAAG,MAAM;AAC5BV,IAAAA,kBAAkB,GACfW,IADH,CACQC,GAAG,IACPA,GAAG,CAACC,GAAJ,CAAQC,MAAM,IAAI;AACd,aAAO;AACLC,QAAAA,EAAE,EAAED,MAAM,CAACC,EADN;AAELC,QAAAA,MAAM,EAAEF,MAAM,CAACE,MAFV;AAGLC,QAAAA,SAAS,EAAEH,MAAM,CAACG,SAHb;AAILC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAJf;AAKLC,QAAAA,OAAO,EAAEL,MAAM,CAACK;AALX,OAAP;AAOH,KARD,CAFJ,EAYGR,IAZH,CAYQS,KAAK,IAAIrB,UAAU,CAACqB,KAAD,CAZ3B;AAaD,GAdD;;AAgBA1B,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,eAAe;AAChB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMW,kBAAkB,GAAIJ,SAAD,IAAe;AAExC,QAAIK,IAAI,GAAG,IAAIC,IAAJ,CAASN,SAAT,CAAX;AAEA,QAAIO,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAX;AACA,QAAIC,KAAK,GAAGJ,IAAI,CAACK,QAAL,KAAkB,CAA9B;AACA,QAAIC,GAAG,GAAGN,IAAI,CAACO,OAAL,EAAV,CANwC,CAQxC;;AACA,QAAIC,KAAK,GAAGR,IAAI,CAACS,QAAL,EAAZ,CATwC,CAUxC;;AACA,QAAIC,OAAO,GAAG,MAAMV,IAAI,CAACW,UAAL,EAApB,CAXwC,CAYxC;;AACA,QAAIC,OAAO,GAAG,MAAMZ,IAAI,CAACa,UAAL,EAApB;AAEA,QAAIC,OAAO,GAAGZ,IAAI,GAAG,GAAP,GAAaE,KAAb,GAAqB,GAArB,GAA2BE,GAA3B,GAAiC,GAAjC,GAAuCE,KAAvC,GAA+C,GAA/C,GAAqDE,OAAO,CAACK,MAAR,CAAe,CAAC,CAAhB,CAArD,GAA0E,GAA1E,GAAgFH,OAAO,CAACG,MAAR,CAAe,CAAC,CAAhB,CAA9F;AACA,WAAOD,OAAP;AACD,GAjBD;;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cAEGtC,OAAO,CAACe,GAAR,CAAYyB,GAAG,iBACd;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,eAAT;AAAyB,UAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAI,2BAAaA,GAAG,CAACtB,MAArB;AAAA,oCAA6B;AAAA,wBAAIsB,GAAG,CAACtB,MAAJ,KAAa,CAAb,GAAe,GAAf,GAAmB;AAAvB;AAAA;AAAA;AAAA;AAAA,oBAA7B,OAA8DK,kBAAkB,CAACiB,GAAG,CAACrB,SAAL,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAFH;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAnGD;;GAAMtB,a;;KAAAA,a;AAqGN,eAAeA,aAAf","sourcesContent":["import { red } from '@material-ui/core/colors';\r\nimport React, { useState, useEffect } from 'react';\r\n\r\nconst ExistedReport = () => {\r\n\r\n  const [images, setImages] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n\r\n  const getAllReportFromDB = async() => {\r\n    let response = await fetch('/findAllReport', {\r\n      method: 'post',\r\n      headers: {\r\n        'Accept':'application/json',\r\n        'Content-Type':'application/json'\r\n      }\r\n    });\r\n\r\n    let data = await response.json();\r\n    if(data && data.success === true) {\r\n      // console.log(\"From Existed Report.js...\");\r\n      console.log(data.data);\r\n      return data.data;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const updateAllReport = () => {\r\n    getAllReportFromDB()\r\n      .then(res =>\r\n        res.map(report => {\r\n            return {\r\n              id: report.id,\r\n              option: report.option,\r\n              timestamp: report.timestamp,\r\n              description: report.description,\r\n              contact: report.contact\r\n            };\r\n        })\r\n      )\r\n      .then(infos => setReports(infos));\r\n  }\r\n  \r\n  useEffect(() => {\r\n    updateAllReport();\r\n  }, []);\r\n\r\n  const timestampToSTDTime = (timestamp) => {\r\n\r\n    let date = new Date(timestamp);\r\n\r\n    let year = date.getFullYear();\r\n    let month = date.getMonth() + 1;\r\n    let day = date.getDate();\r\n\r\n    // Hours part from the timestamp\r\n    let hours = date.getHours();\r\n    // Minutes part from the timestamp\r\n    let minutes = \"0\" + date.getMinutes();\r\n    // Seconds part from the timestamp\r\n    let seconds = \"0\" + date.getSeconds();\r\n\r\n    let STDTime = year + '-' + month + '-' + day + ' ' + hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2);\r\n    return STDTime;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n\r\n      {reports.map(img => (\r\n        <div className=\"box\">\r\n          <div className=\"imgBox\">\r\n            <img src=\"./dinner2.jpg\" alt=\"\"></img>\r\n          </div>\r\n          <div className=\"details\">\r\n            <div className=\"content\">\r\n              <h5 data-status={img.option}><b>{img.option===0?\"失\":\"報\"}</b> {timestampToSTDTime(img.timestamp)}</h5>\r\n              <p>I Lost my lunchbox LOL</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      {/* <div className=\"box\">\r\n        <div className=\"imgBox\">\r\n          <img src=\"./dinner2.jpg\" alt=\"\"></img>\r\n        </div>\r\n        <div className=\"details\">\r\n          <div className=\"content\">\r\n            <h5>Lost</h5>\r\n            <p>I Lost my lunchbox LOL</p>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n      {/* <div className=\"box\"></div>\r\n      <div className=\"box\"></div>\r\n      <div className=\"box\"></div>\r\n      <div className=\"box\"></div>\r\n      <div className=\"box\"></div>\r\n      <div className=\"box\"></div>\r\n      <div className=\"box\"></div> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ExistedReport;\r\n"]},"metadata":{},"sourceType":"module"}