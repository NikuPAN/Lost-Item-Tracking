{"ast":null,"code":"import { useActionGroup, useActionGroupItem } from \"@react-aria/actiongroup\";\nimport _react, { forwardRef, useRef } from \"react\";\nimport { Provider, useProviderProps } from \"@react-spectrum/provider\";\nimport { PressResponder, useHover } from \"@react-aria/interactions\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useListState } from \"@react-stately/list\";\nimport { classNames, unwrapDOMRef, useDOMRef, useStyleProps } from \"@react-spectrum/utils\";\nimport { ActionButton } from \"@react-spectrum/button\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport { Item } from \"@react-stately/collections\";\nexport { Item };\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n} // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/button/vars.css\n\n\nvar $a0b8eb4b46824fd288195a4db8814b$exports = {};\n$a0b8eb4b46824fd288195a4db8814b$exports = {\n  \"spectrum-Button\": \"_spectrum-Button_7a745\",\n  \"spectrum-ActionButton\": \"_spectrum-ActionButton_7a745\",\n  \"spectrum-LogicButton\": \"_spectrum-LogicButton_7a745\",\n  \"spectrum-FieldButton\": \"_spectrum-FieldButton_7a745\",\n  \"spectrum-ClearButton\": \"_spectrum-ClearButton_7a745\",\n  \"focus-ring\": \"_focus-ring_7a745\",\n  \"spectrum-Icon\": \"_spectrum-Icon_7a745\",\n  \"is-hovered\": \"_is-hovered_7a745\",\n  \"spectrum-Button-label\": \"_spectrum-Button-label_7a745\",\n  \"spectrum-ActionButton-label\": \"_spectrum-ActionButton-label_7a745\",\n  \"spectrum-ActionButton-hold\": \"_spectrum-ActionButton-hold_7a745\",\n  \"spectrum-ActionButton--quiet\": \"_spectrum-ActionButton--quiet_7a745\",\n  \"is-disabled\": \"_is-disabled_7a745\",\n  \"is-open\": \"_is-open_7a745\",\n  \"spectrum-FieldButton--quiet\": \"_spectrum-FieldButton--quiet_7a745\",\n  \"spectrum-ClearButton--overBackground\": \"_spectrum-ClearButton--overBackground_7a745\",\n  \"spectrum-ClearButton--small\": \"_spectrum-ClearButton--small_7a745\",\n  \"is-focused\": \"_is-focused_7a745\",\n  \"is-active\": \"_is-active_7a745\",\n  \"spectrum-Button--cta\": \"_spectrum-Button--cta_7a745\",\n  \"spectrum-Button--primary\": \"_spectrum-Button--primary_7a745\",\n  \"spectrum-Button--secondary\": \"_spectrum-Button--secondary_7a745\",\n  \"spectrum-Button--warning\": \"_spectrum-Button--warning_7a745\",\n  \"spectrum-Button--overBackground\": \"_spectrum-Button--overBackground_7a745\",\n  \"spectrum-Button--quiet\": \"_spectrum-Button--quiet_7a745\",\n  \"is-selected\": \"_is-selected_7a745\",\n  \"spectrum-ActionButton--emphasized\": \"_spectrum-ActionButton--emphasized_7a745\",\n  \"spectrum-LogicButton--and\": \"_spectrum-LogicButton--and_7a745\",\n  \"spectrum-LogicButton--or\": \"_spectrum-LogicButton--or_7a745\",\n  \"is-placeholder\": \"_is-placeholder_7a745\",\n  \"is-invalid\": \"_is-invalid_7a745\"\n}; // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/actiongroup/vars.css\n\nvar $b94f26c7d62d19d8f66eba0e11e8d03d$exports = {};\n$b94f26c7d62d19d8f66eba0e11e8d03d$exports = {\n  \"flex-container\": \"_flex-container_97f54\",\n  \"flex-gap\": \"_flex-gap_97f54\",\n  \"spectrum-ActionGroup\": \"_spectrum-ActionGroup_97f54\",\n  \"spectrum-ActionGroup-item\": \"_spectrum-ActionGroup-item_97f54\",\n  \"spectrum-ActionGroup--vertical\": \"_spectrum-ActionGroup--vertical_97f54\",\n  \"spectrum-ActionGroup--quiet\": \"_spectrum-ActionGroup--quiet_97f54\",\n  \"spectrum-ActionGroup--justified\": \"_spectrum-ActionGroup--justified_97f54\",\n  \"spectrum-ActionGroup--compact\": \"_spectrum-ActionGroup--compact_97f54\",\n  \"is-selected\": \"_is-selected_97f54\",\n  \"is-hovered\": \"_is-hovered_97f54\"\n};\nvar $b94f26c7d62d19d8f66eba0e11e8d03d$$interop$default = $parcel$interopDefault($b94f26c7d62d19d8f66eba0e11e8d03d$exports);\n\nfunction $c6c692da1cfbbd16b5ce1db157471b0$var$ActionGroup(props, ref) {\n  props = useProviderProps(props);\n\n  let {\n    isEmphasized,\n    density,\n    isJustified,\n    isDisabled,\n    orientation = 'horizontal',\n    isQuiet,\n    onAction\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"isEmphasized\", \"density\", \"isJustified\", \"isDisabled\", \"orientation\", \"isQuiet\", \"onAction\"]);\n\n  let domRef = useDOMRef(ref);\n  let state = useListState(props);\n  let {\n    actionGroupProps\n  } = useActionGroup(props, state, domRef);\n  let isVertical = orientation === 'vertical';\n  let providerProps = {\n    isEmphasized,\n    isDisabled,\n    isQuiet\n  };\n  let {\n    styleProps\n  } = useStyleProps(props);\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, styleProps, {\n    className: classNames($b94f26c7d62d19d8f66eba0e11e8d03d$$interop$default, 'flex-container', styleProps.className)\n  }), /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, actionGroupProps, {\n    ref: domRef,\n    className: classNames($b94f26c7d62d19d8f66eba0e11e8d03d$$interop$default, 'flex-gap', 'spectrum-ActionGroup', {\n      'spectrum-ActionGroup--quiet': isQuiet,\n      'spectrum-ActionGroup--vertical': isVertical,\n      'spectrum-ActionGroup--compact': density === 'compact',\n      'spectrum-ActionGroup--justified': isJustified\n    }, otherProps.UNSAFE_className)\n  }), /*#__PURE__*/_react.createElement(Provider, providerProps, [...state.collection].map(item => /*#__PURE__*/_react.createElement($c6c692da1cfbbd16b5ce1db157471b0$var$ActionGroupItem, {\n    key: item.key,\n    onAction: onAction,\n    isDisabled: isDisabled,\n    isEmphasized: isEmphasized,\n    item: item,\n    state: state\n  })))));\n}\n/**\n * An ActionGroup is a grouping of ActionButtons that are related to one another.\n */\n\n\nexport const ActionGroup = forwardRef($c6c692da1cfbbd16b5ce1db157471b0$var$ActionGroup);\nvar $a0b8eb4b46824fd288195a4db8814b$$interop$default = $parcel$interopDefault($a0b8eb4b46824fd288195a4db8814b$exports);\n\nfunction $c6c692da1cfbbd16b5ce1db157471b0$var$ActionGroupItem(_ref) {\n  let {\n    item,\n    state,\n    isDisabled,\n    isEmphasized,\n    onAction\n  } = _ref;\n  let ref = useRef();\n  let {\n    buttonProps\n  } = useActionGroupItem({\n    key: item.key\n  }, state, unwrapDOMRef(ref));\n  isDisabled = isDisabled || state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n  let {\n    hoverProps,\n    isHovered\n  } = useHover({\n    isDisabled\n  });\n\n  if (onAction && !isDisabled) {\n    buttonProps = mergeProps(buttonProps, {\n      onPress: () => onAction(item.key)\n    });\n  }\n\n  let button =\n  /*#__PURE__*/\n  // Use a PressResponder to send DOM props through.\n  // ActionButton doesn't allow overriding the role by default.\n  _react.createElement(PressResponder, mergeProps(buttonProps, hoverProps), /*#__PURE__*/_react.createElement(ActionButton, {\n    ref: ref,\n    UNSAFE_className: classNames($b94f26c7d62d19d8f66eba0e11e8d03d$$interop$default, 'spectrum-ActionGroup-item', {\n      'is-selected': isSelected,\n      'is-hovered': isHovered\n    }, classNames($a0b8eb4b46824fd288195a4db8814b$$interop$default, {\n      'spectrum-ActionButton--emphasized': isEmphasized,\n      'is-selected': isSelected\n    })),\n    isDisabled: isDisabled,\n    \"aria-label\": item['aria-label']\n  }, item.rendered));\n\n  if (item.wrapper) {\n    button = item.wrapper(button);\n  }\n\n  return button;\n}","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/@adobe/spectrum-css-temp/components/button/vars.css","node_modules/@adobe/spectrum-css-temp/components/actiongroup/vars.css","packages/@react-spectrum/actiongroup/src/ActionGroup.tsx"],"names":["a","props","useProviderProps","orientation","onAction","otherProps","domRef","useDOMRef","state","useListState","actionGroupProps","useActionGroup","isVertical","providerProps","isQuiet","styleProps","useStyleProps","classNames","density","isJustified","item","_ActionGroup","forwardRef","ref","useRef","buttonProps","useActionGroupItem","key","unwrapDOMRef","isDisabled","isSelected","isHovered","useHover","mergeProps","onPress","button"],"mappings":"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","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ActionButton} from '@react-spectrum/button';\nimport buttonStyles from '@adobe/spectrum-css-temp/components/button/vars.css';\nimport {classNames, unwrapDOMRef, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMProps, DOMRef, Node, StyleProps} from '@react-types/shared';\nimport {ListState, useListState} from '@react-stately/list';\nimport {mergeProps} from '@react-aria/utils';\nimport {PressResponder, useHover} from '@react-aria/interactions';\nimport {Provider} from '@react-spectrum/provider';\nimport React, {forwardRef, Key, ReactElement, useRef} from 'react';\nimport {SpectrumActionGroupProps} from '@react-types/actiongroup';\nimport styles from '@adobe/spectrum-css-temp/components/actiongroup/vars.css';\nimport {useActionGroup} from '@react-aria/actiongroup';\nimport {useActionGroupItem} from '@react-aria/actiongroup';\nimport {useProviderProps} from '@react-spectrum/provider';\n\nfunction ActionGroup<T extends object>(props: SpectrumActionGroupProps<T>, ref: DOMRef<HTMLDivElement>) {\n  props = useProviderProps(props);\n\n  let {\n    isEmphasized,\n    density,\n    isJustified,\n    isDisabled,\n    orientation = 'horizontal',\n    isQuiet,\n    onAction,\n    ...otherProps\n  } = props;\n\n  let domRef = useDOMRef(ref);\n  let state = useListState(props);\n  let {actionGroupProps} = useActionGroup(props, state, domRef);\n  let isVertical = orientation === 'vertical';\n  let providerProps = {isEmphasized, isDisabled, isQuiet};\n  let {styleProps} = useStyleProps(props);\n\n  return (\n    <div {...styleProps} className={classNames(styles, 'flex-container', styleProps.className)}>\n      <div\n        {...actionGroupProps}\n        ref={domRef}\n        className={\n          classNames(\n            styles,\n            'flex-gap',\n            'spectrum-ActionGroup',\n            {\n              'spectrum-ActionGroup--quiet': isQuiet,\n              'spectrum-ActionGroup--vertical': isVertical,\n              'spectrum-ActionGroup--compact': density === 'compact',\n              'spectrum-ActionGroup--justified': isJustified\n            },\n            otherProps.UNSAFE_className\n          )\n        }>\n        <Provider {...providerProps}>\n          {[...state.collection].map((item) => (\n            <ActionGroupItem\n              key={item.key}\n              onAction={onAction}\n              isDisabled={isDisabled}\n              isEmphasized={isEmphasized}\n              item={item}\n              state={state} />\n          ))}\n        </Provider>\n      </div>\n    </div>\n  );\n}\n\n/**\n * An ActionGroup is a grouping of ActionButtons that are related to one another.\n */\nconst _ActionGroup = forwardRef(ActionGroup) as <T>(props: SpectrumActionGroupProps<T> & {ref?: DOMRef<HTMLDivElement>}) => ReactElement;\nexport {_ActionGroup as ActionGroup};\n\ninterface ActionGroupItemProps<T> extends DOMProps, StyleProps {\n  item: Node<T>,\n  state: ListState<T>,\n  isDisabled: boolean,\n  isEmphasized: boolean,\n  onAction: (key: Key) => void\n}\n\nfunction ActionGroupItem<T>({item, state, isDisabled, isEmphasized, onAction}: ActionGroupItemProps<T>) {\n  let ref = useRef();\n  let {buttonProps} = useActionGroupItem({key: item.key}, state, unwrapDOMRef(ref));\n  isDisabled = isDisabled || state.disabledKeys.has(item.key);\n  let isSelected = state.selectionManager.isSelected(item.key);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  if (onAction && !isDisabled) {\n    buttonProps = mergeProps(buttonProps, {\n      onPress: () => onAction(item.key)\n    });\n  }\n\n  let button = (\n    // Use a PressResponder to send DOM props through.\n    // ActionButton doesn't allow overriding the role by default.\n    <PressResponder {...mergeProps(buttonProps, hoverProps)}>\n      <ActionButton\n        ref={ref}\n        UNSAFE_className={\n          classNames(\n            styles,\n            'spectrum-ActionGroup-item',\n            {\n              'is-selected': isSelected,\n              'is-hovered': isHovered\n            },\n            classNames(\n              buttonStyles,\n              {\n                'spectrum-ActionButton--emphasized': isEmphasized,\n                'is-selected': isSelected\n              }\n            )\n          )\n        }\n        isDisabled={isDisabled}\n        aria-label={item['aria-label']}>\n        {item.rendered}\n      </ActionButton>\n    </PressResponder>\n  );\n\n  if (item.wrapper) {\n    button = item.wrapper(button);\n  }\n\n  return button;\n}\n"]},"metadata":{},"sourceType":"module"}