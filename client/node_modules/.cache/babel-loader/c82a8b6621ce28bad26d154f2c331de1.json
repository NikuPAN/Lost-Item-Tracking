{"ast":null,"code":"import { useToggleState } from \"@react-stately/toggle\";\nimport { useSwitch } from \"@react-aria/switch\";\nimport { useProviderProps } from \"@react-spectrum/provider\";\nimport { useHover } from \"@react-aria/interactions\";\nimport _react, { forwardRef, useRef } from \"react\";\nimport { FocusRing } from \"@react-aria/focus\";\nimport { classNames, useFocusableRef, useStyleProps } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n} // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/toggle/vars.css\n\n\nvar $b4570f0606b2c7eda302cc75c533$exports = {};\n$b4570f0606b2c7eda302cc75c533$exports = {\n  \"spectrum-ToggleSwitch\": \"_spectrum-ToggleSwitch_fc100\",\n  \"spectrum-ToggleSwitch-input\": \"_spectrum-ToggleSwitch-input_fc100\",\n  \"spectrum-ToggleSwitch-switch\": \"_spectrum-ToggleSwitch-switch_fc100\",\n  \"focus-ring\": \"_focus-ring_fc100\",\n  \"spectrum-ToggleSwitch-label\": \"_spectrum-ToggleSwitch-label_fc100\",\n  \"is-hovered\": \"_is-hovered_fc100\",\n  \"spectrum-ToggleSwitch--quiet\": \"_spectrum-ToggleSwitch--quiet_fc100\",\n  \"spectrum-ToggleSwitch--ab\": \"_spectrum-ToggleSwitch--ab_fc100\"\n};\nvar $b4570f0606b2c7eda302cc75c533$$interop$default = $parcel$interopDefault($b4570f0606b2c7eda302cc75c533$exports);\n\nfunction $aff44b1672011b1b1b5b6fdc24d8a9d8$var$Switch(props, ref) {\n  props = useProviderProps(props);\n\n  let {\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"isEmphasized\", \"isDisabled\", \"autoFocus\", \"children\"]);\n\n  let {\n    styleProps\n  } = useStyleProps(otherProps);\n  let {\n    hoverProps,\n    isHovered\n  } = useHover({\n    isDisabled\n  });\n  let inputRef = useRef(null);\n  let domRef = useFocusableRef(ref, inputRef);\n  let state = useToggleState(props);\n  let {\n    inputProps\n  } = useSwitch(props, state, inputRef);\n  return /*#__PURE__*/_react.createElement(\"label\", _babelRuntimeHelpersEsmExtends({}, styleProps, hoverProps, {\n    ref: domRef,\n    className: classNames($b4570f0606b2c7eda302cc75c533$$interop$default, 'spectrum-ToggleSwitch', {\n      'spectrum-ToggleSwitch--quiet': !isEmphasized,\n      'is-disabled': isDisabled,\n      'is-hovered': isHovered\n    }, styleProps.className)\n  }), /*#__PURE__*/_react.createElement(FocusRing, {\n    focusRingClass: classNames($b4570f0606b2c7eda302cc75c533$$interop$default, 'focus-ring'),\n    autoFocus: autoFocus\n  }, /*#__PURE__*/_react.createElement(\"input\", _babelRuntimeHelpersEsmExtends({}, inputProps, {\n    ref: inputRef,\n    className: classNames($b4570f0606b2c7eda302cc75c533$$interop$default, 'spectrum-ToggleSwitch-input')\n  }))), /*#__PURE__*/_react.createElement(\"span\", {\n    className: classNames($b4570f0606b2c7eda302cc75c533$$interop$default, 'spectrum-ToggleSwitch-switch')\n  }), children && /*#__PURE__*/_react.createElement(\"span\", {\n    className: classNames($b4570f0606b2c7eda302cc75c533$$interop$default, 'spectrum-ToggleSwitch-label')\n  }, children));\n}\n/**\n * Switches allow users to turn an individual option on or off.\n * They are usually used to activate or deactivate a specific setting.\n */\n\n\nexport const Switch = forwardRef($aff44b1672011b1b1b5b6fdc24d8a9d8$var$Switch);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","node_modules/@adobe/spectrum-css-temp/components/toggle/vars.css","packages/@react-spectrum/switch/src/Switch.tsx"],"names":["a","props","useProviderProps","isEmphasized","isDisabled","children","otherProps","styleProps","useStyleProps","isHovered","useHover","inputRef","useRef","domRef","useFocusableRef","state","useToggleState","inputProps","useSwitch","classNames","autoFocus","_Switch","forwardRef"],"mappings":";;;;;;;;;;;AAAA,SAAA,sBAAA,CAAA,CAAA,EAAmC;AACjC,SAAOA,CAAC,IAAIA,CAAC,CAANA,UAAAA,GAAoBA,CAAC,CAArBA,OAAAA,GAAP,CAAA;AACD,C;;;;ACFD,qCAAA,GAAiB;AACf,2BADe,8BAAA;AAEf,iCAFe,oCAAA;AAGf,kCAHe,qCAAA;AAIf,gBAJe,mBAAA;AAKf,iCALe,oCAAA;AAMf,gBANe,mBAAA;AAOf,kCAPe,qCAAA;AAQf,+BAA6B;AARd,CAAjB;;;ACuBA,SAAA,4CAAA,CAAA,KAAA,EAAA,GAAA,EAAiF;AAC/EC,EAAAA,KAAK,GAAGC,gBAAgB,CAAxBD,KAAwB,CAAxBA;;AACA,MAAI;AACFE,IAAAA,YAAY,GADV,KAAA;AAEFC,IAAAA,UAAU,GAFR,KAAA;AAAA,IAAA,SAAA;AAIFC,IAAAA;AAJE,MAAJ,KAAA;AAAA,MAKKC,UALL,GAAA,mDAAA,CAAA,KAAA,EAAA,CAAA,cAAA,EAAA,YAAA,EAAA,WAAA,EAAA,UAAA,CAAA,CAAA;;AAOA,MAAI;AAACC,IAAAA;AAAD,MAAeC,aAAa,CAAhC,UAAgC,CAAhC;AACA,MAAI;AAAA,IAAA,UAAA;AAAaC,IAAAA;AAAb,MAA0BC,QAAQ,CAAC;AAACN,IAAAA;AAAD,GAAD,CAAtC;AAEA,MAAIO,QAAQ,GAAGC,MAAM,CAArB,IAAqB,CAArB;AACA,MAAIC,MAAM,GAAGC,eAAe,CAAA,GAAA,EAA5B,QAA4B,CAA5B;AACA,MAAIC,KAAK,GAAGC,cAAc,CAA1B,KAA0B,CAA1B;AACA,MAAI;AAACC,IAAAA;AAAD,MAAeC,SAAS,CAAA,KAAA,EAAA,KAAA,EAA5B,QAA4B,CAA5B;AAGA,SAAA,aACE,MAAA,CAAA,aAAA,CAAA,OAAA,EAAA,8BAAA,CAAA,EAAA,EAAA,UAAA,EAAA,UAAA,EAAA;AAGE,IAAA,GAAG,EAHL,MAAA;AAIE,IAAA,SAAS,EACPC,UAAU,CAAA,8CAAA,EAAA,uBAAA,EAGR;AACE,sCAAgC,CADlC,YAAA;AAEE,qBAFF,UAAA;AAGE,oBAAcV;AAHhB,KAHQ,EAQRF,UAAU,CARF,SAAA;AALd,GAAA,CAAA,EAAA,aAgBE,MAAA,CAAA,aAAA,CAAA,SAAA,EAAA;AAAW,IAAA,cAAc,EAAEY,UAAU,CAAA,8CAAA,EAArC,YAAqC,CAArC;AAA6D,IAAA,SAAS,EAAEC;AAAxE,GAAA,EAAA,aACE,MAAA,CAAA,aAAA,CAAA,OAAA,EAAA,8BAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAEE,IAAA,GAAG,EAFL,QAAA;AAGE,IAAA,SAAS,EAAED,UAAU,CAAA,8CAAA,EAAA,6BAAA;AAHvB,GAAA,CAAA,CADF,CAhBF,EAAA,aAsBE,MAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAEA,UAAU,CAAA,8CAAA,EAAA,8BAAA;AAA3B,GAAA,CAtBF,EAuBGd,QAAQ,IAAA,aACP,MAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,IAAA,SAAS,EAAEc,UAAU,CAAA,8CAAA,EAAA,6BAAA;AAA3B,GAAA,EAzBN,QAyBM,CAxBJ,CADF;AA+BD;AAED;;;;;;OAIA,MAAME,MAAO,GAAGC,UAAU,CAA1B,4CAA0B,CAA1B","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useFocusableRef, useStyleProps} from '@react-spectrum/utils';\nimport {FocusableRef} from '@react-types/shared';\nimport {FocusRing} from '@react-aria/focus';\nimport React, {forwardRef, useRef} from 'react';\nimport {SpectrumSwitchProps} from '@react-types/switch';\nimport styles from '@adobe/spectrum-css-temp/components/toggle/vars.css';\nimport {useHover} from '@react-aria/interactions';\nimport {useProviderProps} from '@react-spectrum/provider';\nimport {useSwitch} from '@react-aria/switch';\nimport {useToggleState} from '@react-stately/toggle';\n\nfunction Switch(props: SpectrumSwitchProps, ref: FocusableRef<HTMLLabelElement>) {\n  props = useProviderProps(props);\n  let {\n    isEmphasized = false,\n    isDisabled = false,\n    autoFocus,\n    children,\n    ...otherProps\n  } = props;\n  let {styleProps} = useStyleProps(otherProps);\n  let {hoverProps, isHovered} = useHover({isDisabled});\n\n  let inputRef = useRef<HTMLInputElement>(null);\n  let domRef = useFocusableRef(ref, inputRef);\n  let state = useToggleState(props);\n  let {inputProps} = useSwitch(props, state, inputRef);\n\n\n  return (\n    <label\n      {...styleProps}\n      {...hoverProps}\n      ref={domRef}\n      className={\n        classNames(\n          styles,\n          'spectrum-ToggleSwitch',\n          {\n            'spectrum-ToggleSwitch--quiet': !isEmphasized,\n            'is-disabled': isDisabled,\n            'is-hovered': isHovered\n          },\n          styleProps.className\n        )\n      }>\n      <FocusRing focusRingClass={classNames(styles, 'focus-ring')} autoFocus={autoFocus}>\n        <input\n          {...inputProps}\n          ref={inputRef}\n          className={classNames(styles, 'spectrum-ToggleSwitch-input')} />\n      </FocusRing>\n      <span className={classNames(styles, 'spectrum-ToggleSwitch-switch')} />\n      {children && (\n        <span className={classNames(styles, 'spectrum-ToggleSwitch-label')}>\n          {children}\n        </span>\n      )}\n    </label>\n  );\n}\n\n/**\n * Switches allow users to turn an individual option on or off.\n * They are usually used to activate or deactivate a specific setting.\n */\nconst _Switch = forwardRef(Switch);\nexport {_Switch as Switch};\n"]},"metadata":{},"sourceType":"module"}