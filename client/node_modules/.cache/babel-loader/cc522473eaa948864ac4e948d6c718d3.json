{"ast":null,"code":"import { useModal, useOverlay, usePreventScroll } from \"@react-aria/overlays\";\nimport { mergeProps, useLayoutEffect, useViewportSize } from \"@react-aria/utils\";\nimport { classNames, useDOMRef, useStyleProps } from \"@react-spectrum/utils\";\nimport _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _reactDom from \"react-dom\";\nimport { Provider } from \"@react-spectrum/provider\";\nimport _reactTransitionGroupTransition from \"react-transition-group/Transition\";\nimport _react, { useCallback, useState, forwardRef, useRef, useEffect } from \"react\";\nimport _babelRuntimeHelpersEsmExtends from \"@babel/runtime/helpers/esm/extends\";\nimport \"./main.css\";\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nconst $c2eed959492fcaa12e5ad56438b32db$var$OPEN_STATES = {\n  entering: false,\n  entered: true\n};\n/**\n * Timeout issues adding css animations to enter may be related to\n * https://github.com/reactjs/react-transition-group/issues/189 or\n * https://github.com/reactjs/react-transition-group/issues/22\n * my VM isn't good enough to debug accurately and get a better answer.\n *\n * As a result, use enter 0 so that is-open is applied once entered\n * it doesn't matter if we know when the css-animation is done on entering\n * for exiting though, give time for the css-animation to play\n * before removing from the DOM\n * **note** hitting esc bypasses exit animation for anyone testing.\n */\n\nfunction $c2eed959492fcaa12e5ad56438b32db$export$OpenTransition(props) {\n  return /*#__PURE__*/_react.createElement(_reactTransitionGroupTransition, _babelRuntimeHelpersEsmExtends({\n    timeout: {\n      enter: 0,\n      exit: 350\n    }\n  }, props), state => _react.Children.map(props.children, child => child && _react.cloneElement(child, {\n    isOpen: !!$c2eed959492fcaa12e5ad56438b32db$var$OPEN_STATES[state]\n  })));\n}\n\nfunction $efa130a588abe47e4415ae0ba92319d4$var$Overlay(props, ref) {\n  let {\n    children,\n    isOpen,\n    container,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExit,\n    onExiting,\n    onExited\n  } = props;\n  let [exited, setExited] = useState(!isOpen);\n  let handleEntered = useCallback(() => {\n    setExited(false);\n\n    if (onEntered) {\n      onEntered();\n    }\n  }, [onEntered]);\n  let handleExited = useCallback(() => {\n    setExited(true);\n\n    if (onExited) {\n      onExited();\n    }\n  }, [onExited]); // Don't un-render the overlay while it's transitioning out.\n\n  let mountOverlay = isOpen || !exited;\n\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let contents = /*#__PURE__*/_react.createElement(Provider, {\n    ref: ref,\n    UNSAFE_style: {\n      background: 'transparent',\n      isolation: 'isolate'\n    }\n  }, /*#__PURE__*/_react.createElement($c2eed959492fcaa12e5ad56438b32db$export$OpenTransition, {\n    in: isOpen,\n    appear: true,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: handleExited,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: handleEntered\n  }, children));\n\n  return _reactDom.createPortal(contents, container || document.body);\n}\n\nexport let Overlay = _react.forwardRef($efa130a588abe47e4415ae0ba92319d4$var$Overlay); // ASSET: /Users/govett/dev/react-spectrum-v3/packages/@react-spectrum/overlays/src/overlays.css\n\nvar $a5bfb13c9743494ac49cc710f8330$exports = {};\n$a5bfb13c9743494ac49cc710f8330$exports = {\n  \"spectrum-Popover\": \"_spectrum-Popover_1c0dd\",\n  \"react-spectrum-Popover\": \"_react-spectrum-Popover_1c0dd\",\n  \"spectrum-Dialog-content\": \"_spectrum-Dialog-content_1c0dd\",\n  \"spectrum-Modal-wrapper\": \"_spectrum-Modal-wrapper_1c0dd\",\n  \"react-spectrum-Modal-wrapper\": \"_react-spectrum-Modal-wrapper_1c0dd\",\n  \"spectrum-Modal\": \"_spectrum-Modal_1c0dd\",\n  \"react-spectrum-Modal\": \"_react-spectrum-Modal_1c0dd\",\n  \"spectrum-Tray\": \"_spectrum-Tray_1c0dd\",\n  \"react-spectrum-Tray\": \"_react-spectrum-Tray_1c0dd\"\n}; // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/popover/vars.css\n\nvar $f01264bdfc3021a50c5cc4caf66$exports = {};\n$f01264bdfc3021a50c5cc4caf66$exports = {\n  \"spectrum-Popover\": \"_spectrum-Popover_c37f7\",\n  \"is-open\": \"_is-open_c37f7\",\n  \"spectrum-Popover--bottom\": \"_spectrum-Popover--bottom_c37f7\",\n  \"spectrum-Popover--top\": \"_spectrum-Popover--top_c37f7\",\n  \"spectrum-Popover--right\": \"_spectrum-Popover--right_c37f7\",\n  \"spectrum-Popover--left\": \"_spectrum-Popover--left_c37f7\",\n  \"spectrum-Popover-tip\": \"_spectrum-Popover-tip_c37f7\",\n  \"spectrum-Popover-tip-triangle\": \"_spectrum-Popover-tip-triangle_c37f7\",\n  \"spectrum-Popover--dialog\": \"_spectrum-Popover--dialog_c37f7\",\n  \"spectrum-Popover--withTip\": \"_spectrum-Popover--withTip_c37f7\"\n};\n/**\n * Arrow placement can be done pointing right or down because those paths start at 0, x or y. Because the\n * other two don't, they start at a fractional pixel value, it introduces rounding differences between browsers and\n * between display types (retina with subpixels vs not retina). By flipping them with CSS we can ensure that\n * the path always starts at 0 so that it perfectly overlaps the popover's border.\n * See bottom of file for more explanation.\n */\n\nlet $af48fe067ffcbddd851563094a05$var$arrowPlacement = {\n  left: 'right',\n  right: 'right',\n  top: 'bottom',\n  bottom: 'bottom'\n};\n\nfunction $af48fe067ffcbddd851563094a05$var$Popover(props, ref) {\n  let {\n    children,\n    placement,\n    arrowProps,\n    onClose,\n    shouldCloseOnBlur,\n    hideArrow,\n    isKeyboardDismissDisabled,\n    isNonModal\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"placement\", \"arrowProps\", \"onClose\", \"shouldCloseOnBlur\", \"hideArrow\", \"isKeyboardDismissDisabled\", \"isNonModal\"]);\n\n  let domRef = useDOMRef(ref);\n  let {\n    styleProps\n  } = useStyleProps(props);\n  return /*#__PURE__*/_react.createElement(Overlay, otherProps, /*#__PURE__*/_react.createElement($af48fe067ffcbddd851563094a05$var$PopoverWrapper, _babelRuntimeHelpersEsmExtends({}, styleProps, {\n    ref: domRef,\n    placement: placement,\n    arrowProps: arrowProps,\n    onClose: onClose,\n    shouldCloseOnBlur: shouldCloseOnBlur,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    hideArrow: hideArrow,\n    isNonModal: isNonModal\n  }), children));\n}\n\nvar $f01264bdfc3021a50c5cc4caf66$$interop$default = $parcel$interopDefault($f01264bdfc3021a50c5cc4caf66$exports);\nvar $a5bfb13c9743494ac49cc710f8330$$interop$default = $parcel$interopDefault($a5bfb13c9743494ac49cc710f8330$exports);\nconst $af48fe067ffcbddd851563094a05$var$PopoverWrapper = forwardRef((props, ref) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {\n    children,\n    placement = 'bottom',\n    arrowProps,\n    isOpen,\n    hideArrow,\n    isNonModal\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"placement\", \"arrowProps\", \"isOpen\", \"hideArrow\", \"shouldCloseOnBlur\", \"isKeyboardDismissDisabled\", \"isNonModal\"]);\n\n  let {\n    overlayProps\n  } = useOverlay(_babelRuntimeHelpersEsmExtends({}, props, {\n    isDismissable: true\n  }), ref);\n  let {\n    modalProps\n  } = useModal({\n    isDisabled: isNonModal\n  });\n  return /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, mergeProps(otherProps, overlayProps, modalProps), {\n    ref: ref,\n    className: classNames($f01264bdfc3021a50c5cc4caf66$$interop$default, 'spectrum-Popover', \"spectrum-Popover--\" + placement, {\n      'spectrum-Popover--withTip': !hideArrow,\n      'is-open': isOpen\n    }, classNames($a5bfb13c9743494ac49cc710f8330$$interop$default, 'spectrum-Popover', 'react-spectrum-Popover'), otherProps.className),\n    role: \"presentation\"\n  }), children, hideArrow ? null : /*#__PURE__*/_react.createElement($af48fe067ffcbddd851563094a05$var$Arrow, {\n    arrowProps: arrowProps,\n    direction: $af48fe067ffcbddd851563094a05$var$arrowPlacement[placement]\n  }));\n});\nlet $af48fe067ffcbddd851563094a05$var$ROOT_2 = Math.sqrt(2);\n\nfunction $af48fe067ffcbddd851563094a05$var$Arrow(props) {\n  let [size, setSize] = useState(20);\n  let [borderWidth, setBorderWidth] = useState(1);\n  let ref = useRef(); // get the css value for the tip size and divide it by 2 for this arrow implementation\n\n  useLayoutEffect(() => {\n    if (ref.current) {\n      let spectrumTipWidth = window.getComputedStyle(ref.current).getPropertyValue('--spectrum-popover-tip-size');\n\n      if (spectrumTipWidth !== '') {\n        setSize(parseInt(spectrumTipWidth, 10) / 2);\n      }\n\n      let spectrumBorderWidth = window.getComputedStyle(ref.current).getPropertyValue('--spectrum-popover-tip-borderWidth');\n\n      if (spectrumBorderWidth !== '') {\n        setBorderWidth(parseInt(spectrumBorderWidth, 10));\n      }\n    }\n  }, [ref]);\n  let landscape = props.direction === 'top' || props.direction === 'bottom';\n  let mirror = props.direction === 'left' || props.direction === 'top';\n  let borderDiagonal = borderWidth * $af48fe067ffcbddd851563094a05$var$ROOT_2;\n  let halfBorderDiagonal = borderDiagonal / 2;\n  let secondary = 2 * size + 2 * borderDiagonal;\n  let primary = size + borderDiagonal;\n  let primaryStart = mirror ? primary : 0;\n  let primaryEnd = mirror ? halfBorderDiagonal : primary - halfBorderDiagonal;\n  let secondaryStart = halfBorderDiagonal;\n  let secondaryMiddle = secondary / 2;\n  let secondaryEnd = secondary - halfBorderDiagonal;\n  let pathData = landscape ? ['M', secondaryStart, primaryStart, 'L', secondaryMiddle, primaryEnd, 'L', secondaryEnd, primaryStart] : ['M', primaryStart, secondaryStart, 'L', primaryEnd, secondaryMiddle, 'L', primaryStart, secondaryEnd];\n  let arrowProps = props.arrowProps;\n  /* use ceil because the svg needs to always accomodate the path inside it */\n\n  return /*#__PURE__*/_react.createElement(\"svg\", _babelRuntimeHelpersEsmExtends({\n    xmlns: \"http://www.w3.org/svg/2000\",\n    width: Math.ceil(landscape ? secondary : primary),\n    height: Math.ceil(landscape ? primary : secondary),\n    style: props.style,\n    className: classNames($f01264bdfc3021a50c5cc4caf66$$interop$default, 'spectrum-Popover-tip'),\n    ref: ref\n  }, arrowProps), /*#__PURE__*/_react.createElement(\"path\", {\n    className: classNames($f01264bdfc3021a50c5cc4caf66$$interop$default, 'spectrum-Popover-tip-triangle'),\n    d: pathData.join(' ')\n  }));\n}\n\nexport let Popover = forwardRef($af48fe067ffcbddd851563094a05$var$Popover); // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/modal/vars.css\n\nvar $e88425c760534ecdce642e453299664b$exports = {};\n$e88425c760534ecdce642e453299664b$exports = {\n  \"spectrum-Modal\": \"_spectrum-Modal_cdccb\",\n  \"is-open\": \"_is-open_cdccb\",\n  \"spectrum-Modal-wrapper\": \"_spectrum-Modal-wrapper_cdccb\",\n  \"spectrum-Modal--responsive\": \"_spectrum-Modal--responsive_cdccb\",\n  \"spectrum-Modal--fullscreen\": \"_spectrum-Modal--fullscreen_cdccb\",\n  \"spectrum-Modal--fullscreenTakeover\": \"_spectrum-Modal--fullscreenTakeover_cdccb\"\n}; // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/underlay/vars.css\n\nvar $a83084f5122c4f2e3cd09943e3dc9d1c$exports = {};\n$a83084f5122c4f2e3cd09943e3dc9d1c$exports = {\n  \"spectrum-Underlay\": \"_spectrum-Underlay_8c345\",\n  \"is-open\": \"_is-open_8c345\"\n};\nvar $a83084f5122c4f2e3cd09943e3dc9d1c$$interop$default = $parcel$interopDefault($a83084f5122c4f2e3cd09943e3dc9d1c$exports);\n\nfunction $facde3dde95c50b545b1ceb8303a7b3d$export$Underlay(_ref) {\n  let {\n    isOpen\n  } = _ref;\n  return /*#__PURE__*/_react.createElement(\"div\", {\n    className: classNames($a83084f5122c4f2e3cd09943e3dc9d1c$$interop$default, 'spectrum-Underlay', {\n      'is-open': isOpen\n    })\n  });\n}\n\nfunction $e95c536af9708d8f08fc5947c704fa3$var$Modal(props, ref) {\n  let {\n    children,\n    onClose,\n    type,\n    isDismissable,\n    isKeyboardDismissDisabled\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"onClose\", \"type\", \"isDismissable\", \"isKeyboardDismissDisabled\"]);\n\n  let domRef = useDOMRef(ref);\n  let {\n    styleProps\n  } = useStyleProps(props);\n  return /*#__PURE__*/_react.createElement(Overlay, otherProps, /*#__PURE__*/_react.createElement($facde3dde95c50b545b1ceb8303a7b3d$export$Underlay, null), /*#__PURE__*/_react.createElement($e95c536af9708d8f08fc5947c704fa3$var$ModalWrapper, _babelRuntimeHelpersEsmExtends({}, styleProps, {\n    onClose: onClose,\n    type: type,\n    isDismissable: isDismissable,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    ref: domRef\n  }), children));\n}\n\nlet $e95c536af9708d8f08fc5947c704fa3$var$typeMap = {\n  fullscreen: 'fullscreen',\n  fullscreenTakeover: 'fullscreenTakeover'\n};\nvar $e88425c760534ecdce642e453299664b$$interop$default = $parcel$interopDefault($e88425c760534ecdce642e453299664b$exports);\nlet $e95c536af9708d8f08fc5947c704fa3$var$ModalWrapper = forwardRef(function (props, ref) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {\n    children,\n    isOpen,\n    type\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"isOpen\", \"type\", \"isDismissable\", \"isKeyboardDismissDisabled\"]);\n\n  let typeVariant = $e95c536af9708d8f08fc5947c704fa3$var$typeMap[type];\n  let {\n    overlayProps\n  } = useOverlay(props, ref);\n  usePreventScroll();\n  let {\n    modalProps\n  } = useModal();\n  let wrapperClassName = classNames($e88425c760534ecdce642e453299664b$$interop$default, 'spectrum-Modal-wrapper', classNames($a5bfb13c9743494ac49cc710f8330$$interop$default, 'spectrum-Modal-wrapper', 'react-spectrum-Modal-wrapper'));\n  let modalClassName = classNames($e88425c760534ecdce642e453299664b$$interop$default, 'spectrum-Modal', {\n    'is-open': isOpen\n  }, classNames($a5bfb13c9743494ac49cc710f8330$$interop$default, 'spectrum-Modal', 'react-spectrum-Modal'), {\n    [\"spectrum-Modal--\" + typeVariant]: typeVariant\n  }, otherProps.className);\n  let viewport = useViewportSize();\n  let style = {\n    '--spectrum-visual-viewport-height': viewport.height + 'px'\n  };\n  return /*#__PURE__*/_react.createElement(\"div\", {\n    className: wrapperClassName,\n    style: style\n  }, /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, mergeProps(otherProps, overlayProps, modalProps), {\n    ref: ref,\n    className: modalClassName\n  }), children));\n});\nexport let Modal = forwardRef($e95c536af9708d8f08fc5947c704fa3$var$Modal); // ASSET: /Users/govett/dev/react-spectrum-v3/node_modules/@adobe/spectrum-css-temp/components/tray/vars.css\n\nvar $ac11f5461729b20d6ef4577bcba724$exports = {};\n$ac11f5461729b20d6ef4577bcba724$exports = {\n  \"spectrum-Tray\": \"_spectrum-Tray_8bca2\",\n  \"is-open\": \"_is-open_8bca2\",\n  \"spectrum-Tray-wrapper\": \"_spectrum-Tray-wrapper_8bca2\",\n  \"spectrum-Tray--fixedHeight\": \"_spectrum-Tray--fixedHeight_8bca2\"\n};\n\nfunction $beb29a978949a31ec0bff450b4dc$var$Tray(props, ref) {\n  let {\n    children,\n    onClose,\n    shouldCloseOnBlur,\n    isKeyboardDismissDisabled,\n    isFixedHeight,\n    isNonModal\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"onClose\", \"shouldCloseOnBlur\", \"isKeyboardDismissDisabled\", \"isFixedHeight\", \"isNonModal\"]);\n\n  let domRef = useDOMRef(ref);\n  let {\n    styleProps\n  } = useStyleProps(props);\n  return /*#__PURE__*/_react.createElement(Overlay, otherProps, /*#__PURE__*/_react.createElement($facde3dde95c50b545b1ceb8303a7b3d$export$Underlay, null), /*#__PURE__*/_react.createElement($beb29a978949a31ec0bff450b4dc$var$TrayWrapper, _babelRuntimeHelpersEsmExtends({}, styleProps, {\n    onClose: onClose,\n    shouldCloseOnBlur: shouldCloseOnBlur,\n    isKeyboardDismissDisabled: isKeyboardDismissDisabled,\n    ref: domRef,\n    isFixedHeight: isFixedHeight,\n    isNonModal: isNonModal\n  }), children));\n}\n\nvar $ac11f5461729b20d6ef4577bcba724$$interop$default = $parcel$interopDefault($ac11f5461729b20d6ef4577bcba724$exports);\nlet $beb29a978949a31ec0bff450b4dc$var$TrayWrapper = forwardRef(function (props, ref) {\n  let {\n    children,\n    isOpen,\n    isFixedHeight,\n    isNonModal\n  } = props,\n      otherProps = _babelRuntimeHelpersEsmObjectWithoutPropertiesLoose(props, [\"children\", \"isOpen\", \"shouldCloseOnBlur\", \"isKeyboardDismissDisabled\", \"isFixedHeight\", \"isNonModal\"]);\n\n  let {\n    overlayProps\n  } = useOverlay(_babelRuntimeHelpersEsmExtends({}, props, {\n    isDismissable: true\n  }), ref);\n  usePreventScroll();\n  let {\n    modalProps\n  } = useModal({\n    isDisabled: isNonModal\n  }); // We need to measure the window's height in JS rather than using percentages in CSS\n  // so that contents (e.g. menu) can inherit the max-height properly. Using percentages\n  // does not work properly because there is nothing to base the percentage on.\n  // We cannot use vh units because mobile browsers adjust the window height dynamically\n  // when the address bar/bottom toolbars show and hide on scroll and vh units are fixed.\n  // Also, the visual viewport is smaller than the layout viewport when the virtual keyboard\n  // is up, so use the VisualViewport API to ensure the tray is displayed above the keyboard.\n\n  let viewport = useViewportSize();\n  let [height, setHeight] = useState(viewport.height);\n  let timeoutRef = useRef();\n  useEffect(() => {\n    clearTimeout(timeoutRef.current); // When the height is decreasing, and the keyboard is visible\n    // (visual viewport smaller than layout viewport), delay setting\n    // the new max height until after the animation is complete\n    // so that there isn't an empty space under the tray briefly.\n\n    if (viewport.height < height && viewport.height < window.innerHeight) {\n      timeoutRef.current = setTimeout(() => {\n        setHeight(viewport.height);\n      }, 500);\n    } else {\n      setHeight(viewport.height);\n    }\n  }, [height, viewport.height]);\n  let wrapperStyle = {\n    '--spectrum-visual-viewport-height': height + 'px'\n  };\n  let wrapperClassName = classNames($ac11f5461729b20d6ef4577bcba724$$interop$default, 'spectrum-Tray-wrapper');\n  let className = classNames($ac11f5461729b20d6ef4577bcba724$$interop$default, 'spectrum-Tray', {\n    'is-open': isOpen,\n    'spectrum-Tray--fixedHeight': isFixedHeight\n  }, classNames($a5bfb13c9743494ac49cc710f8330$$interop$default, 'spectrum-Tray', 'react-spectrum-Tray'), otherProps.className);\n  let domProps = mergeProps(otherProps, overlayProps);\n  return /*#__PURE__*/_react.createElement(\"div\", {\n    className: wrapperClassName,\n    style: wrapperStyle\n  }, /*#__PURE__*/_react.createElement(\"div\", _babelRuntimeHelpersEsmExtends({}, domProps, modalProps, {\n    className: className,\n    ref: ref\n  }), children));\n});\nexport let Tray = forwardRef($beb29a978949a31ec0bff450b4dc$var$Tray);","map":{"version":3,"sources":["node_modules/@parcel/scope-hoisting/lib/helpers.js","packages/@react-spectrum/overlays/src/OpenTransition.tsx","packages/@react-spectrum/overlays/src/Overlay.tsx","packages/@react-spectrum/overlays/src/overlays.css","node_modules/@adobe/spectrum-css-temp/components/popover/vars.css","packages/@react-spectrum/overlays/src/Popover.tsx","node_modules/@adobe/spectrum-css-temp/components/modal/vars.css","node_modules/@adobe/spectrum-css-temp/components/underlay/vars.css","packages/@react-spectrum/overlays/src/Underlay.tsx","packages/@react-spectrum/overlays/src/Modal.tsx","node_modules/@adobe/spectrum-css-temp/components/tray/vars.css","packages/@react-spectrum/overlays/src/Tray.tsx"],"names":["a","OPEN_STATES","entering","entered","enter","exit","state","props","child","isOpen","onExited","useState","handleEntered","useCallback","setExited","onEntered","handleExited","mountOverlay","contents","background","isolation","ReactDOM","container","document","_Overlay","React","arrowPlacement","left","right","top","bottom","isNonModal","otherProps","domRef","useDOMRef","styleProps","useStyleProps","PopoverWrapper","forwardRef","placement","overlayProps","useOverlay","isDismissable","modalProps","useModal","isDisabled","mergeProps","classNames","hideArrow","ROOT_2","Math","ref","useRef","useLayoutEffect","spectrumTipWidth","window","setSize","parseInt","spectrumBorderWidth","setBorderWidth","landscape","mirror","borderDiagonal","borderWidth","halfBorderDiagonal","secondary","primary","size","primaryStart","primaryEnd","secondaryStart","secondaryMiddle","secondaryEnd","pathData","arrowProps","_Popover","isKeyboardDismissDisabled","typeMap","fullscreen","fullscreenTakeover","ModalWrapper","type","typeVariant","usePreventScroll","wrapperClassName","modalClassName","viewport","useViewportSize","style","_Modal","TrayWrapper","timeoutRef","useEffect","clearTimeout","setTimeout","setHeight","wrapperStyle","height","className","isFixedHeight","domProps","_Tray"],"mappings":"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","sourcesContent":["function $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\nfunction $parcel$defineInteropFlag(a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n}\n\nfunction $parcel$exportWildcard(dest, source) {\n  Object.keys(source).forEach(function(key) {\n    if (key === 'default' || key === '__esModule') {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function get() {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n}\n\nfunction $parcel$missingModule(name) {\n  var err = new Error(\"Cannot find module '\" + name + \"'\");\n  err.code = 'MODULE_NOT_FOUND';\n  throw err;\n}\n\nvar $parcel$global =\n  typeof globalThis !== 'undefined'\n    ? globalThis\n    : typeof self !== 'undefined'\n    ? self\n    : typeof window !== 'undefined'\n    ? window\n    : typeof global !== 'undefined'\n    ? global\n    : {};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport React from 'react';\nimport Transition from 'react-transition-group/Transition';\n\nconst OPEN_STATES = {\n  entering: false,\n  entered: true\n};\n\n/**\n * Timeout issues adding css animations to enter may be related to\n * https://github.com/reactjs/react-transition-group/issues/189 or\n * https://github.com/reactjs/react-transition-group/issues/22\n * my VM isn't good enough to debug accurately and get a better answer.\n *\n * As a result, use enter 0 so that is-open is applied once entered\n * it doesn't matter if we know when the css-animation is done on entering\n * for exiting though, give time for the css-animation to play\n * before removing from the DOM\n * **note** hitting esc bypasses exit animation for anyone testing.\n */\n\nexport function OpenTransition(props) {\n  return (\n    <Transition timeout={{enter: 0, exit: 350}} {...props}>\n      {(state) => React.Children.map(props.children, child => child && React.cloneElement(child, {isOpen: !!OPEN_STATES[state]}))}\n    </Transition>\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMRef} from '@react-types/shared';\nimport {OpenTransition} from './OpenTransition';\nimport {OverlayProps} from '@react-types/overlays';\nimport {Provider} from '@react-spectrum/provider';\nimport React, {useCallback, useState} from 'react';\nimport ReactDOM from 'react-dom';\n\nfunction Overlay(props: OverlayProps, ref: DOMRef<HTMLDivElement>) {\n  let {children, isOpen, container, onEnter, onEntering, onEntered, onExit, onExiting, onExited} = props;\n  let [exited, setExited] = useState(!isOpen);\n\n  let handleEntered = useCallback(() => {\n    setExited(false);\n    if (onEntered) {\n      onEntered();\n    }\n  }, [onEntered]);\n\n  let handleExited = useCallback(() => {\n    setExited(true);\n    if (onExited) {\n      onExited();\n    }\n  }, [onExited]);\n\n  // Don't un-render the overlay while it's transitioning out.\n  let mountOverlay = isOpen || !exited;\n  if (!mountOverlay) {\n    // Don't bother showing anything if we don't have to.\n    return null;\n  }\n\n  let contents = (\n    <Provider ref={ref} UNSAFE_style={{background: 'transparent', isolation: 'isolate'}}>\n      <OpenTransition\n        in={isOpen}\n        appear\n        onExit={onExit}\n        onExiting={onExiting}\n        onExited={handleExited}\n        onEnter={onEnter}\n        onEntering={onEntering}\n        onEntered={handleEntered}>\n        {children}\n      </OpenTransition>\n    </Provider>\n  );\n\n  return ReactDOM.createPortal(contents, container || document.body);\n}\n\nlet _Overlay = React.forwardRef(Overlay);\nexport {_Overlay as Overlay};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n.spectrum-Popover {\n  /* This makes the contents of popovers focusable immediately, without waiting\n     a frame for animations to start. */\n  &.react-spectrum-Popover {\n    visibility: visible;\n  }\n\n  .spectrum-Dialog-content {\n    max-height: initial;\n  }\n}\n\n.spectrum-Modal-wrapper.react-spectrum-Modal-wrapper,\n.spectrum-Modal.react-spectrum-Modal {\n  visibility: visible;\n}\n\n.spectrum-Tray.react-spectrum-Tray {\n  visibility: visible;\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {mergeProps, useLayoutEffect} from '@react-aria/utils';\nimport {Overlay} from './Overlay';\nimport overrideStyles from './overlays.css';\nimport {PlacementAxis, PopoverProps} from '@react-types/overlays';\nimport React, {forwardRef, HTMLAttributes, ReactNode, RefObject, useRef, useState} from 'react';\nimport styles from '@adobe/spectrum-css-temp/components/popover/vars.css';\nimport {useModal, useOverlay} from '@react-aria/overlays';\n\ninterface PopoverWrapperProps extends HTMLAttributes<HTMLElement> {\n  children: ReactNode,\n  placement?: PlacementAxis,\n  arrowProps?: HTMLAttributes<HTMLElement>,\n  hideArrow?: boolean,\n  isOpen?: boolean,\n  onClose?: () => void,\n  shouldCloseOnBlur?: boolean,\n  isKeyboardDismissDisabled?: boolean,\n  isNonModal?: boolean\n}\n\n/**\n * Arrow placement can be done pointing right or down because those paths start at 0, x or y. Because the\n * other two don't, they start at a fractional pixel value, it introduces rounding differences between browsers and\n * between display types (retina with subpixels vs not retina). By flipping them with CSS we can ensure that\n * the path always starts at 0 so that it perfectly overlaps the popover's border.\n * See bottom of file for more explanation.\n */\nlet arrowPlacement = {\n  left: 'right',\n  right: 'right',\n  top: 'bottom',\n  bottom: 'bottom'\n};\n\nfunction Popover(props: PopoverProps, ref: DOMRef<HTMLDivElement>) {\n  let {children, placement, arrowProps, onClose, shouldCloseOnBlur, hideArrow, isKeyboardDismissDisabled, isNonModal, ...otherProps} = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(props);\n\n  return (\n    <Overlay {...otherProps}>\n      <PopoverWrapper\n        {...styleProps}\n        ref={domRef}\n        placement={placement}\n        arrowProps={arrowProps}\n        onClose={onClose}\n        shouldCloseOnBlur={shouldCloseOnBlur}\n        isKeyboardDismissDisabled={isKeyboardDismissDisabled}\n        hideArrow={hideArrow}\n        isNonModal={isNonModal}>\n        {children}\n      </PopoverWrapper>\n    </Overlay>\n  );\n}\n\nconst PopoverWrapper = forwardRef((props: PopoverWrapperProps, ref: RefObject<HTMLDivElement>) => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, placement = 'bottom', arrowProps, isOpen, hideArrow, shouldCloseOnBlur, isKeyboardDismissDisabled, isNonModal, ...otherProps} = props;\n  let {overlayProps} = useOverlay({...props, isDismissable: true}, ref);\n  let {modalProps} = useModal({\n    isDisabled: isNonModal\n  });\n\n  return (\n    <div\n      {...mergeProps(otherProps, overlayProps, modalProps)}\n      ref={ref}\n      className={\n        classNames(\n          styles,\n          'spectrum-Popover',\n          `spectrum-Popover--${placement}`,\n          {\n            'spectrum-Popover--withTip': !hideArrow,\n            'is-open': isOpen\n          },\n          classNames(\n            overrideStyles,\n            'spectrum-Popover',\n            'react-spectrum-Popover'\n          ),\n          otherProps.className\n        )\n      }\n      role=\"presentation\"\n      data-testid=\"popover\">\n      {children}\n      {hideArrow ? null : (\n        <Arrow arrowProps={arrowProps} direction={arrowPlacement[placement]} />\n      )}\n    </div>\n  );\n});\n\nlet ROOT_2 = Math.sqrt(2);\n\nfunction Arrow(props) {\n  let [size, setSize] = useState(20);\n  let [borderWidth, setBorderWidth] = useState(1);\n  let ref = useRef();\n  // get the css value for the tip size and divide it by 2 for this arrow implementation\n  useLayoutEffect(() => {\n    if (ref.current) {\n      let spectrumTipWidth = window.getComputedStyle(ref.current)\n        .getPropertyValue('--spectrum-popover-tip-size');\n      if (spectrumTipWidth !== '') {\n        setSize(parseInt(spectrumTipWidth, 10) / 2);\n      }\n\n      let spectrumBorderWidth = window.getComputedStyle(ref.current)\n        .getPropertyValue('--spectrum-popover-tip-borderWidth');\n      if (spectrumBorderWidth !== '') {\n        setBorderWidth(parseInt(spectrumBorderWidth, 10));\n      }\n    }\n  }, [ref]);\n\n  let landscape = props.direction === 'top' || props.direction === 'bottom';\n  let mirror = props.direction === 'left' || props.direction === 'top';\n\n  let borderDiagonal = borderWidth * ROOT_2;\n  let halfBorderDiagonal = borderDiagonal / 2;\n\n  let secondary = 2 * size + 2 * borderDiagonal;\n  let primary = size + borderDiagonal;\n\n  let primaryStart = mirror ? primary : 0;\n  let primaryEnd = mirror ? halfBorderDiagonal : primary - halfBorderDiagonal;\n\n  let secondaryStart = halfBorderDiagonal;\n  let secondaryMiddle = secondary / 2;\n  let secondaryEnd = secondary - halfBorderDiagonal;\n\n  let pathData = landscape ? [\n    'M', secondaryStart, primaryStart,\n    'L', secondaryMiddle, primaryEnd,\n    'L', secondaryEnd, primaryStart\n  ] : [\n    'M', primaryStart, secondaryStart,\n    'L', primaryEnd, secondaryMiddle,\n    'L', primaryStart, secondaryEnd\n  ];\n  let arrowProps = props.arrowProps;\n\n  /* use ceil because the svg needs to always accomodate the path inside it */\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/svg/2000\"\n      width={Math.ceil(landscape ? secondary : primary)}\n      height={Math.ceil(landscape ? primary : secondary)}\n      style={props.style}\n      className={classNames(styles, 'spectrum-Popover-tip')}\n      ref={ref}\n      {...arrowProps}>\n      <path className={classNames(styles, 'spectrum-Popover-tip-triangle')} d={pathData.join(' ')} />\n    </svg>\n  );\n}\n\nlet _Popover = forwardRef(Popover);\nexport {_Popover as Popover};\n\n/**\n * More explanation on popover tips.\n * - I tried changing the calculation of the popover placement in an effort to get it squarely onto the pixel grid.\n * This did not work because the problem was in the svg partial pixel end of the path in the popover right and popover bottom.\n * - I tried creating an extra 'bandaid' path that matched the background color and would overlap the popover border.\n * This didn't work because the border on the svg triangle didn't extend all the way to match nicely with the popover border.\n * - I tried getting the client bounding box and setting the svg to that partial pixel value\n * This didn't work because again the issue was inside the svg\n * - I didn't try drawing the svg backwards\n * This could still be tried\n * - I tried changing the calculation of the popover placement AND the svg height/width so that they were all rounded\n * This seems to have done the trick.\n */\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames} from '@react-spectrum/utils';\nimport React from 'react';\nimport underlayStyles from '@adobe/spectrum-css-temp/components/underlay/vars.css';\n\ninterface UnderlayProps {\n  isOpen?: boolean\n}\n\nexport function Underlay({isOpen}: UnderlayProps) {\n  return (\n    <div className={classNames(underlayStyles, 'spectrum-Underlay', {'is-open': isOpen})} />\n  );\n}\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {mergeProps, useViewportSize} from '@react-aria/utils';\nimport {ModalProps} from '@react-types/overlays';\nimport modalStyles from '@adobe/spectrum-css-temp/components/modal/vars.css';\nimport {Overlay} from './Overlay';\nimport overrideStyles from './overlays.css';\nimport React, {forwardRef, HTMLAttributes, ReactNode, RefObject} from 'react';\nimport {Underlay} from './Underlay';\nimport {useModal, useOverlay, usePreventScroll} from '@react-aria/overlays';\n\ninterface ModalWrapperProps extends HTMLAttributes<HTMLElement> {\n  children: ReactNode,\n  isOpen?: boolean,\n  onClose?: () => void,\n  type?: 'modal' | 'fullscreen' | 'fullscreenTakeover',\n  isDismissable?: boolean,\n  isKeyboardDismissDisabled?: boolean\n}\n\nfunction Modal(props: ModalProps, ref: DOMRef<HTMLDivElement>) {\n  let {children, onClose, type, isDismissable, isKeyboardDismissDisabled, ...otherProps} = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(props);\n\n  return (\n    <Overlay {...otherProps}>\n      <Underlay />\n      <ModalWrapper\n        {...styleProps}\n        onClose={onClose}\n        type={type}\n        isDismissable={isDismissable}\n        isKeyboardDismissDisabled={isKeyboardDismissDisabled}\n        ref={domRef}>\n        {children}\n      </ModalWrapper>\n    </Overlay>\n  );\n}\n\nlet typeMap = {\n  fullscreen: 'fullscreen',\n  fullscreenTakeover: 'fullscreenTakeover'\n};\n\nlet ModalWrapper = forwardRef(function (props: ModalWrapperProps, ref: RefObject<HTMLDivElement>) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, isOpen, type, isDismissable, isKeyboardDismissDisabled, ...otherProps} = props;\n  let typeVariant = typeMap[type];\n\n  let {overlayProps} = useOverlay(props, ref);\n  usePreventScroll();\n  let {modalProps} = useModal();\n\n  let wrapperClassName = classNames(\n    modalStyles,\n    'spectrum-Modal-wrapper',\n    classNames(\n      overrideStyles,\n      'spectrum-Modal-wrapper',\n      'react-spectrum-Modal-wrapper'\n    )\n  );\n\n  let modalClassName = classNames(\n    modalStyles,\n    'spectrum-Modal',\n    {\n      'is-open': isOpen\n    },\n    classNames(\n      overrideStyles,\n      'spectrum-Modal',\n      'react-spectrum-Modal'\n    ),\n    {[`spectrum-Modal--${typeVariant}`]: typeVariant},\n    otherProps.className\n  );\n\n  let viewport = useViewportSize();\n  let style: any = {\n    '--spectrum-visual-viewport-height': viewport.height + 'px'\n  };\n\n  return (\n    <div className={wrapperClassName} style={style}>\n      <div\n        {...mergeProps(otherProps, overlayProps, modalProps)}\n        ref={ref}\n        className={modalClassName}\n        data-testid=\"modal\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nlet _Modal = forwardRef(Modal);\nexport {_Modal as Modal};\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n@import './index.css';\n@import './skin.css';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {classNames, useDOMRef, useStyleProps} from '@react-spectrum/utils';\nimport {DOMRef} from '@react-types/shared';\nimport {mergeProps, useViewportSize} from '@react-aria/utils';\nimport {Overlay} from './Overlay';\nimport overrideStyles from './overlays.css';\nimport React, {forwardRef, HTMLAttributes, ReactNode, RefObject, useEffect, useRef, useState} from 'react';\nimport {TrayProps} from '@react-types/overlays';\nimport trayStyles from '@adobe/spectrum-css-temp/components/tray/vars.css';\nimport {Underlay} from './Underlay';\nimport {useModal, useOverlay, usePreventScroll} from '@react-aria/overlays';\n\ninterface TrayWrapperProps extends HTMLAttributes<HTMLElement> {\n  children: ReactNode,\n  isOpen?: boolean,\n  onClose?: () => void,\n  shouldCloseOnBlur?: boolean,\n  isKeyboardDismissDisabled?: boolean,\n  isFixedHeight?: boolean,\n  isNonModal?: boolean\n}\n\nfunction Tray(props: TrayProps, ref: DOMRef<HTMLDivElement>) {\n  let {children, onClose, shouldCloseOnBlur, isKeyboardDismissDisabled, isFixedHeight, isNonModal, ...otherProps} = props;\n  let domRef = useDOMRef(ref);\n  let {styleProps} = useStyleProps(props);\n\n  return (\n    <Overlay {...otherProps}>\n      <Underlay />\n      <TrayWrapper\n        {...styleProps}\n        onClose={onClose}\n        shouldCloseOnBlur={shouldCloseOnBlur}\n        isKeyboardDismissDisabled={isKeyboardDismissDisabled}\n        ref={domRef}\n        isFixedHeight={isFixedHeight}\n        isNonModal={isNonModal}>\n        {children}\n      </TrayWrapper>\n    </Overlay>\n  );\n}\n\nlet TrayWrapper = forwardRef(function (props: TrayWrapperProps, ref: RefObject<HTMLDivElement>) {\n  let {\n    children,\n    isOpen,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    shouldCloseOnBlur,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    isKeyboardDismissDisabled,\n    isFixedHeight,\n    isNonModal,\n    ...otherProps\n  } = props;\n  let {overlayProps} = useOverlay({...props, isDismissable: true}, ref);\n  usePreventScroll();\n  let {modalProps} = useModal({\n    isDisabled: isNonModal\n  });\n\n  // We need to measure the window's height in JS rather than using percentages in CSS\n  // so that contents (e.g. menu) can inherit the max-height properly. Using percentages\n  // does not work properly because there is nothing to base the percentage on.\n  // We cannot use vh units because mobile browsers adjust the window height dynamically\n  // when the address bar/bottom toolbars show and hide on scroll and vh units are fixed.\n  // Also, the visual viewport is smaller than the layout viewport when the virtual keyboard\n  // is up, so use the VisualViewport API to ensure the tray is displayed above the keyboard.\n  let viewport = useViewportSize();\n  let [height, setHeight] = useState(viewport.height);\n  let timeoutRef = useRef<any>();\n\n  useEffect(() => {\n    clearTimeout(timeoutRef.current);\n\n    // When the height is decreasing, and the keyboard is visible\n    // (visual viewport smaller than layout viewport), delay setting\n    // the new max height until after the animation is complete\n    // so that there isn't an empty space under the tray briefly.\n    if (viewport.height < height && viewport.height < window.innerHeight) {\n      timeoutRef.current = setTimeout(() => {\n        setHeight(viewport.height);\n      }, 500);\n    } else {\n      setHeight(viewport.height);\n    }\n  }, [height, viewport.height]);\n\n  let wrapperStyle: any = {\n    '--spectrum-visual-viewport-height': height + 'px'\n  };\n\n  let wrapperClassName = classNames(\n    trayStyles,\n    'spectrum-Tray-wrapper'\n  );\n\n  let className = classNames(\n    trayStyles,\n    'spectrum-Tray',\n    {\n      'is-open': isOpen,\n      'spectrum-Tray--fixedHeight': isFixedHeight\n    },\n    classNames(\n      overrideStyles,\n      'spectrum-Tray',\n      'react-spectrum-Tray'\n    ),\n    otherProps.className\n  );\n\n  let domProps = mergeProps(otherProps, overlayProps);\n\n  return (\n    <div className={wrapperClassName} style={wrapperStyle}>\n      <div\n        {...domProps}\n        {...modalProps}\n        className={className}\n        ref={ref}\n        data-testid=\"tray\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nlet _Tray = forwardRef(Tray);\nexport {_Tray as Tray};\n"]},"metadata":{},"sourceType":"module"}